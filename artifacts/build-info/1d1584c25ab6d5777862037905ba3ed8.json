{
	"id": "1d1584c25ab6d5777862037905ba3ed8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC1967.sol": {
				"content": "\r\n\r\n// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.24;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\r\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\r\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\r\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\r\n *\r\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\r\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\r\n * case an upgrade adds a module that needs to be initialized.\r\n *\r\n * For example:\r\n *\r\n * [.hljs-theme-light.nopadding]\r\n * ```solidity\r\n * contract MyToken is ERC20Upgradeable {\r\n *     function initialize() initializer public {\r\n *         __ERC20_init(\"MyToken\", \"MTK\");\r\n *     }\r\n * }\r\n *\r\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\r\n *     function initializeV2() reinitializer(2) public {\r\n *         __ERC20Permit_init(\"MyToken\");\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\r\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\r\n *\r\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\r\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\r\n *\r\n * [CAUTION]\r\n * ====\r\n * Avoid leaving a contract uninitialized.\r\n *\r\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\r\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\r\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\r\n *\r\n * [.hljs-theme-light.nopadding]\r\n * ```\r\n * /// @custom:oz-upgrades-unsafe-allow constructor\r\n * constructor() {\r\n *     _disableInitializers();\r\n * }\r\n * ```\r\n * ====\r\n */\r\nabstract contract Initializable {\r\n    /**\r\n     * @dev Storage of the initializable contract.\r\n     *\r\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\r\n     * when using with upgradeable contracts.\r\n     *\r\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\r\n     */\r\n    struct InitializableStorage {\r\n        /**\r\n         * @dev Indicates that the contract has been initialized.\r\n         */\r\n        uint64 _initialized;\r\n        /**\r\n         * @dev Indicates that the contract is in the process of being initialized.\r\n         */\r\n        bool _initializing;\r\n    }\r\n\r\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\r\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\r\n\r\n    /**\r\n     * @dev The contract is already initialized.\r\n     */\r\n    error InvalidInitialization();\r\n\r\n    /**\r\n     * @dev The contract is not initializing.\r\n     */\r\n    error NotInitializing();\r\n\r\n    /**\r\n     * @dev Triggered when the contract has been initialized or reinitialized.\r\n     */\r\n    event Initialized(uint64 version);\r\n\r\n    /**\r\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\r\n     * `onlyInitializing` functions can be used to initialize parent contracts.\r\n     *\r\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\r\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\r\n     * production.\r\n     *\r\n     * Emits an {Initialized} event.\r\n     */\r\n    modifier initializer() {\r\n        // solhint-disable-next-line var-name-mixedcase\r\n        InitializableStorage storage $ = _getInitializableStorage();\r\n\r\n        // Cache values to avoid duplicated sloads\r\n        bool isTopLevelCall = !$._initializing;\r\n        uint64 initialized = $._initialized;\r\n\r\n        // Allowed calls:\r\n        // - initialSetup: the contract is not in the initializing state and no previous version was\r\n        //                 initialized\r\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\r\n        //                 current contract is just being deployed\r\n        bool initialSetup = initialized == 0 && isTopLevelCall;\r\n        bool construction = initialized == 1 && address(this).code.length == 0;\r\n\r\n        if (!initialSetup && !construction) {\r\n            revert InvalidInitialization();\r\n        }\r\n        $._initialized = 1;\r\n        if (isTopLevelCall) {\r\n            $._initializing = true;\r\n        }\r\n        _;\r\n        if (isTopLevelCall) {\r\n            $._initializing = false;\r\n            emit Initialized(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\r\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\r\n     * used to initialize parent contracts.\r\n     *\r\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\r\n     * are added through upgrades and that require initialization.\r\n     *\r\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\r\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\r\n     *\r\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\r\n     * a contract, executing them in the right order is up to the developer or operator.\r\n     *\r\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\r\n     *\r\n     * Emits an {Initialized} event.\r\n     */\r\n    modifier reinitializer(uint64 version) {\r\n        // solhint-disable-next-line var-name-mixedcase\r\n        InitializableStorage storage $ = _getInitializableStorage();\r\n\r\n        if ($._initializing || $._initialized >= version) {\r\n            revert InvalidInitialization();\r\n        }\r\n        $._initialized = version;\r\n        $._initializing = true;\r\n        _;\r\n        $._initializing = false;\r\n        emit Initialized(version);\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\r\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\r\n     */\r\n    modifier onlyInitializing() {\r\n        _checkInitializing();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\r\n     */\r\n    function _checkInitializing() internal view virtual {\r\n        if (!_isInitializing()) {\r\n            revert NotInitializing();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\r\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\r\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\r\n     * through proxies.\r\n     *\r\n     * Emits an {Initialized} event the first time it is successfully executed.\r\n     */\r\n    function _disableInitializers() internal virtual {\r\n        // solhint-disable-next-line var-name-mixedcase\r\n        InitializableStorage storage $ = _getInitializableStorage();\r\n\r\n        if ($._initializing) {\r\n            revert InvalidInitialization();\r\n        }\r\n        if ($._initialized != type(uint64).max) {\r\n            $._initialized = type(uint64).max;\r\n            emit Initialized(type(uint64).max);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\r\n     */\r\n    function _getInitializedVersion() internal view returns (uint64) {\r\n        return _getInitializableStorage()._initialized;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\r\n     */\r\n    function _isInitializing() internal view returns (bool) {\r\n        return _getInitializableStorage()._initializing;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a pointer to the storage namespace.\r\n     */\r\n    // solhint-disable-next-line var-name-mixedcase\r\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\r\n        assembly {\r\n            $.slot := INITIALIZABLE_STORAGE\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract ContextUpgradeable is Initializable {\r\n    function __Context_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __Context_init_unchained() internal onlyInitializing {\r\n    }\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n\r\n// File: @openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n */\r\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\r\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\r\n    struct ERC20Storage {\r\n        mapping(address account => uint256) _balances;\r\n\r\n        mapping(address account => mapping(address spender => uint256)) _allowances;\r\n\r\n        uint256 _totalSupply;\r\n\r\n        string _name;\r\n        string _symbol;\r\n    }\r\n\r\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\r\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\r\n\r\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\r\n        assembly {\r\n            $.slot := ERC20StorageLocation\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\r\n        __ERC20_init_unchained(name_, symbol_);\r\n    }\r\n\r\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\r\n        ERC20Storage storage $ = _getERC20Storage();\r\n        $._name = name_;\r\n        $._symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        ERC20Storage storage $ = _getERC20Storage();\r\n        return $._name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        ERC20Storage storage $ = _getERC20Storage();\r\n        return $._symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        ERC20Storage storage $ = _getERC20Storage();\r\n        return $._totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        ERC20Storage storage $ = _getERC20Storage();\r\n        return $._balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        ERC20Storage storage $ = _getERC20Storage();\r\n        return $._allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        ERC20Storage storage $ = _getERC20Storage();\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            $._totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = $._balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                $._balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                $._totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                $._balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     * ```\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        ERC20Storage storage $ = _getERC20Storage();\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        $._allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\r\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\r\n    struct OwnableStorage {\r\n        address _owner;\r\n    }\r\n\r\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\r\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\r\n\r\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\r\n        assembly {\r\n            $.slot := OwnableStorageLocation\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\r\n        __Ownable_init_unchained(initialOwner);\r\n    }\r\n\r\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        OwnableStorage storage $ = _getOwnableStorage();\r\n        return $._owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        OwnableStorage storage $ = _getOwnableStorage();\r\n        address oldOwner = $._owner;\r\n        $._owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/interfaces/draft-IERC1822.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\r\n * proxy whose upgrades are fully controlled by the current implementation.\r\n */\r\ninterface IERC1822Proxiable {\r\n    /**\r\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\r\n     * address.\r\n     *\r\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\r\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\r\n     * function revert if invoked through a proxy.\r\n     */\r\n    function proxiableUUID() external view returns (bytes32);\r\n}\r\n\r\n// File: @openzeppelin/contracts/proxy/beacon/IBeacon.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\r\n */\r\ninterface IBeacon {\r\n    /**\r\n     * @dev Must return an address that can be used as a delegate call target.\r\n     *\r\n     * {UpgradeableBeacon} will check that this address is a contract.\r\n     */\r\n    function implementation() external view returns (address);\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/Address.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev The ETH balance of the account is not enough to perform the operation.\r\n     */\r\n    error AddressInsufficientBalance(address account);\r\n\r\n    /**\r\n     * @dev There's no code at `target` (it is not a contract).\r\n     */\r\n    error AddressEmptyCode(address target);\r\n\r\n    /**\r\n     * @dev A call to an address target failed. The target may have reverted.\r\n     */\r\n    error FailedInnerCall();\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        if (address(this).balance < amount) {\r\n            revert AddressInsufficientBalance(address(this));\r\n        }\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        if (!success) {\r\n            revert FailedInnerCall();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason or custom error, it is bubbled\r\n     * up by this function (like regular Solidity function calls). However, if\r\n     * the call reverted with no returned reason, this function reverts with a\r\n     * {FailedInnerCall} error.\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        if (address(this).balance < value) {\r\n            revert AddressInsufficientBalance(address(this));\r\n        }\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\r\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\r\n     * unsuccessful call.\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata\r\n    ) internal view returns (bytes memory) {\r\n        if (!success) {\r\n            _revert(returndata);\r\n        } else {\r\n            // only check if target is a contract if the call was successful and the return data is empty\r\n            // otherwise we already know that it was a contract\r\n            if (returndata.length == 0 && target.code.length == 0) {\r\n                revert AddressEmptyCode(target);\r\n            }\r\n            return returndata;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\r\n     * revert reason or with a default {FailedInnerCall} error.\r\n     */\r\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\r\n        if (!success) {\r\n            _revert(returndata);\r\n        } else {\r\n            return returndata;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\r\n     */\r\n    function _revert(bytes memory returndata) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert FailedInnerCall();\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\r\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC1967 implementation slot:\r\n * ```solidity\r\n * contract ERC1967 {\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(newImplementation.code.length > 0);\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n */\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    struct StringSlot {\r\n        string value;\r\n    }\r\n\r\n    struct BytesSlot {\r\n        bytes value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\r\n     */\r\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\r\n     */\r\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\r\n     */\r\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev This abstract contract provides getters and event emitting update functions for\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\r\n */\r\nlibrary ERC1967Utils {\r\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\r\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Emitted when the admin account has changed.\r\n     */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n     * @dev Emitted when the beacon is changed.\r\n     */\r\n    event BeaconUpgraded(address indexed beacon);\r\n\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\r\n     */\r\n    // solhint-disable-next-line private-vars-leading-underscore\r\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @dev The `implementation` of the proxy is invalid.\r\n     */\r\n    error ERC1967InvalidImplementation(address implementation);\r\n\r\n    /**\r\n     * @dev The `admin` of the proxy is invalid.\r\n     */\r\n    error ERC1967InvalidAdmin(address admin);\r\n\r\n    /**\r\n     * @dev The `beacon` of the proxy is invalid.\r\n     */\r\n    error ERC1967InvalidBeacon(address beacon);\r\n\r\n    /**\r\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\r\n     */\r\n    error ERC1967NonPayable();\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function getImplementation() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 implementation slot.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        if (newImplementation.code.length == 0) {\r\n            revert ERC1967InvalidImplementation(newImplementation);\r\n        }\r\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\r\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\r\n     * to avoid stuck value in the contract.\r\n     *\r\n     * Emits an {IERC1967-Upgraded} event.\r\n     */\r\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n\r\n        if (data.length > 0) {\r\n            Address.functionDelegateCall(newImplementation, data);\r\n        } else {\r\n            _checkNonPayable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Storage slot with the admin of the contract.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\r\n     */\r\n    // solhint-disable-next-line private-vars-leading-underscore\r\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     *\r\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\r\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\r\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\r\n     */\r\n    function getAdmin() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 admin slot.\r\n     */\r\n    function _setAdmin(address newAdmin) private {\r\n        if (newAdmin == address(0)) {\r\n            revert ERC1967InvalidAdmin(address(0));\r\n        }\r\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     *\r\n     * Emits an {IERC1967-AdminChanged} event.\r\n     */\r\n    function changeAdmin(address newAdmin) internal {\r\n        emit AdminChanged(getAdmin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\r\n     */\r\n    // solhint-disable-next-line private-vars-leading-underscore\r\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\r\n\r\n    /**\r\n     * @dev Returns the current beacon.\r\n     */\r\n    function getBeacon() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\r\n     */\r\n    function _setBeacon(address newBeacon) private {\r\n        if (newBeacon.code.length == 0) {\r\n            revert ERC1967InvalidBeacon(newBeacon);\r\n        }\r\n\r\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\r\n\r\n        address beaconImplementation = IBeacon(newBeacon).implementation();\r\n        if (beaconImplementation.code.length == 0) {\r\n            revert ERC1967InvalidImplementation(beaconImplementation);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\r\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\r\n     * to avoid stuck value in the contract.\r\n     *\r\n     * Emits an {IERC1967-BeaconUpgraded} event.\r\n     *\r\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\r\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\r\n     * efficiency.\r\n     */\r\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\r\n        _setBeacon(newBeacon);\r\n        emit BeaconUpgraded(newBeacon);\r\n\r\n        if (data.length > 0) {\r\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\r\n        } else {\r\n            _checkNonPayable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\r\n     * if an upgrade doesn't perform an initialization call.\r\n     */\r\n    function _checkNonPayable() private {\r\n        if (msg.value > 0) {\r\n            revert ERC1967NonPayable();\r\n        }\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\r\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\r\n *\r\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\r\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\r\n * `UUPSUpgradeable` with a custom implementation of upgrades.\r\n *\r\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\r\n */\r\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\r\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\r\n    address private immutable __self = address(this);\r\n\r\n    /**\r\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\r\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\r\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\r\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\r\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\r\n     * during an upgrade.\r\n     */\r\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\r\n\r\n    /**\r\n     * @dev The call is from an unauthorized context.\r\n     */\r\n    error UUPSUnauthorizedCallContext();\r\n\r\n    /**\r\n     * @dev The storage `slot` is unsupported as a UUID.\r\n     */\r\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\r\n\r\n    /**\r\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\r\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\r\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\r\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\r\n     * fail.\r\n     */\r\n    modifier onlyProxy() {\r\n        _checkProxy();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\r\n     * callable on the implementing contract but not through proxies.\r\n     */\r\n    modifier notDelegated() {\r\n        _checkNotDelegated();\r\n        _;\r\n    }\r\n\r\n    function __UUPSUpgradeable_init() internal onlyInitializing {\r\n    }\r\n\r\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\r\n    }\r\n    /**\r\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\r\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\r\n     *\r\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\r\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\r\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\r\n     */\r\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\r\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\r\n     * encoded in `data`.\r\n     *\r\n     * Calls {_authorizeUpgrade}.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     *\r\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\r\n     */\r\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\r\n        _authorizeUpgrade(newImplementation);\r\n        _upgradeToAndCallUUPS(newImplementation, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\r\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\r\n     * See {_onlyProxy}.\r\n     */\r\n    function _checkProxy() internal view virtual {\r\n        if (\r\n            address(this) == __self || // Must be called through delegatecall\r\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\r\n        ) {\r\n            revert UUPSUnauthorizedCallContext();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the execution is performed via delegatecall.\r\n     * See {notDelegated}.\r\n     */\r\n    function _checkNotDelegated() internal view virtual {\r\n        if (address(this) != __self) {\r\n            // Must not be called through delegatecall\r\n            revert UUPSUnauthorizedCallContext();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\r\n     * {upgradeToAndCall}.\r\n     *\r\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\r\n     *\r\n     * ```solidity\r\n     * function _authorizeUpgrade(address) internal onlyOwner {}\r\n     * ```\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal virtual;\r\n\r\n    /**\r\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\r\n     *\r\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\r\n     * is expected to be the implementation slot in ERC1967.\r\n     *\r\n     * Emits an {IERC1967-Upgraded} event.\r\n     */\r\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\r\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\r\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\r\n                revert UUPSUnsupportedProxiableUUID(slot);\r\n            }\r\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\r\n        } catch {\r\n            // The implementation is not UUPS\r\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\r\n        }\r\n    }\r\n}\r\n\r\n// File: contracts/UUPS.sol\r\n\r\n\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\n\r\n\r\n\r\n\r\ninterface IDexFactory {\r\n    event PairCreated(\r\n        address indexed token0,\r\n        address indexed token1,\r\n        address pair,\r\n        uint256\r\n    );\r\n\r\n    function feeTo() external view returns (address);\r\n\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(\r\n        address tokenA,\r\n        address tokenB\r\n    ) external view returns (address pair);\r\n\r\n    function allPairs(uint256) external view returns (address pair);\r\n\r\n    function allPairsLength() external view returns (uint256);\r\n\r\n    function createPair(\r\n        address tokenA,\r\n        address tokenB\r\n    ) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n\r\n    function setFeeToSetter(address) external;\r\n}\r\n\r\ninterface IDexRouter {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}\r\n\r\n\r\ncontract MyToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {\r\n\r\n\r\n   \r\n    mapping(address => bool) private _isExcludedFromFee;\r\n    address payable private _taxWallet1;\r\n    address payable private _taxWallet2;\r\n    address payable private _taxWallet3;\r\n    address payable private _taxWallet4;\r\n    address payable private _taxWallet5;\r\n    address payable private _taxWallet6;\r\n    address payable private _taxWallet7;\r\n    address payable private _taxWallet8;\r\n    uint256 firstBlock;\r\n\r\n    uint64 private lastLiquifyTime;\r\n\r\n    uint256 private buyFee;\r\n    uint256 private sellFee;\r\n    uint256 private _preventSwapBefore;\r\n    uint256 private _buyCount;\r\n\r\n    uint256 private _txAmountLimit;\r\n    uint256 private _walletAmountLimit;\r\n    uint256 private _swapbackMin;\r\n    uint256 private _swapbackMax;\r\n\r\n    IDexRouter private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n    bool private launchmode = true;\r\n    uint256 public tokenCap;\r\n    mapping(address => bool) private _canTx;\r\n\r\n    event MaxTxAmountUpdated(uint _txAmountLimit);\r\n    event MaxWalletAmountUpdated(uint _walletAmountLimit);\r\n    event FeesUpdated(uint buyFee, uint sellFee);\r\n    event SwapbackUpdated(uint _swapbackMin, uint _swapbackMax);\r\n    event FeeReceiversUpdated(address payable _taxWallet1,\r\n                            address payable _taxWallet2,\r\n                            address payable _taxWallet3,\r\n                            address payable _taxWallet4,\r\n                            address payable _taxWallet5,\r\n                            address payable _taxWallet6,\r\n                            address payable _taxWallet7,\r\n                            address payable _taxWallet8\r\n    );\r\n    event ExcludedFromFee(address account, bool status);\r\n    event LimitsRemoved();\r\n    event TradingOpened();\r\n\r\n    uint256 _totalSupply;\r\n\r\n    modifier lockTheSwap() {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n     /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n\r\n    function initialize(address initialOwner) initializer public {\r\n        __ERC20_init(\"MyToken\", \"MTK\");\r\n        __Ownable_init(initialOwner);\r\n        __UUPSUpgradeable_init();\r\n        _totalSupply = 100_000_000_000_000 * 10 ** 18;\r\n        tokenCap = 100_000_000_000_000_0 * 10 ** 18;\r\n        _txAmountLimit = (_totalSupply * 10) / 1000;\r\n        _walletAmountLimit = (_totalSupply * 10) / 1000;\r\n        _swapbackMin = (_totalSupply * 5) / 10000;\r\n        _swapbackMax = (_totalSupply * 400) / 10000;\r\n        buyFee = 15;\r\n        sellFee = 40;\r\n        _preventSwapBefore = 1;\r\n        _buyCount = 0;\r\n        _canTx [address(this)] = true;\r\n         uniswapV2Router = IDexRouter(\r\n           // 0xedf6066a2b290C185783862C7F4776A2C8077AD1\r\n           0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\r\n        );\r\n        _approve(address(this), address(uniswapV2Router), totalSupply());\r\n        uniswapV2Pair = IDexFactory(uniswapV2Router.factory()).createPair(\r\n            address(this),\r\n            uniswapV2Router.WETH()\r\n        );\r\n        _taxWallet1 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D);\r\n        _taxWallet2 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D);\r\n        _taxWallet3 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D);\r\n        _taxWallet4 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D);\r\n        _taxWallet5 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D);\r\n        _taxWallet6 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D);\r\n        _taxWallet7 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D);\r\n        _taxWallet8 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D);\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet1] = true;\r\n        _isExcludedFromFee[_taxWallet2] = true;\r\n        _isExcludedFromFee[_taxWallet3] = true;\r\n        _isExcludedFromFee[_taxWallet4] = true;\r\n        _isExcludedFromFee[_taxWallet5] = true;\r\n        _isExcludedFromFee[_taxWallet6] = true;\r\n        _isExcludedFromFee[_taxWallet7] = true;\r\n        _isExcludedFromFee[_taxWallet8] = true;\r\n\r\n        _mint(msg.sender, _totalSupply);\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation)\r\n        internal\r\n        onlyOwner\r\n        override\r\n    {}\r\n\r\n    receive() external payable {}\r\n\r\n    function open() external onlyOwner {\r\n        require(!tradingOpen, \"trading is already open\");\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n        lastLiquifyTime = uint64(block.number);\r\n        _isExcludedFromFee[address(this)] = true;\r\n        buyFee = 25;\r\n        sellFee = 40;\r\n\r\n        emit TradingOpened();\r\n    }\r\n\r\n    function setWallets(\r\n    address payable taxWallet1,\r\n    address payable taxWallet2,\r\n    address payable taxWallet3,\r\n    address payable taxWallet4,\r\n    address payable taxWallet5,\r\n    address payable taxWallet6,\r\n    address payable taxWallet7,\r\n    address payable taxWallet8\r\n    ) external onlyOwner {\r\n        _taxWallet1 = taxWallet1;\r\n        _taxWallet2 = taxWallet2;\r\n        _taxWallet3 = taxWallet3;\r\n        _taxWallet4 = taxWallet4;\r\n        _taxWallet5 = taxWallet5;\r\n        _taxWallet6 = taxWallet6;\r\n        _taxWallet7 = taxWallet7;\r\n        _taxWallet8 = taxWallet8;\r\n\r\n        emit FeeReceiversUpdated(_taxWallet1,_taxWallet2,_taxWallet3,\r\n                                _taxWallet4,_taxWallet5,_taxWallet6,\r\n                                _taxWallet7,_taxWallet8);\r\n    }\r\n\r\n    function setTx(uint256 newValue) external onlyOwner {\r\n        require(newValue >= 1, \"Max tx cant be lower than 0.1%\");\r\n        _txAmountLimit = (totalSupply() * newValue) / 1000;\r\n        emit MaxTxAmountUpdated(_txAmountLimit);\r\n    }\r\n\r\n    function setWalletLimit(uint256 newValue) external onlyOwner {\r\n        require(newValue >= 1, \"Max wallet cant be lower than 0.1%\");\r\n        _walletAmountLimit = (totalSupply() * newValue) / 1000;\r\n        emit MaxWalletAmountUpdated(_walletAmountLimit);\r\n    }\r\n\r\n    function setSwapback(\r\n        uint256 taxSwapThreshold,\r\n        uint256 maxTaxSwap\r\n    ) external onlyOwner {\r\n        _swapbackMin = (totalSupply() * taxSwapThreshold) / 10000;\r\n        _swapbackMax = (totalSupply() * maxTaxSwap) / 10000;\r\n        emit SwapbackUpdated(taxSwapThreshold, maxTaxSwap);\r\n    }\r\n\r\n    function setMode() external onlyOwner {\r\n        require(launchmode, \"Launch mode is already disabled\");\r\n        launchmode = false;\r\n    }\r\n\r\n    function rmvLimits() external onlyOwner {\r\n        _txAmountLimit = totalSupply();\r\n        _walletAmountLimit = totalSupply();\r\n        emit MaxTxAmountUpdated(totalSupply());\r\n        emit MaxWalletAmountUpdated(totalSupply());\r\n    }\r\n\r\n    function setTax(uint256 buyTax, uint256 sellTax) external onlyOwner {\r\n        require(buyTax <= 99, \"Invalid buy tax value\");\r\n        require(sellTax <= 99, \"Invalid sell tax value\");\r\n        buyFee = buyTax;\r\n        sellFee = sellTax;\r\n        emit FeesUpdated(buyTax, sellTax);\r\n    }\r\n\r\n    function removeETH() external {\r\n        require(msg.sender == owner(), \"Only fee receiver can trigger\");\r\n        uint share = address(this).balance / 8;\r\n        _taxWallet1.transfer(share);\r\n        _taxWallet2.transfer(share);\r\n        _taxWallet3.transfer(share);\r\n        _taxWallet4.transfer(share);\r\n        _taxWallet5.transfer(share);\r\n        _taxWallet6.transfer(share);\r\n        _taxWallet7.transfer(share);\r\n        _taxWallet8.transfer(share);\r\n    }\r\n\r\n    function addAddress(address[] calldata amount, bool status)\r\n        external\r\n        onlyOwner\r\n    {\r\n        for (uint256 i = 0; i < amount.length; i++) {\r\n            _canTx[amount[i]] = status;\r\n        }\r\n    }\r\n\r\n    function exemptFee(address account, bool status) external onlyOwner {\r\n        _isExcludedFromFee[account] = status;\r\n        emit ExcludedFromFee(account, status);\r\n    }\r\n\r\n    function viewInfo()\r\n        external\r\n        view\r\n        returns (\r\n            uint256 _buyFee,\r\n            uint256 _sellFee,\r\n            uint256 maxTxAmount,\r\n            uint256 maxWalletSize,\r\n            uint256 taxSwapThreshold,\r\n            uint256 maxTaxSwap\r\n        )\r\n    {\r\n        return (\r\n            buyFee,\r\n            sellFee,\r\n            _txAmountLimit,\r\n            _walletAmountLimit,\r\n            _swapbackMin,\r\n            _swapbackMax\r\n        );\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual override {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount = 0;\r\n        if (from != owner() && to != owner() && !inSwap) {\r\n            if (launchmode){\r\n                require(_canTx[from] || _canTx[to], \"\");\r\n            }\r\n\r\n            taxAmount = amount * (buyFee) / (100);\r\n\r\n            if (\r\n                from == uniswapV2Pair &&\r\n                to != address(uniswapV2Router) &&\r\n                !_isExcludedFromFee[to]\r\n            ) {\r\n                require(amount <= _txAmountLimit, \"Exceeds the _txAmountLimit.\");\r\n                require(\r\n                    balanceOf(to) + amount <= _walletAmountLimit,\r\n                    \"Exceeds the maxWalletSize.\"\r\n                );\r\n\r\n                if (firstBlock + 3 > block.number) {\r\n                    require(!isContract(to));\r\n                }\r\n                _buyCount++;\r\n            }\r\n\r\n            if (to != uniswapV2Pair && !_isExcludedFromFee[to]) {\r\n                require(\r\n                    balanceOf(to) + amount <= _walletAmountLimit,\r\n                    \"Exceeds the maxWalletSize.\"\r\n                );\r\n            }\r\n\r\n            if (to == uniswapV2Pair && from != address(this)) {\r\n                taxAmount = amount * (sellFee) / (100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (\r\n                !inSwap &&\r\n                to == uniswapV2Pair &&\r\n                swapEnabled &&\r\n                contractTokenBalance > _swapbackMin &&\r\n                _buyCount > _preventSwapBefore &&\r\n                lastLiquifyTime != uint64(block.number)\r\n            ) {\r\n                swapTokensForEth(min(contractTokenBalance, _swapbackMax));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if (contractETHBalance > 0) {\r\n                    sendETHToFee();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (taxAmount > 0) {\r\n            super._transfer(from, address(this), taxAmount);\r\n        }\r\n        super._transfer(from, to, amount - (taxAmount));\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256) {\r\n        return (a > b) ? b : a;\r\n    }\r\n\r\n    function isContract(address account) private view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    function triggerSwap() external {\r\n        require(\r\n            msg.sender ==  owner(),\r\n            \"Only owner can trigger\"\r\n        );\r\n        uint256 contractTokenBalance = balanceOf(address(this));\r\n\r\n        swapTokensForEth(contractTokenBalance);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        if (contractETHBalance > 0) {\r\n            sendETHToFee();\r\n        }\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        lastLiquifyTime = uint64(block.number);\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function sendETHToFee() private {\r\n        bool success;\r\n        uint256 share = address(this).balance / 8;\r\n        (success, ) = address(_taxWallet1).call{value: share}(\r\n            \"\"\r\n        );\r\n        (success, ) = address(_taxWallet2).call{value: share}(\r\n            \"\"\r\n        );\r\n        (success, ) = address(_taxWallet3).call{value: share}(\r\n            \"\"\r\n        );\r\n        (success, ) = address(_taxWallet4).call{value: share}(\r\n            \"\"\r\n        );\r\n        (success, ) = address(_taxWallet5).call{value: share}(\r\n            \"\"\r\n        );\r\n        (success, ) = address(_taxWallet6).call{value: share}(\r\n            \"\"\r\n        );\r\n        (success, ) = address(_taxWallet7).call{value: share}(\r\n            \"\"\r\n        );\r\n        (success, ) = address(_taxWallet8).call{value: share}(\r\n            \"\"\r\n        );\r\n    }\r\n    function changeTokenCap(uint amount) external  onlyOwner\r\n    {\r\n        tokenCap = amount;\r\n    }\r\n    function mint(uint256 amount) public onlyOwner\r\n    {\r\n        require(_totalSupply + amount <= tokenCap, \"Supply Limit Reached\");\r\n        _mint(owner(), amount);\r\n    }\r\n    function burn(uint256 amount) public onlyOwner\r\n    {\r\n        _burn(owner(), amount);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ERC1967.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1967.sol\":38943:45159  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1967.sol\":38943:45159  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a0abb72a57d57f9b7fc436fbc1f13bb3ce8cffdbf065fa38a115d4c5d47107c664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a0abb72a57d57f9b7fc436fbc1f13bb3ce8cffdbf065fa38a115d4c5d47107c664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xAB 0xB7 0x2A JUMPI 0xD5 PUSH32 0x9B7FC436FBC1F13BB3CE8CFFDBF065FA38A115D4C5D47107C664736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "38943:6216:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;38943:6216:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a0abb72a57d57f9b7fc436fbc1f13bb3ce8cffdbf065fa38a115d4c5d47107c664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xAB 0xB7 0x2A JUMPI 0xD5 PUSH32 0x9B7FC436FBC1F13BB3CE8CFFDBF065FA38A115D4C5D47107C664736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "38943:6216:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38943,
									"end": 45159,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0abb72a57d57f9b7fc436fbc1f13bb3ce8cffdbf065fa38a115d4c5d47107c664736f6c63430008180033",
									".code": [
										{
											"begin": 38943,
											"end": 45159,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 38943,
											"end": 45159,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 38943,
											"end": 45159,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38943,
											"end": 45159,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38943,
											"end": 45159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38943,
											"end": 45159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38943,
											"end": 45159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38943,
											"end": 45159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38943,
											"end": 45159,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"ERC1967.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1967.sol\":49604:56056  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1967.sol\":49604:56056  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122089b7de15c583cb7040aae9b0280bd0ea58051e43921b99212a50a747807fd95f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122089b7de15c583cb7040aae9b0280bd0ea58051e43921b99212a50a747807fd95f64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xB7 0xDE ISZERO 0xC5 DUP4 0xCB PUSH17 0x40AAE9B0280BD0EA58051E43921B99212A POP 0xA7 SELFBALANCE DUP1 PUSH32 0xD95F64736F6C6343000818003300000000000000000000000000000000000000 ",
							"sourceMap": "49604:6452:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;49604:6452:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122089b7de15c583cb7040aae9b0280bd0ea58051e43921b99212a50a747807fd95f64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xB7 0xDE ISZERO 0xC5 DUP4 0xCB PUSH17 0x40AAE9B0280BD0EA58051E43921B99212A POP 0xA7 SELFBALANCE DUP1 PUSH32 0xD95F64736F6C6343000818003300000000000000000000000000000000000000 ",
							"sourceMap": "49604:6452:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49604,
									"end": 56056,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122089b7de15c583cb7040aae9b0280bd0ea58051e43921b99212a50a747807fd95f64736f6c63430008180033",
									".code": [
										{
											"begin": 49604,
											"end": 56056,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 49604,
											"end": 56056,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 49604,
											"end": 56056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49604,
											"end": 56056,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49604,
											"end": 56056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49604,
											"end": 56056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49604,
											"end": 56056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49604,
											"end": 56056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49604,
											"end": 56056,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"ERC1967.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDexFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IDexFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDexRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IDexRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "ExcludedFromFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address payable",
									"name": "_taxWallet1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address payable",
									"name": "_taxWallet2",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address payable",
									"name": "_taxWallet3",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address payable",
									"name": "_taxWallet4",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address payable",
									"name": "_taxWallet5",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address payable",
									"name": "_taxWallet6",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address payable",
									"name": "_taxWallet7",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address payable",
									"name": "_taxWallet8",
									"type": "address"
								}
							],
							"name": "FeeReceiversUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "buyFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sellFee",
									"type": "uint256"
								}
							],
							"name": "FeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "LimitsRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_txAmountLimit",
									"type": "uint256"
								}
							],
							"name": "MaxTxAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_walletAmountLimit",
									"type": "uint256"
								}
							],
							"name": "MaxWalletAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_swapbackMin",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_swapbackMax",
									"type": "uint256"
								}
							],
							"name": "SwapbackUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "TradingOpened",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "amount",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "addAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeTokenCap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "exemptFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "open",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "removeETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rmvLimits",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "taxSwapThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxTaxSwap",
									"type": "uint256"
								}
							],
							"name": "setSwapback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "buyTax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sellTax",
									"type": "uint256"
								}
							],
							"name": "setTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "setTx",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								}
							],
							"name": "setWalletLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "taxWallet1",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "taxWallet2",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "taxWallet3",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "taxWallet4",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "taxWallet5",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "taxWallet6",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "taxWallet7",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "taxWallet8",
									"type": "address"
								}
							],
							"name": "setWallets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "triggerSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_buyFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sellFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxTxAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxWalletSize",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "taxSwapThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxTaxSwap",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1967.sol\":64963:78509  contract MyToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"ERC1967.sol\":57077:57081  this */\n  address\n    /* \"ERC1967.sol\":57034:57082  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"ERC1967.sol\":65920:65947  bool private inSwap = false */\n  0x14\n  dup1\n  sload\n  not(shl(0xa8, 0xffffff))\n    /* \"ERC1967.sol\":65993:66023  bool private launchmode = true */\n  and\n  shl(0xb8, 0x01)\n  or\n  swap1\n  sstore\n    /* \"ERC1967.sol\":67110:67165  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ERC1967.sol\":67135:67157  _disableInitializers() */\n  tag_4\n    /* \"ERC1967.sol\":67135:67155  _disableInitializers */\n  tag_5\n    /* \"ERC1967.sol\":67135:67157  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"ERC1967.sol\":64963:78509  contract MyToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_15)\n    /* \"ERC1967.sol\":11532:11965  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"ERC1967.sol\":12724:12745  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"ERC1967.sol\":11725:11740  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"ERC1967.sol\":11721:11799  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"ERC1967.sol\":11764:11787  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"ERC1967.sol\":11721:11799  if ($._initializing) {... */\ntag_10:\n    /* \"ERC1967.sol\":11813:11827  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"ERC1967.sol\":11813:11847  $._initialized != type(uint64).max */\n  eq\n    /* \"ERC1967.sol\":11809:11958  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"ERC1967.sol\":11864:11897  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"ERC1967.sol\":11917:11946  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"ERC1967.sol\":11917:11946  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"ERC1967.sol\":11917:11946  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"ERC1967.sol\":11809:11958  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"ERC1967.sol\":11581:11965  {... */\n  pop\n    /* \"ERC1967.sol\":11532:11965  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"ERC1967.sol\":64963:78509  contract MyToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xac8929c8974860d03a062a3562d586a140087e9e0f07f932aa4cee7e717608a8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"ERC1967.sol\":64963:78509  contract MyToken is Initializable, ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ed6a48d\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xdd54291b\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xdd54291b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf1d5f517\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xfcfff16f\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0xad3cb1cc\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xae601480\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xda7fe652\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x8f937cc4\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8f937cc4\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x6ed6a48d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x23bc25ed\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x4f1ef286\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x620cc86c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x667f6526\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x23bc25ed\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2dc4f5e6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x18160ddd\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1c537de5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x217b6da6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x0313fc4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x08ade0c9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC1967.sol\":71237:71547  function setSwapback(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"ERC1967.sol\":23461:23608  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1967.sol\":71555:71695  function setMode() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_46\n      tag_57\n      jump\t// in\n        /* \"ERC1967.sol\":26034:26224  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":1544:1558   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1537:1559   */\n      iszero\n        /* \"#utility.yul\":1519:1560   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1492:1510   */\n      add\n        /* \"ERC1967.sol\":26034:26224  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_53\n        /* \"#utility.yul\":1379:1566   */\n      jump\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n    tag_66:\n      mload(0x40)\n        /* \"#utility.yul\":1717:1742   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1705:1707   */\n      0x20\n        /* \"#utility.yul\":1690:1708   */\n      add\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n      tag_53\n        /* \"#utility.yul\":1571:1748   */\n      jump\n        /* \"ERC1967.sol\":72718:72935  function addAddress(address[] calldata amount, bool status)... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_46\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"ERC1967.sol\":72245:72710  function removeETH() external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_46\n      tag_77\n      jump\t// in\n        /* \"ERC1967.sol\":26802:27051  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_59\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"ERC1967.sol\":69912:70712  function setWallets(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_46\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"ERC1967.sol\":72943:73114  function exemptFee(address account, bool status) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_46\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"ERC1967.sol\":24526:24610  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      mload(0x40)\n        /* \"ERC1967.sol\":24600:24602  18 */\n      0x12\n        /* \"#utility.yul\":4843:4879   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4831:4833   */\n      0x20\n        /* \"#utility.yul\":4816:4834   */\n      add\n        /* \"ERC1967.sol\":24526:24610  function decimals() public view virtual returns (uint8) {... */\n      tag_53\n        /* \"#utility.yul\":4701:4885   */\n      jump\n        /* \"ERC1967.sol\":78413:78506  function burn(uint256 amount) public onlyOwner... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_46\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"ERC1967.sol\":60134:60351  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_15:\n      tag_46\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n        /* \"ERC1967.sol\":59667:59803  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_66\n      tag_110\n      jump\t// in\n        /* \"ERC1967.sol\":70720:70958  function setTx(uint256 newValue) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_46\n      tag_115\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"ERC1967.sol\":71947:72237  function setTax(uint256 buyTax, uint256 sellTax) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_46\n      tag_119\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"ERC1967.sol\":71703:71939  function rmvLimits() external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_46\n      tag_123\n      jump\t// in\n        /* \"ERC1967.sol\":24893:25067  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_66\n      tag_126\n      calldatasize\n      0x04\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n        /* \"ERC1967.sol\":36362:36465  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_46\n      tag_132\n      jump\t// in\n        /* \"ERC1967.sol\":35627:35774  function owner() public view virtual returns (address) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6866:6898   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6848:6899   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6836:6838   */\n      0x20\n        /* \"#utility.yul\":6821:6839   */\n      add\n        /* \"ERC1967.sol\":35627:35774  function owner() public view virtual returns (address) {... */\n      tag_53\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":76326:76728  function triggerSwap() external {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_46\n      tag_140\n      jump\t// in\n        /* \"ERC1967.sol\":23727:23878  function symbol() public view virtual returns (string memory) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_51\n      tag_143\n      jump\t// in\n        /* \"ERC1967.sol\":78237:78407  function mint(uint256 amount) public onlyOwner... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_46\n      tag_147\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"ERC1967.sol\":25272:25454  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_59\n      tag_151\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"ERC1967.sol\":57735:57793  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_51\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"ERC1967.sol\":73122:73607  function viewInfo()... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n        /* \"ERC1967.sol\":73444:73450  buyFee */\n      sload(0x0b)\n        /* \"ERC1967.sol\":73465:73472  sellFee */\n      sload(0x0c)\n        /* \"ERC1967.sol\":73487:73501  _txAmountLimit */\n      sload(0x0f)\n        /* \"ERC1967.sol\":73516:73534  _walletAmountLimit */\n      sload(0x10)\n        /* \"ERC1967.sol\":73549:73561  _swapbackMin */\n      sload(0x11)\n        /* \"ERC1967.sol\":73576:73588  _swapbackMax */\n      sload(0x12)\n        /* \"ERC1967.sol\":73122:73607  function viewInfo()... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7197:7222   */\n      swap7\n      dup8\n      mstore\n        /* \"#utility.yul\":7253:7255   */\n      0x20\n        /* \"#utility.yul\":7238:7256   */\n      dup8\n      add\n        /* \"#utility.yul\":7231:7265   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":7281:7299   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":7274:7308   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7339:7341   */\n      0x60\n        /* \"#utility.yul\":7324:7342   */\n      dup5\n      add\n        /* \"#utility.yul\":7317:7351   */\n      mstore\n        /* \"#utility.yul\":7382:7385   */\n      0x80\n        /* \"#utility.yul\":7367:7386   */\n      dup4\n      add\n        /* \"#utility.yul\":7360:7395   */\n      mstore\n        /* \"#utility.yul\":7426:7429   */\n      0xa0\n        /* \"#utility.yul\":7411:7430   */\n      dup3\n      add\n        /* \"#utility.yul\":7404:7439   */\n      mstore\n        /* \"#utility.yul\":7184:7187   */\n      0xc0\n        /* \"#utility.yul\":7169:7188   */\n      add\n        /* \"ERC1967.sol\":73122:73607  function viewInfo()... */\n      tag_53\n        /* \"#utility.yul\":6910:7445   */\n      jump\n        /* \"ERC1967.sol\":67175:69361  function initialize(address initialOwner) initializer public {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_46\n      tag_165\n      calldatasize\n      0x04\n      tag_127\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"ERC1967.sol\":78133:78231  function changeTokenCap(uint amount) external  onlyOwner... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_46\n      tag_169\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"ERC1967.sol\":66030:66053  uint256 public tokenCap */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_66\n      sload(0x15)\n      dup2\n      jump\n        /* \"ERC1967.sol\":25517:25715  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_66\n      tag_177\n      calldatasize\n      0x04\n      tag_178\n      jump\t// in\n    tag_177:\n      tag_179\n      jump\t// in\n        /* \"ERC1967.sol\":70966:71229  function setWalletLimit(uint256 newValue) external onlyOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_46\n      tag_183\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_183:\n      tag_184\n      jump\t// in\n        /* \"ERC1967.sol\":36620:36840  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_46\n      tag_187\n      calldatasize\n      0x04\n      tag_127\n      jump\t// in\n    tag_187:\n      tag_188\n      jump\t// in\n        /* \"ERC1967.sol\":69530:69904  function open() external onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      tag_46\n      tag_191\n      jump\t// in\n        /* \"ERC1967.sol\":71237:71547  function setSwapback(... */\n    tag_49:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_193\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"ERC1967.sol\":71411:71416  10000 */\n      0x2710\n        /* \"ERC1967.sol\":71391:71407  taxSwapThreshold */\n      dup3\n        /* \"ERC1967.sol\":71375:71388  totalSupply() */\n      tag_196\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n      swap1\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"ERC1967.sol\":71375:71388  totalSupply() */\n    tag_196:\n        /* \"ERC1967.sol\":71375:71407  totalSupply() * taxSwapThreshold */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"ERC1967.sol\":71374:71416  (totalSupply() * taxSwapThreshold) / 10000 */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"ERC1967.sol\":71359:71371  _swapbackMin */\n      0x11\n        /* \"ERC1967.sol\":71359:71416  _swapbackMin = (totalSupply() * taxSwapThreshold) / 10000 */\n      sstore\n        /* \"ERC1967.sol\":71473:71478  10000 */\n      0x2710\n        /* \"ERC1967.sol\":71459:71469  maxTaxSwap */\n      dup2\n        /* \"ERC1967.sol\":71443:71456  totalSupply() */\n      tag_201\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n      swap1\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"ERC1967.sol\":71443:71456  totalSupply() */\n    tag_201:\n        /* \"ERC1967.sol\":71443:71469  totalSupply() * maxTaxSwap */\n      tag_202\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_202:\n        /* \"ERC1967.sol\":71442:71478  (totalSupply() * maxTaxSwap) / 10000 */\n      tag_203\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_203:\n        /* \"ERC1967.sol\":71427:71439  _swapbackMax */\n      0x12\n        /* \"ERC1967.sol\":71427:71478  _swapbackMax = (totalSupply() * maxTaxSwap) / 10000 */\n      sstore\n        /* \"ERC1967.sol\":71494:71539  SwapbackUpdated(taxSwapThreshold, maxTaxSwap) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8544:8569   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":8600:8602   */\n      0x20\n        /* \"#utility.yul\":8585:8603   */\n      dup2\n      add\n        /* \"#utility.yul\":8578:8612   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC1967.sol\":71494:71539  SwapbackUpdated(taxSwapThreshold, maxTaxSwap) */\n      0x2b3f4c022d9943b151090e389857495bb9d8493714259cc19a540f5a11475fb1\n      swap2\n        /* \"#utility.yul\":8517:8535   */\n      add\n        /* \"ERC1967.sol\":71494:71539  SwapbackUpdated(taxSwapThreshold, maxTaxSwap) */\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC1967.sol\":71237:71547  function setSwapback(... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":23461:23608  function name() public view virtual returns (string memory) {... */\n    tag_52:\n        /* \"ERC1967.sol\":23593:23600  $._name */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n        /* \"ERC1967.sol\":23586:23600  return $._name */\n      dup1\n      sload\n        /* \"ERC1967.sol\":23506:23519  string memory */\n      0x60\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":22786:22806  ERC20StorageLocation */\n      swap2\n        /* \"ERC1967.sol\":23586:23600  return $._name */\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_210\n      jump\t// in\n    tag_211:\n      dup1\n      iszero\n      tag_212\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_213\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_212)\n    tag_213:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_214:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_214\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"ERC1967.sol\":23461:23608  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC1967.sol\":71555:71695  function setMode() external onlyOwner {... */\n    tag_57:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_216\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"ERC1967.sol\":71612:71622  launchmode */\n      sload(0x14)\n      shl(0xb8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1967.sol\":71604:71658  require(launchmode, \"Launch mode is already disabled\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9210:9212   */\n      0x20\n        /* \"ERC1967.sol\":71604:71658  require(launchmode, \"Launch mode is already disabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9192:9213   */\n      mstore\n        /* \"#utility.yul\":9249:9251   */\n      0x1f\n        /* \"#utility.yul\":9229:9247   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9222:9252   */\n      mstore\n        /* \"#utility.yul\":9288:9321   */\n      0x4c61756e6368206d6f646520697320616c72656164792064697361626c656400\n        /* \"#utility.yul\":9268:9286   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9261:9322   */\n      mstore\n        /* \"#utility.yul\":9339:9357   */\n      0x64\n      add\n        /* \"ERC1967.sol\":71604:71658  require(launchmode, \"Launch mode is already disabled\") */\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"ERC1967.sol\":71669:71679  launchmode */\n      0x14\n        /* \"ERC1967.sol\":71669:71687  launchmode = false */\n      dup1\n      sload\n      not(shl(0xb8, 0xff))\n      and\n      swap1\n      sstore\n        /* \"ERC1967.sol\":71555:71695  function setMode() external onlyOwner {... */\n      jump\t// out\n        /* \"ERC1967.sol\":26034:26224  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"ERC1967.sol\":26107:26111  bool */\n      0x00\n        /* \"ERC1967.sol\":13742:13752  msg.sender */\n      caller\n        /* \"ERC1967.sol\":26163:26194  _approve(owner, spender, value) */\n      tag_224\n        /* \"ERC1967.sol\":13742:13752  msg.sender */\n      dup2\n        /* \"ERC1967.sol\":26179:26186  spender */\n      dup6\n        /* \"ERC1967.sol\":26188:26193  value */\n      dup6\n        /* \"ERC1967.sol\":26163:26171  _approve */\n      tag_225\n        /* \"ERC1967.sol\":26163:26194  _approve(owner, spender, value) */\n      jump\t// in\n    tag_224:\n        /* \"ERC1967.sol\":26212:26216  true */\n      0x01\n        /* \"ERC1967.sol\":26205:26216  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC1967.sol\":26034:26224  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_221:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":72718:72935  function addAddress(address[] calldata amount, bool status)... */\n    tag_74:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_229\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_229:\n        /* \"ERC1967.sol\":72836:72845  uint256 i */\n      0x00\n        /* \"ERC1967.sol\":72831:72928  for (uint256 i = 0; i < amount.length; i++) {... */\n    tag_231:\n        /* \"ERC1967.sol\":72851:72868  i < amount.length */\n      dup3\n      dup2\n      lt\n        /* \"ERC1967.sol\":72831:72928  for (uint256 i = 0; i < amount.length; i++) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"ERC1967.sol\":72910:72916  status */\n      dup2\n        /* \"ERC1967.sol\":72890:72896  _canTx */\n      0x16\n        /* \"ERC1967.sol\":72890:72907  _canTx[amount[i]] */\n      0x00\n        /* \"ERC1967.sol\":72897:72903  amount */\n      dup7\n      dup7\n        /* \"ERC1967.sol\":72904:72905  i */\n      dup6\n        /* \"ERC1967.sol\":72897:72906  amount[i] */\n      dup2\n      dup2\n      lt\n      tag_235\n      jumpi\n      tag_235\n      tag_236\n      jump\t// in\n    tag_235:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72890:72907  _canTx[amount[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"ERC1967.sol\":72890:72916  _canTx[amount[i]] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"ERC1967.sol\":72870:72873  i++ */\n      add\n        /* \"ERC1967.sol\":72831:72928  for (uint256 i = 0; i < amount.length; i++) {... */\n      jump(tag_231)\n    tag_232:\n      pop\n        /* \"ERC1967.sol\":72718:72935  function addAddress(address[] calldata amount, bool status)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":72245:72710  function removeETH() external {... */\n    tag_77:\n        /* \"ERC1967.sol\":72308:72315  owner() */\n      tag_239\n        /* \"ERC1967.sol\":72308:72313  owner */\n      tag_135\n        /* \"ERC1967.sol\":72308:72315  owner() */\n      jump\t// in\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72294:72315  msg.sender == owner() */\n      and\n        /* \"ERC1967.sol\":72294:72304  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72294:72315  msg.sender == owner() */\n      and\n      eq\n        /* \"ERC1967.sol\":72286:72349  require(msg.sender == owner(), \"Only fee receiver can trigger\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9702:9704   */\n      0x20\n        /* \"ERC1967.sol\":72286:72349  require(msg.sender == owner(), \"Only fee receiver can trigger\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9684:9705   */\n      mstore\n        /* \"#utility.yul\":9741:9743   */\n      0x1d\n        /* \"#utility.yul\":9721:9739   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9714:9744   */\n      mstore\n        /* \"#utility.yul\":9780:9811   */\n      0x4f6e6c79206665652072656365697665722063616e2074726967676572000000\n        /* \"#utility.yul\":9760:9778   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9753:9812   */\n      mstore\n        /* \"#utility.yul\":9829:9847   */\n      0x64\n      add\n        /* \"ERC1967.sol\":72286:72349  require(msg.sender == owner(), \"Only fee receiver can trigger\") */\n      tag_219\n        /* \"#utility.yul\":9500:9853   */\n      jump\n        /* \"ERC1967.sol\":72286:72349  require(msg.sender == owner(), \"Only fee receiver can trigger\") */\n    tag_240:\n        /* \"ERC1967.sol\":72360:72370  uint share */\n      0x00\n        /* \"ERC1967.sol\":72373:72398  address(this).balance / 8 */\n      tag_243\n        /* \"ERC1967.sol\":72397:72398  8 */\n      0x08\n        /* \"ERC1967.sol\":72373:72394  address(this).balance */\n      selfbalance\n        /* \"ERC1967.sol\":72373:72398  address(this).balance / 8 */\n      tag_200\n      jump\t// in\n    tag_243:\n        /* \"ERC1967.sol\":72409:72420  _taxWallet1 */\n      sload(0x01)\n        /* \"ERC1967.sol\":72409:72436  _taxWallet1.transfer(share) */\n      mload(0x40)\n        /* \"ERC1967.sol\":72360:72398  uint share = address(this).balance / 8 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72409:72420  _taxWallet1 */\n      and\n      swap1\n        /* \"ERC1967.sol\":72409:72436  _taxWallet1.transfer(share) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ERC1967.sol\":72360:72398  uint share = address(this).balance / 8 */\n      dup4\n      swap1\n        /* \"ERC1967.sol\":72409:72420  _taxWallet1 */\n      0x00\n        /* \"ERC1967.sol\":72409:72436  _taxWallet1.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72409:72420  _taxWallet1 */\n      dup2\n        /* \"ERC1967.sol\":72409:72436  _taxWallet1.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72360:72398  uint share = address(this).balance / 8 */\n      dup6\n        /* \"ERC1967.sol\":72409:72420  _taxWallet1 */\n      dup9\n        /* \"ERC1967.sol\":72409:72436  _taxWallet1.transfer(share) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_245:\n      pop\n        /* \"ERC1967.sol\":72447:72458  _taxWallet2 */\n      sload(0x02)\n        /* \"ERC1967.sol\":72447:72474  _taxWallet2.transfer(share) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72447:72458  _taxWallet2 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC1967.sol\":72447:72474  _taxWallet2.transfer(share) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ERC1967.sol\":72468:72473  share */\n      dup4\n      swap1\n        /* \"ERC1967.sol\":72447:72458  _taxWallet2 */\n      0x00\n        /* \"ERC1967.sol\":72447:72474  _taxWallet2.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72447:72458  _taxWallet2 */\n      dup2\n        /* \"ERC1967.sol\":72447:72474  _taxWallet2.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72468:72473  share */\n      dup6\n        /* \"ERC1967.sol\":72447:72458  _taxWallet2 */\n      dup9\n        /* \"ERC1967.sol\":72447:72474  _taxWallet2.transfer(share) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n        /* \"ERC1967.sol\":72485:72496  _taxWallet3 */\n      sload(0x03)\n        /* \"ERC1967.sol\":72485:72512  _taxWallet3.transfer(share) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72485:72496  _taxWallet3 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC1967.sol\":72485:72512  _taxWallet3.transfer(share) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ERC1967.sol\":72506:72511  share */\n      dup4\n      swap1\n        /* \"ERC1967.sol\":72485:72496  _taxWallet3 */\n      0x00\n        /* \"ERC1967.sol\":72485:72512  _taxWallet3.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72485:72496  _taxWallet3 */\n      dup2\n        /* \"ERC1967.sol\":72485:72512  _taxWallet3.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72506:72511  share */\n      dup6\n        /* \"ERC1967.sol\":72485:72496  _taxWallet3 */\n      dup9\n        /* \"ERC1967.sol\":72485:72512  _taxWallet3.transfer(share) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n        /* \"ERC1967.sol\":72523:72534  _taxWallet4 */\n      sload(0x04)\n        /* \"ERC1967.sol\":72523:72550  _taxWallet4.transfer(share) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72523:72534  _taxWallet4 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC1967.sol\":72523:72550  _taxWallet4.transfer(share) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ERC1967.sol\":72544:72549  share */\n      dup4\n      swap1\n        /* \"ERC1967.sol\":72523:72534  _taxWallet4 */\n      0x00\n        /* \"ERC1967.sol\":72523:72550  _taxWallet4.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72523:72534  _taxWallet4 */\n      dup2\n        /* \"ERC1967.sol\":72523:72550  _taxWallet4.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72544:72549  share */\n      dup6\n        /* \"ERC1967.sol\":72523:72534  _taxWallet4 */\n      dup9\n        /* \"ERC1967.sol\":72523:72550  _taxWallet4.transfer(share) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n        /* \"ERC1967.sol\":72561:72572  _taxWallet5 */\n      sload(0x05)\n        /* \"ERC1967.sol\":72561:72588  _taxWallet5.transfer(share) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72561:72572  _taxWallet5 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC1967.sol\":72561:72588  _taxWallet5.transfer(share) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ERC1967.sol\":72582:72587  share */\n      dup4\n      swap1\n        /* \"ERC1967.sol\":72561:72572  _taxWallet5 */\n      0x00\n        /* \"ERC1967.sol\":72561:72588  _taxWallet5.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72561:72572  _taxWallet5 */\n      dup2\n        /* \"ERC1967.sol\":72561:72588  _taxWallet5.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72582:72587  share */\n      dup6\n        /* \"ERC1967.sol\":72561:72572  _taxWallet5 */\n      dup9\n        /* \"ERC1967.sol\":72561:72588  _taxWallet5.transfer(share) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n        /* \"ERC1967.sol\":72599:72610  _taxWallet6 */\n      sload(0x06)\n        /* \"ERC1967.sol\":72599:72626  _taxWallet6.transfer(share) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72599:72610  _taxWallet6 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC1967.sol\":72599:72626  _taxWallet6.transfer(share) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ERC1967.sol\":72620:72625  share */\n      dup4\n      swap1\n        /* \"ERC1967.sol\":72599:72610  _taxWallet6 */\n      0x00\n        /* \"ERC1967.sol\":72599:72626  _taxWallet6.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72599:72610  _taxWallet6 */\n      dup2\n        /* \"ERC1967.sol\":72599:72626  _taxWallet6.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72620:72625  share */\n      dup6\n        /* \"ERC1967.sol\":72599:72610  _taxWallet6 */\n      dup9\n        /* \"ERC1967.sol\":72599:72626  _taxWallet6.transfer(share) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n        /* \"ERC1967.sol\":72637:72648  _taxWallet7 */\n      sload(0x07)\n        /* \"ERC1967.sol\":72637:72664  _taxWallet7.transfer(share) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72637:72648  _taxWallet7 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC1967.sol\":72637:72664  _taxWallet7.transfer(share) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ERC1967.sol\":72658:72663  share */\n      dup4\n      swap1\n        /* \"ERC1967.sol\":72637:72648  _taxWallet7 */\n      0x00\n        /* \"ERC1967.sol\":72637:72664  _taxWallet7.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72637:72648  _taxWallet7 */\n      dup2\n        /* \"ERC1967.sol\":72637:72664  _taxWallet7.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72658:72663  share */\n      dup6\n        /* \"ERC1967.sol\":72637:72648  _taxWallet7 */\n      dup9\n        /* \"ERC1967.sol\":72637:72664  _taxWallet7.transfer(share) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n        /* \"ERC1967.sol\":72675:72686  _taxWallet8 */\n      sload(0x08)\n        /* \"ERC1967.sol\":72675:72702  _taxWallet8.transfer(share) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":72675:72686  _taxWallet8 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC1967.sol\":72675:72702  _taxWallet8.transfer(share) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"ERC1967.sol\":72696:72701  share */\n      dup4\n      swap1\n        /* \"ERC1967.sol\":72675:72686  _taxWallet8 */\n      0x00\n        /* \"ERC1967.sol\":72675:72702  _taxWallet8.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72675:72686  _taxWallet8 */\n      dup2\n        /* \"ERC1967.sol\":72675:72702  _taxWallet8.transfer(share) */\n      dup2\n        /* \"ERC1967.sol\":72696:72701  share */\n      dup6\n        /* \"ERC1967.sol\":72675:72686  _taxWallet8 */\n      dup9\n        /* \"ERC1967.sol\":72675:72702  _taxWallet8.transfer(share) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_259:\n      pop\n        /* \"ERC1967.sol\":72275:72710  {... */\n      pop\n        /* \"ERC1967.sol\":72245:72710  function removeETH() external {... */\n      jump\t// out\n        /* \"ERC1967.sol\":26802:27051  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_82:\n        /* \"ERC1967.sol\":26889:26893  bool */\n      0x00\n        /* \"ERC1967.sol\":13742:13752  msg.sender */\n      caller\n        /* \"ERC1967.sol\":26947:26984  _spendAllowance(from, spender, value) */\n      tag_262\n        /* \"ERC1967.sol\":26963:26967  from */\n      dup6\n        /* \"ERC1967.sol\":13742:13752  msg.sender */\n      dup3\n        /* \"ERC1967.sol\":26978:26983  value */\n      dup6\n        /* \"ERC1967.sol\":26947:26962  _spendAllowance */\n      tag_263\n        /* \"ERC1967.sol\":26947:26984  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_262:\n        /* \"ERC1967.sol\":26995:27021  _transfer(from, to, value) */\n      tag_264\n        /* \"ERC1967.sol\":27005:27009  from */\n      dup6\n        /* \"ERC1967.sol\":27011:27013  to */\n      dup6\n        /* \"ERC1967.sol\":27015:27020  value */\n      dup6\n        /* \"ERC1967.sol\":26995:27004  _transfer */\n      tag_265\n        /* \"ERC1967.sol\":26995:27021  _transfer(from, to, value) */\n      jump\t// in\n    tag_264:\n        /* \"ERC1967.sol\":27039:27043  true */\n      0x01\n        /* \"ERC1967.sol\":27032:27043  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC1967.sol\":26802:27051  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_260:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":69912:70712  function setWallets(... */\n    tag_88:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_267\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_267:\n        /* \"ERC1967.sol\":70233:70244  _taxWallet1 */\n      0x01\n        /* \"ERC1967.sol\":70233:70257  _taxWallet1 = taxWallet1 */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"ERC1967.sol\":70268:70279  _taxWallet2 */\n      0x02\n        /* \"ERC1967.sol\":70268:70292  _taxWallet2 = taxWallet2 */\n      dup1\n      sload\n      dup12\n      dup4\n      and\n      swap1\n      dup5\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":70303:70314  _taxWallet3 */\n      0x03\n        /* \"ERC1967.sol\":70303:70327  _taxWallet3 = taxWallet3 */\n      dup1\n      sload\n      dup12\n      dup5\n      and\n      swap1\n      dup6\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":70338:70349  _taxWallet4 */\n      0x04\n        /* \"ERC1967.sol\":70338:70362  _taxWallet4 = taxWallet4 */\n      dup1\n      sload\n      dup12\n      dup6\n      and\n      swap1\n      dup7\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":70373:70384  _taxWallet5 */\n      0x05\n        /* \"ERC1967.sol\":70373:70397  _taxWallet5 = taxWallet5 */\n      dup1\n      sload\n      dup12\n      dup7\n      and\n      swap1\n      dup8\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":70408:70419  _taxWallet6 */\n      0x06\n        /* \"ERC1967.sol\":70408:70432  _taxWallet6 = taxWallet6 */\n      dup1\n      sload\n      dup12\n      dup8\n      and\n      swap1\n      dup9\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":70443:70454  _taxWallet7 */\n      0x07\n        /* \"ERC1967.sol\":70443:70467  _taxWallet7 = taxWallet7 */\n      dup1\n      sload\n      dup12\n      dup9\n      and\n      swap1\n      dup10\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":70478:70489  _taxWallet8 */\n      0x08\n        /* \"ERC1967.sol\":70478:70502  _taxWallet8 = taxWallet8 */\n      dup1\n      sload\n      swap8\n      dup12\n      and\n      swap8\n      swap1\n      swap9\n      and\n      dup8\n      or\n      swap1\n      swap8\n      sstore\n        /* \"ERC1967.sol\":70520:70704  FeeReceiversUpdated(_taxWallet1,_taxWallet2,_taxWallet3,... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10367:10401   */\n      swap9\n      dup10\n      mstore\n        /* \"#utility.yul\":10432:10434   */\n      0x20\n        /* \"#utility.yul\":10417:10435   */\n      dup10\n      add\n        /* \"#utility.yul\":10410:10453   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":10469:10487   */\n      swap4\n      dup8\n      add\n        /* \"#utility.yul\":10462:10505   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10536:10538   */\n      0x60\n        /* \"#utility.yul\":10521:10539   */\n      dup7\n      add\n        /* \"#utility.yul\":10514:10557   */\n      mstore\n        /* \"#utility.yul\":10588:10591   */\n      0x80\n        /* \"#utility.yul\":10573:10592   */\n      dup6\n      add\n        /* \"#utility.yul\":10566:10610   */\n      mstore\n        /* \"#utility.yul\":10347:10350   */\n      0xa0\n        /* \"#utility.yul\":10626:10645   */\n      dup5\n      add\n        /* \"#utility.yul\":10619:10663   */\n      mstore\n        /* \"#utility.yul\":10694:10697   */\n      0xc0\n        /* \"#utility.yul\":10679:10698   */\n      dup4\n      add\n        /* \"#utility.yul\":10672:10716   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10747:10750   */\n      0xe0\n        /* \"#utility.yul\":10732:10751   */\n      dup3\n      add\n        /* \"#utility.yul\":10725:10769   */\n      mstore\n        /* \"ERC1967.sol\":70520:70704  FeeReceiversUpdated(_taxWallet1,_taxWallet2,_taxWallet3,... */\n      0x52e6e0e286d372f9e966ef36de088520ff74564d54d64ad119477262ca461e7b\n      swap1\n        /* \"#utility.yul\":10316:10319   */\n      0x0100\n        /* \"#utility.yul\":10301:10320   */\n      add\n        /* \"ERC1967.sol\":70520:70704  FeeReceiversUpdated(_taxWallet1,_taxWallet2,_taxWallet3,... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC1967.sol\":69912:70712  function setWallets(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":72943:73114  function exemptFee(address account, bool status) external onlyOwner {... */\n    tag_93:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_272\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":73022:73049  _isExcludedFromFee[account] */\n      dup3\n      and\n        /* \"ERC1967.sol\":73022:73040  _isExcludedFromFee */\n      0x00\n        /* \"ERC1967.sol\":73022:73049  _isExcludedFromFee[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC1967.sol\":73022:73058  _isExcludedFromFee[account] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":73074:73106  ExcludedFromFee(account, status) */\n      dup3\n      mload\n        /* \"#utility.yul\":10948:10999   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":11015:11033   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":11008:11058   */\n      mstore\n        /* \"ERC1967.sol\":73074:73106  ExcludedFromFee(account, status) */\n      0x2d43abd87b27cee7b0aa8c6f7e0b4a3247b683262a83cbc2318b0df398a49aa9\n      swap2\n        /* \"#utility.yul\":10921:10939   */\n      add\n        /* \"ERC1967.sol\":73074:73106  ExcludedFromFee(account, status) */\n      tag_204\n        /* \"#utility.yul\":10780:11064   */\n      jump\n        /* \"ERC1967.sol\":78413:78506  function burn(uint256 amount) public onlyOwner... */\n    tag_103:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_278\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_278:\n        /* \"ERC1967.sol\":78476:78498  _burn(owner(), amount) */\n      tag_280\n        /* \"ERC1967.sol\":78482:78489  owner() */\n      tag_281\n        /* \"ERC1967.sol\":78482:78487  owner */\n      tag_135\n        /* \"ERC1967.sol\":78482:78489  owner() */\n      jump\t// in\n    tag_281:\n        /* \"ERC1967.sol\":78491:78497  amount */\n      dup3\n        /* \"ERC1967.sol\":78476:78481  _burn */\n      tag_282\n        /* \"ERC1967.sol\":78476:78498  _burn(owner(), amount) */\n      jump\t// in\n    tag_280:\n        /* \"ERC1967.sol\":78413:78506  function burn(uint256 amount) public onlyOwner... */\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":60134:60351  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_107:\n        /* \"ERC1967.sol\":58589:58602  _checkProxy() */\n      tag_284\n        /* \"ERC1967.sol\":58589:58600  _checkProxy */\n      tag_285\n        /* \"ERC1967.sol\":58589:58602  _checkProxy() */\n      jump\t// in\n    tag_284:\n        /* \"ERC1967.sol\":60250:60286  _authorizeUpgrade(newImplementation) */\n      tag_287\n        /* \"ERC1967.sol\":60268:60285  newImplementation */\n      dup3\n        /* \"ERC1967.sol\":60250:60267  _authorizeUpgrade */\n      tag_288\n        /* \"ERC1967.sol\":60250:60286  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_287:\n        /* \"ERC1967.sol\":60297:60343  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_259\n        /* \"ERC1967.sol\":60319:60336  newImplementation */\n      dup3\n        /* \"ERC1967.sol\":60338:60342  data */\n      dup3\n        /* \"ERC1967.sol\":60297:60318  _upgradeToAndCallUUPS */\n      tag_290\n        /* \"ERC1967.sol\":60297:60343  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n        /* \"ERC1967.sol\":59667:59803  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_110:\n        /* \"ERC1967.sol\":59736:59743  bytes32 */\n      0x00\n        /* \"ERC1967.sol\":58869:58889  _checkNotDelegated() */\n      tag_292\n        /* \"ERC1967.sol\":58869:58887  _checkNotDelegated */\n      tag_293\n        /* \"ERC1967.sol\":58869:58889  _checkNotDelegated() */\n      jump\t// in\n    tag_292:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":59667:59803  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"ERC1967.sol\":70720:70958  function setTx(uint256 newValue) external onlyOwner {... */\n    tag_116:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_296\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_296:\n        /* \"ERC1967.sol\":70803:70804  1 */\n      0x01\n        /* \"ERC1967.sol\":70791:70799  newValue */\n      dup2\n        /* \"ERC1967.sol\":70791:70804  newValue >= 1 */\n      lt\n      iszero\n        /* \"ERC1967.sol\":70783:70839  require(newValue >= 1, \"Max tx cant be lower than 0.1%\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11271:11273   */\n      0x20\n        /* \"ERC1967.sol\":70783:70839  require(newValue >= 1, \"Max tx cant be lower than 0.1%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11253:11274   */\n      mstore\n        /* \"#utility.yul\":11310:11312   */\n      0x1e\n        /* \"#utility.yul\":11290:11308   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11283:11313   */\n      mstore\n        /* \"#utility.yul\":11349:11381   */\n      0x4d61782074782063616e74206265206c6f776572207468616e20302e31250000\n        /* \"#utility.yul\":11329:11347   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11322:11382   */\n      mstore\n        /* \"#utility.yul\":11399:11417   */\n      0x64\n      add\n        /* \"ERC1967.sol\":70783:70839  require(newValue >= 1, \"Max tx cant be lower than 0.1%\") */\n      tag_219\n        /* \"#utility.yul\":11069:11423   */\n      jump\n        /* \"ERC1967.sol\":70783:70839  require(newValue >= 1, \"Max tx cant be lower than 0.1%\") */\n    tag_298:\n        /* \"ERC1967.sol\":70896:70900  1000 */\n      0x03e8\n        /* \"ERC1967.sol\":70884:70892  newValue */\n      dup2\n        /* \"ERC1967.sol\":70868:70881  totalSupply() */\n      tag_301\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n      swap1\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"ERC1967.sol\":70868:70881  totalSupply() */\n    tag_301:\n        /* \"ERC1967.sol\":70868:70892  totalSupply() * newValue */\n      tag_302\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_302:\n        /* \"ERC1967.sol\":70867:70900  (totalSupply() * newValue) / 1000 */\n      tag_303\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_303:\n        /* \"ERC1967.sol\":70850:70864  _txAmountLimit */\n      0x0f\n        /* \"ERC1967.sol\":70850:70900  _txAmountLimit = (totalSupply() * newValue) / 1000 */\n      dup2\n      swap1\n      sstore\n        /* \"ERC1967.sol\":70916:70950  MaxTxAmountUpdated(_txAmountLimit) */\n      mload(0x40)\n        /* \"#utility.yul\":1717:1742   */\n      swap1\n      dup2\n      mstore\n        /* \"ERC1967.sol\":70916:70950  MaxTxAmountUpdated(_txAmountLimit) */\n      0x947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf\n      swap1\n        /* \"#utility.yul\":1705:1707   */\n      0x20\n        /* \"#utility.yul\":1690:1708   */\n      add\n        /* \"ERC1967.sol\":70916:70950  MaxTxAmountUpdated(_txAmountLimit) */\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC1967.sol\":70720:70958  function setTx(uint256 newValue) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":71947:72237  function setTax(uint256 buyTax, uint256 sellTax) external onlyOwner {... */\n    tag_120:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_306\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"ERC1967.sol\":72044:72046  99 */\n      0x63\n        /* \"ERC1967.sol\":72034:72040  buyTax */\n      dup3\n        /* \"ERC1967.sol\":72034:72046  buyTax <= 99 */\n      gt\n      iszero\n        /* \"ERC1967.sol\":72026:72072  require(buyTax <= 99, \"Invalid buy tax value\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11630:11632   */\n      0x20\n        /* \"ERC1967.sol\":72026:72072  require(buyTax <= 99, \"Invalid buy tax value\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11612:11633   */\n      mstore\n        /* \"#utility.yul\":11669:11671   */\n      0x15\n        /* \"#utility.yul\":11649:11667   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11642:11672   */\n      mstore\n      shl(0x58, 0x496e76616c696420627579207461782076616c7565)\n        /* \"#utility.yul\":11688:11706   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11681:11732   */\n      mstore\n        /* \"#utility.yul\":11749:11767   */\n      0x64\n      add\n        /* \"ERC1967.sol\":72026:72072  require(buyTax <= 99, \"Invalid buy tax value\") */\n      tag_219\n        /* \"#utility.yul\":11428:11773   */\n      jump\n        /* \"ERC1967.sol\":72026:72072  require(buyTax <= 99, \"Invalid buy tax value\") */\n    tag_308:\n        /* \"ERC1967.sol\":72102:72104  99 */\n      0x63\n        /* \"ERC1967.sol\":72091:72098  sellTax */\n      dup2\n        /* \"ERC1967.sol\":72091:72104  sellTax <= 99 */\n      gt\n      iszero\n        /* \"ERC1967.sol\":72083:72131  require(sellTax <= 99, \"Invalid sell tax value\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11980:11982   */\n      0x20\n        /* \"ERC1967.sol\":72083:72131  require(sellTax <= 99, \"Invalid sell tax value\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11962:11983   */\n      mstore\n        /* \"#utility.yul\":12019:12021   */\n      0x16\n        /* \"#utility.yul\":11999:12017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11992:12022   */\n      mstore\n      shl(0x50, 0x496e76616c69642073656c6c207461782076616c7565)\n        /* \"#utility.yul\":12038:12056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12031:12083   */\n      mstore\n        /* \"#utility.yul\":12100:12118   */\n      0x64\n      add\n        /* \"ERC1967.sol\":72083:72131  require(sellTax <= 99, \"Invalid sell tax value\") */\n      tag_219\n        /* \"#utility.yul\":11778:12124   */\n      jump\n        /* \"ERC1967.sol\":72083:72131  require(sellTax <= 99, \"Invalid sell tax value\") */\n    tag_311:\n        /* \"ERC1967.sol\":72142:72148  buyFee */\n      0x0b\n        /* \"ERC1967.sol\":72142:72157  buyFee = buyTax */\n      dup3\n      swap1\n      sstore\n        /* \"ERC1967.sol\":72168:72175  sellFee */\n      0x0c\n        /* \"ERC1967.sol\":72168:72185  sellFee = sellTax */\n      dup2\n      swap1\n      sstore\n        /* \"ERC1967.sol\":72201:72229  FeesUpdated(buyTax, sellTax) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8544:8569   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":8600:8602   */\n      0x20\n        /* \"#utility.yul\":8585:8603   */\n      dup2\n      add\n        /* \"#utility.yul\":8578:8612   */\n      dup4\n      swap1\n      mstore\n        /* \"ERC1967.sol\":72201:72229  FeesUpdated(buyTax, sellTax) */\n      0x5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1\n      swap2\n        /* \"#utility.yul\":8517:8535   */\n      add\n        /* \"ERC1967.sol\":72201:72229  FeesUpdated(buyTax, sellTax) */\n      tag_204\n        /* \"#utility.yul\":8370:8618   */\n      jump\n        /* \"ERC1967.sol\":71703:71939  function rmvLimits() external onlyOwner {... */\n    tag_123:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_316\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_316:\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n        /* \"ERC1967.sol\":71754:71768  _txAmountLimit */\n      0x0f\n        /* \"ERC1967.sol\":71754:71784  _txAmountLimit = totalSupply() */\n      sstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n        /* \"ERC1967.sol\":71795:71813  _walletAmountLimit */\n      0x10\n        /* \"ERC1967.sol\":71795:71829  _walletAmountLimit = totalSupply() */\n      sstore\n        /* \"ERC1967.sol\":71845:71878  MaxTxAmountUpdated(totalSupply()) */\n      0x947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf\n        /* \"ERC1967.sol\":71864:71877  totalSupply() */\n      tag_320\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n      swap1\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"ERC1967.sol\":71864:71877  totalSupply() */\n    tag_320:\n        /* \"ERC1967.sol\":71845:71878  MaxTxAmountUpdated(totalSupply()) */\n      mload(0x40)\n        /* \"#utility.yul\":1717:1742   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1705:1707   */\n      0x20\n        /* \"#utility.yul\":1690:1708   */\n      add\n        /* \"ERC1967.sol\":71845:71878  MaxTxAmountUpdated(totalSupply()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC1967.sol\":71894:71931  MaxWalletAmountUpdated(totalSupply()) */\n      0x4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e001\n        /* \"ERC1967.sol\":71917:71930  totalSupply() */\n      tag_322\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n      swap1\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"ERC1967.sol\":71917:71930  totalSupply() */\n    tag_322:\n        /* \"ERC1967.sol\":71894:71931  MaxWalletAmountUpdated(totalSupply()) */\n      mload(0x40)\n        /* \"#utility.yul\":1717:1742   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1705:1707   */\n      0x20\n        /* \"#utility.yul\":1690:1708   */\n      add\n        /* \"ERC1967.sol\":71894:71931  MaxWalletAmountUpdated(totalSupply()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC1967.sol\":71703:71939  function rmvLimits() external onlyOwner {... */\n      jump\t// out\n        /* \"ERC1967.sol\":24893:25067  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":25039:25059  $._balances[account] */\n      and\n        /* \"ERC1967.sol\":24958:24965  uint256 */\n      0x00\n        /* \"ERC1967.sol\":25039:25059  $._balances[account] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC1967.sol\":24893:25067  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"ERC1967.sol\":36362:36465  function renounceOwnership() public virtual onlyOwner {... */\n    tag_132:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_327\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_327:\n        /* \"ERC1967.sol\":36427:36457  _transferOwnership(address(0)) */\n      tag_329\n        /* \"ERC1967.sol\":36454:36455  0 */\n      0x00\n        /* \"ERC1967.sol\":36427:36445  _transferOwnership */\n      tag_330\n        /* \"ERC1967.sol\":36427:36457  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_329:\n        /* \"ERC1967.sol\":36362:36465  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ERC1967.sol\":35627:35774  function owner() public view virtual returns (address) {... */\n    tag_135:\n        /* \"ERC1967.sol\":34458:34480  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"ERC1967.sol\":35758:35766  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"ERC1967.sol\":35627:35774  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"ERC1967.sol\":76326:76728  function triggerSwap() external {... */\n    tag_140:\n        /* \"ERC1967.sol\":76406:76413  owner() */\n      tag_335\n        /* \"ERC1967.sol\":76406:76411  owner */\n      tag_135\n        /* \"ERC1967.sol\":76406:76413  owner() */\n      jump\t// in\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":76391:76413  msg.sender ==  owner() */\n      and\n        /* \"ERC1967.sol\":76391:76401  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":76391:76413  msg.sender ==  owner() */\n      and\n      eq\n        /* \"ERC1967.sol\":76369:76463  require(... */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12331:12333   */\n      0x20\n        /* \"ERC1967.sol\":76369:76463  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12313:12334   */\n      mstore\n        /* \"#utility.yul\":12370:12372   */\n      0x16\n        /* \"#utility.yul\":12350:12368   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12343:12373   */\n      mstore\n      shl(0x51, 0x27b7363c9037bbb732b91031b0b7103a3934b3b3b2b9)\n        /* \"#utility.yul\":12389:12407   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12382:12434   */\n      mstore\n        /* \"#utility.yul\":12451:12469   */\n      0x64\n      add\n        /* \"ERC1967.sol\":76369:76463  require(... */\n      tag_219\n        /* \"#utility.yul\":12129:12475   */\n      jump\n        /* \"ERC1967.sol\":76369:76463  require(... */\n    tag_336:\n        /* \"ERC1967.sol\":76474:76502  uint256 contractTokenBalance */\n      0x00\n        /* \"ERC1967.sol\":76505:76529  balanceOf(address(this)) */\n      tag_339\n        /* \"ERC1967.sol\":76523:76527  this */\n      address\n        /* \"ERC1967.sol\":76505:76514  balanceOf */\n      tag_128\n        /* \"ERC1967.sol\":76505:76529  balanceOf(address(this)) */\n      jump\t// in\n    tag_339:\n        /* \"ERC1967.sol\":76474:76529  uint256 contractTokenBalance = balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"ERC1967.sol\":76542:76580  swapTokensForEth(contractTokenBalance) */\n      tag_340\n        /* \"ERC1967.sol\":76559:76579  contractTokenBalance */\n      dup2\n        /* \"ERC1967.sol\":76542:76558  swapTokensForEth */\n      tag_341\n        /* \"ERC1967.sol\":76542:76580  swapTokensForEth(contractTokenBalance) */\n      jump\t// in\n    tag_340:\n        /* \"ERC1967.sol\":76620:76641  address(this).balance */\n      selfbalance\n        /* \"ERC1967.sol\":76656:76678  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"ERC1967.sol\":76652:76721  if (contractETHBalance > 0) {... */\n      tag_259\n      jumpi\n        /* \"ERC1967.sol\":76695:76709  sendETHToFee() */\n      tag_259\n        /* \"ERC1967.sol\":76695:76707  sendETHToFee */\n      tag_344\n        /* \"ERC1967.sol\":76695:76709  sendETHToFee() */\n      jump\t// in\n        /* \"ERC1967.sol\":23727:23878  function symbol() public view virtual returns (string memory) {... */\n    tag_143:\n        /* \"ERC1967.sol\":23861:23870  $._symbol */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n        /* \"ERC1967.sol\":23854:23870  return $._symbol */\n      dup1\n      sload\n        /* \"ERC1967.sol\":23774:23787  string memory */\n      0x60\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":22786:22806  ERC20StorageLocation */\n      swap2\n        /* \"ERC1967.sol\":23854:23870  return $._symbol */\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n        /* \"ERC1967.sol\":78237:78407  function mint(uint256 amount) public onlyOwner... */\n    tag_148:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_353\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_353:\n        /* \"ERC1967.sol\":78333:78341  tokenCap */\n      sload(0x15)\n        /* \"ERC1967.sol\":78323:78329  amount */\n      dup2\n        /* \"ERC1967.sol\":78308:78320  _totalSupply */\n      sload(0x17)\n        /* \"ERC1967.sol\":78308:78329  _totalSupply + amount */\n      tag_355\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"ERC1967.sol\":78308:78341  _totalSupply + amount <= tokenCap */\n      gt\n      iszero\n        /* \"ERC1967.sol\":78300:78366  require(_totalSupply + amount <= tokenCap, \"Supply Limit Reached\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12812:12814   */\n      0x20\n        /* \"ERC1967.sol\":78300:78366  require(_totalSupply + amount <= tokenCap, \"Supply Limit Reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12794:12815   */\n      mstore\n        /* \"#utility.yul\":12851:12853   */\n      0x14\n        /* \"#utility.yul\":12831:12849   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12824:12854   */\n      mstore\n      shl(0x62, 0x14dd5c1c1b1e48131a5b5a5d0814995858da1959)\n        /* \"#utility.yul\":12870:12888   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12863:12913   */\n      mstore\n        /* \"#utility.yul\":12930:12948   */\n      0x64\n      add\n        /* \"ERC1967.sol\":78300:78366  require(_totalSupply + amount <= tokenCap, \"Supply Limit Reached\") */\n      tag_219\n        /* \"#utility.yul\":12610:12954   */\n      jump\n        /* \"ERC1967.sol\":78300:78366  require(_totalSupply + amount <= tokenCap, \"Supply Limit Reached\") */\n    tag_357:\n        /* \"ERC1967.sol\":78377:78399  _mint(owner(), amount) */\n      tag_280\n        /* \"ERC1967.sol\":78383:78390  owner() */\n      tag_361\n        /* \"ERC1967.sol\":78383:78388  owner */\n      tag_135\n        /* \"ERC1967.sol\":78383:78390  owner() */\n      jump\t// in\n    tag_361:\n        /* \"ERC1967.sol\":78392:78398  amount */\n      dup3\n        /* \"ERC1967.sol\":78377:78382  _mint */\n      tag_362\n        /* \"ERC1967.sol\":78377:78399  _mint(owner(), amount) */\n      jump\t// in\n        /* \"ERC1967.sol\":25272:25454  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_152:\n        /* \"ERC1967.sol\":25341:25345  bool */\n      0x00\n        /* \"ERC1967.sol\":13742:13752  msg.sender */\n      caller\n        /* \"ERC1967.sol\":25397:25424  _transfer(owner, to, value) */\n      tag_224\n        /* \"ERC1967.sol\":13742:13752  msg.sender */\n      dup2\n        /* \"ERC1967.sol\":25414:25416  to */\n      dup6\n        /* \"ERC1967.sol\":25418:25423  value */\n      dup6\n        /* \"ERC1967.sol\":25397:25406  _transfer */\n      tag_265\n        /* \"ERC1967.sol\":25397:25424  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"ERC1967.sol\":67175:69361  function initialize(address initialOwner) initializer public {... */\n    tag_166:\n        /* \"ERC1967.sol\":12724:12745  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"ERC1967.sol\":8040:8055  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"ERC1967.sol\":8039:8055  !$._initializing */\n      iszero\n      swap1\n        /* \"ERC1967.sol\":8087:8101  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"ERC1967.sol\":7893:7923  InitializableStorage storage $ */\n      0x00\n        /* \"ERC1967.sol\":8472:8488  initialized == 0 */\n      dup2\n      iszero\n        /* \"ERC1967.sol\":8472:8506  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_370\n      jumpi\n      pop\n        /* \"ERC1967.sol\":8492:8506  isTopLevelCall */\n      dup3\n        /* \"ERC1967.sol\":8472:8506  initialized == 0 && isTopLevelCall */\n    tag_370:\n        /* \"ERC1967.sol\":8452:8506  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"ERC1967.sol\":8517:8534  bool construction */\n      0x00\n        /* \"ERC1967.sol\":8537:8548  initialized */\n      dup3\n        /* \"ERC1967.sol\":8537:8553  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"ERC1967.sol\":8552:8553  1 */\n      0x01\n        /* \"ERC1967.sol\":8537:8553  initialized == 1 */\n      eq\n        /* \"ERC1967.sol\":8537:8587  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_371\n      jumpi\n      pop\n        /* \"ERC1967.sol\":8565:8569  this */\n      address\n        /* \"ERC1967.sol\":8557:8582  address(this).code.length */\n      extcodesize\n        /* \"ERC1967.sol\":8557:8587  address(this).code.length == 0 */\n      iszero\n        /* \"ERC1967.sol\":8537:8587  initialized == 1 && address(this).code.length == 0 */\n    tag_371:\n        /* \"ERC1967.sol\":8517:8587  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"ERC1967.sol\":8605:8617  initialSetup */\n      dup2\n        /* \"ERC1967.sol\":8604:8617  !initialSetup */\n      iszero\n        /* \"ERC1967.sol\":8604:8634  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_372\n      jumpi\n      pop\n        /* \"ERC1967.sol\":8622:8634  construction */\n      dup1\n        /* \"ERC1967.sol\":8621:8634  !construction */\n      iszero\n        /* \"ERC1967.sol\":8604:8634  !initialSetup && !construction */\n    tag_372:\n        /* \"ERC1967.sol\":8600:8693  if (!initialSetup && !construction) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"ERC1967.sol\":8658:8681  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1967.sol\":8600:8693  if (!initialSetup && !construction) {... */\n    tag_373:\n        /* \"ERC1967.sol\":8703:8721  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"ERC1967.sol\":8720:8721  1 */\n      0x01\n        /* \"ERC1967.sol\":8703:8721  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"ERC1967.sol\":8732:8801  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_374\n      jumpi\n        /* \"ERC1967.sol\":8767:8789  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"ERC1967.sol\":8732:8801  if (isTopLevelCall) {... */\n    tag_374:\n        /* \"ERC1967.sol\":67247:67277  __ERC20_init(\"MyToken\", \"MTK\") */\n      tag_376\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc9, 0x26bcaa37b5b2b7)\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe8, 0x4d544b)\n      dup2\n      mstore\n      pop\n        /* \"ERC1967.sol\":67247:67259  __ERC20_init */\n      tag_377\n        /* \"ERC1967.sol\":67247:67277  __ERC20_init(\"MyToken\", \"MTK\") */\n      jump\t// in\n    tag_376:\n        /* \"ERC1967.sol\":67288:67316  __Ownable_init(initialOwner) */\n      tag_378\n        /* \"ERC1967.sol\":67303:67315  initialOwner */\n      dup7\n        /* \"ERC1967.sol\":67288:67302  __Ownable_init */\n      tag_379\n        /* \"ERC1967.sol\":67288:67316  __Ownable_init(initialOwner) */\n      jump\t// in\n    tag_378:\n        /* \"ERC1967.sol\":67327:67351  __UUPSUpgradeable_init() */\n      tag_380\n        /* \"ERC1967.sol\":67327:67349  __UUPSUpgradeable_init */\n      tag_381\n        /* \"ERC1967.sol\":67327:67351  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_380:\n        /* \"ERC1967.sol\":67377:67407  100_000_000_000_000 * 10 ** 18 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"ERC1967.sol\":67362:67374  _totalSupply */\n      0x17\n        /* \"ERC1967.sol\":67362:67407  _totalSupply = 100_000_000_000_000 * 10 ** 18 */\n      dup2\n      swap1\n      sstore\n        /* \"ERC1967.sol\":67429:67461  100_000_000_000_000_0 * 10 ** 18 */\n      0x314dc6448d9338c15b0a00000000\n        /* \"ERC1967.sol\":67418:67426  tokenCap */\n      0x15\n        /* \"ERC1967.sol\":67418:67461  tokenCap = 100_000_000_000_000_0 * 10 ** 18 */\n      sstore\n        /* \"ERC1967.sol\":67511:67515  1000 */\n      0x03e8\n      swap1\n        /* \"ERC1967.sol\":67490:67507  _totalSupply * 10 */\n      tag_382\n      swap1\n        /* \"ERC1967.sol\":67505:67507  10 */\n      0x0a\n        /* \"ERC1967.sol\":67490:67507  _totalSupply * 10 */\n      tag_198\n      jump\t// in\n    tag_382:\n        /* \"ERC1967.sol\":67489:67515  (_totalSupply * 10) / 1000 */\n      tag_383\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_383:\n        /* \"ERC1967.sol\":67472:67486  _txAmountLimit */\n      0x0f\n        /* \"ERC1967.sol\":67472:67515  _txAmountLimit = (_totalSupply * 10) / 1000 */\n      sstore\n        /* \"ERC1967.sol\":67548:67560  _totalSupply */\n      sload(0x17)\n        /* \"ERC1967.sol\":67569:67573  1000 */\n      0x03e8\n      swap1\n        /* \"ERC1967.sol\":67548:67565  _totalSupply * 10 */\n      tag_384\n      swap1\n        /* \"ERC1967.sol\":67563:67565  10 */\n      0x0a\n        /* \"ERC1967.sol\":67548:67565  _totalSupply * 10 */\n      tag_198\n      jump\t// in\n    tag_384:\n        /* \"ERC1967.sol\":67547:67573  (_totalSupply * 10) / 1000 */\n      tag_385\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_385:\n        /* \"ERC1967.sol\":67526:67544  _walletAmountLimit */\n      0x10\n        /* \"ERC1967.sol\":67526:67573  _walletAmountLimit = (_totalSupply * 10) / 1000 */\n      sstore\n        /* \"ERC1967.sol\":67600:67612  _totalSupply */\n      sload(0x17)\n        /* \"ERC1967.sol\":67620:67625  10000 */\n      0x2710\n      swap1\n        /* \"ERC1967.sol\":67600:67616  _totalSupply * 5 */\n      tag_386\n      swap1\n        /* \"ERC1967.sol\":67615:67616  5 */\n      0x05\n        /* \"ERC1967.sol\":67600:67616  _totalSupply * 5 */\n      tag_198\n      jump\t// in\n    tag_386:\n        /* \"ERC1967.sol\":67599:67625  (_totalSupply * 5) / 10000 */\n      tag_387\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_387:\n        /* \"ERC1967.sol\":67584:67596  _swapbackMin */\n      0x11\n        /* \"ERC1967.sol\":67584:67625  _swapbackMin = (_totalSupply * 5) / 10000 */\n      sstore\n        /* \"ERC1967.sol\":67652:67664  _totalSupply */\n      sload(0x17)\n        /* \"ERC1967.sol\":67674:67679  10000 */\n      0x2710\n      swap1\n        /* \"ERC1967.sol\":67652:67670  _totalSupply * 400 */\n      tag_388\n      swap1\n        /* \"ERC1967.sol\":67667:67670  400 */\n      0x0190\n        /* \"ERC1967.sol\":67652:67670  _totalSupply * 400 */\n      tag_198\n      jump\t// in\n    tag_388:\n        /* \"ERC1967.sol\":67651:67679  (_totalSupply * 400) / 10000 */\n      tag_389\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_389:\n        /* \"ERC1967.sol\":67636:67648  _swapbackMax */\n      0x12\n        /* \"ERC1967.sol\":67636:67679  _swapbackMax = (_totalSupply * 400) / 10000 */\n      sstore\n        /* \"ERC1967.sol\":67699:67701  15 */\n      0x0f\n        /* \"ERC1967.sol\":67690:67696  buyFee */\n      0x0b\n        /* \"ERC1967.sol\":67690:67701  buyFee = 15 */\n      sstore\n        /* \"ERC1967.sol\":67722:67724  40 */\n      0x28\n        /* \"ERC1967.sol\":67712:67719  sellFee */\n      0x0c\n        /* \"ERC1967.sol\":67712:67724  sellFee = 40 */\n      sstore\n        /* \"ERC1967.sol\":67756:67757  1 */\n      0x01\n        /* \"ERC1967.sol\":67735:67753  _preventSwapBefore */\n      0x0d\n        /* \"ERC1967.sol\":67735:67757  _preventSwapBefore = 1 */\n      dup2\n      swap1\n      sstore\n      0x00\n        /* \"ERC1967.sol\":67768:67777  _buyCount */\n      0x0e\n        /* \"ERC1967.sol\":67768:67781  _buyCount = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"ERC1967.sol\":67808:67812  this */\n      address\n        /* \"ERC1967.sol\":67792:67814  _canTx [address(this)] */\n      dup1\n      dup3\n      mstore\n        /* \"ERC1967.sol\":67792:67798  _canTx */\n      0x16\n        /* \"ERC1967.sol\":67792:67814  _canTx [address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"ERC1967.sol\":67792:67821  _canTx [address(this)] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":67833:67848  uniswapV2Router */\n      0x13\n        /* \"ERC1967.sol\":67833:67986  uniswapV2Router = IDexRouter(... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"ERC1967.sol\":67933:67975  0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 */\n      0x9ac64cc6e4415144c455bd8e4837fea55603e5c3\n        /* \"ERC1967.sol\":67833:67986  uniswapV2Router = IDexRouter(... */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":67997:68061  _approve(address(this), address(uniswapV2Router), totalSupply()) */\n      tag_390\n      swap2\n        /* \"ERC1967.sol\":67808:67812  this */\n      swap1\n        /* \"ERC1967.sol\":68047:68060  totalSupply() */\n      tag_391\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n      swap1\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"ERC1967.sol\":68047:68060  totalSupply() */\n    tag_391:\n        /* \"ERC1967.sol\":67997:68005  _approve */\n      tag_225\n        /* \"ERC1967.sol\":67997:68061  _approve(address(this), address(uniswapV2Router), totalSupply()) */\n      jump\t// in\n    tag_390:\n        /* \"ERC1967.sol\":68100:68115  uniswapV2Router */\n      0x13\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":68100:68123  uniswapV2Router.factory */\n      and\n      0xc45a0155\n        /* \"ERC1967.sol\":68100:68125  uniswapV2Router.factory() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_394\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":68088:68137  IDexFactory(uniswapV2Router.factory()).createPair */\n      and\n      0xc9c65396\n        /* \"ERC1967.sol\":68160:68164  this */\n      address\n        /* \"ERC1967.sol\":68180:68195  uniswapV2Router */\n      0x13\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":68180:68200  uniswapV2Router.WETH */\n      and\n      0xad5c4648\n        /* \"ERC1967.sol\":68180:68202  uniswapV2Router.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_397:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_398\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_398:\n        /* \"ERC1967.sol\":68088:68213  IDexFactory(uniswapV2Router.factory()).createPair(... */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13445:13460   */\n      swap3\n      dup4\n      and\n        /* \"ERC1967.sol\":68088:68213  IDexFactory(uniswapV2Router.factory()).createPair(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13427:13461   */\n      mstore\n        /* \"#utility.yul\":13497:13512   */\n      swap2\n      and\n        /* \"#utility.yul\":13477:13495   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13470:13513   */\n      mstore\n        /* \"#utility.yul\":13362:13380   */\n      0x44\n      add\n        /* \"ERC1967.sol\":68088:68213  IDexFactory(uniswapV2Router.factory()).createPair(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_402\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_402:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_403\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_403:\n        /* \"ERC1967.sol\":68072:68085  uniswapV2Pair */\n      0x14\n        /* \"ERC1967.sol\":68072:68213  uniswapV2Pair = IDexFactory(uniswapV2Router.factory()).createPair(... */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"ERC1967.sol\":68224:68289  _taxWallet1 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      dup1\n      sload\n      dup3\n      and\n        /* \"ERC1967.sol\":68246:68288  0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D */\n      0x2f8d1ddd0f3ccf0fe21c505a4ebc56f6f4626c0d\n        /* \"ERC1967.sol\":68224:68289  _taxWallet1 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"ERC1967.sol\":68300:68311  _taxWallet2 */\n      0x02\n        /* \"ERC1967.sol\":68300:68365  _taxWallet2 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      dup1\n      sload\n      dup5\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":68376:68387  _taxWallet3 */\n      0x03\n        /* \"ERC1967.sol\":68376:68441  _taxWallet3 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      dup1\n      sload\n      dup5\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":68452:68463  _taxWallet4 */\n      0x04\n        /* \"ERC1967.sol\":68452:68517  _taxWallet4 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      dup1\n      sload\n      dup5\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":68528:68539  _taxWallet5 */\n      0x05\n        /* \"ERC1967.sol\":68528:68593  _taxWallet5 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      dup1\n      sload\n      dup5\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":68604:68615  _taxWallet6 */\n      0x06\n        /* \"ERC1967.sol\":68604:68669  _taxWallet6 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      dup1\n      sload\n      dup5\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":68680:68691  _taxWallet7 */\n      0x07\n        /* \"ERC1967.sol\":68680:68745  _taxWallet7 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      dup1\n      sload\n      dup5\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":68756:68767  _taxWallet8 */\n      0x08\n        /* \"ERC1967.sol\":68756:68821  _taxWallet8 = payable(0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D) */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":68072:68085  uniswapV2Pair */\n      0x00\n      dup1\n        /* \"ERC1967.sol\":68851:68858  owner() */\n      tag_404\n        /* \"ERC1967.sol\":68851:68856  owner */\n      tag_135\n        /* \"ERC1967.sol\":68851:68858  owner() */\n      jump\t// in\n    tag_404:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":68832:68859  _isExcludedFromFee[owner()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC1967.sol\":68832:68866  _isExcludedFromFee[owner()] = true */\n      dup1\n      sload\n      swap6\n      iszero\n      iszero\n      not(0xff)\n      swap7\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":68904:68908  this */\n      address\n        /* \"ERC1967.sol\":68877:68910  _isExcludedFromFee[address(this)] */\n      dup2\n      mstore\n      swap3\n      dup4\n      swap1\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"ERC1967.sol\":68877:68917  _isExcludedFromFee[address(this)] = true */\n      dup1\n      sload\n      dup6\n      and\n        /* \"ERC1967.sol\":68832:68866  _isExcludedFromFee[owner()] = true */\n      0x01\n        /* \"ERC1967.sol\":68877:68917  _isExcludedFromFee[address(this)] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC1967.sol\":68947:68958  _taxWallet1 */\n      dup1\n      sload\n      dup3\n      and\n        /* \"ERC1967.sol\":68928:68959  _isExcludedFromFee[_taxWallet1] */\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"ERC1967.sol\":68928:68966  _isExcludedFromFee[_taxWallet1] = true */\n      dup1\n      sload\n      dup7\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":68996:69007  _taxWallet2 */\n      sload(0x02)\n      dup3\n      and\n        /* \"ERC1967.sol\":68977:69008  _isExcludedFromFee[_taxWallet2] */\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"ERC1967.sol\":68977:69015  _isExcludedFromFee[_taxWallet2] = true */\n      dup1\n      sload\n      dup7\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69045:69056  _taxWallet3 */\n      sload(0x03)\n      dup3\n      and\n        /* \"ERC1967.sol\":69026:69057  _isExcludedFromFee[_taxWallet3] */\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"ERC1967.sol\":69026:69064  _isExcludedFromFee[_taxWallet3] = true */\n      dup1\n      sload\n      dup7\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69094:69105  _taxWallet4 */\n      sload(0x04)\n      dup3\n      and\n        /* \"ERC1967.sol\":69075:69106  _isExcludedFromFee[_taxWallet4] */\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"ERC1967.sol\":69075:69113  _isExcludedFromFee[_taxWallet4] = true */\n      dup1\n      sload\n      dup7\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69143:69154  _taxWallet5 */\n      sload(0x05)\n      dup3\n      and\n        /* \"ERC1967.sol\":69124:69155  _isExcludedFromFee[_taxWallet5] */\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"ERC1967.sol\":69124:69162  _isExcludedFromFee[_taxWallet5] = true */\n      dup1\n      sload\n      dup7\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69192:69203  _taxWallet6 */\n      sload(0x06)\n      dup3\n      and\n        /* \"ERC1967.sol\":69173:69204  _isExcludedFromFee[_taxWallet6] */\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"ERC1967.sol\":69173:69211  _isExcludedFromFee[_taxWallet6] = true */\n      dup1\n      sload\n      dup7\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69241:69252  _taxWallet7 */\n      sload(0x07)\n      dup3\n      and\n        /* \"ERC1967.sol\":69222:69253  _isExcludedFromFee[_taxWallet7] */\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"ERC1967.sol\":69222:69260  _isExcludedFromFee[_taxWallet7] = true */\n      dup1\n      sload\n      dup7\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69290:69301  _taxWallet8 */\n      sload(0x08)\n      swap1\n      swap2\n      and\n        /* \"ERC1967.sol\":69271:69302  _isExcludedFromFee[_taxWallet8] */\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"ERC1967.sol\":69271:69309  _isExcludedFromFee[_taxWallet8] = true */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69340:69352  _totalSupply */\n      sload(0x17)\n        /* \"ERC1967.sol\":69322:69353  _mint(msg.sender, _totalSupply) */\n      tag_405\n      swap1\n        /* \"ERC1967.sol\":69328:69338  msg.sender */\n      caller\n      swap1\n        /* \"ERC1967.sol\":69322:69327  _mint */\n      tag_362\n        /* \"ERC1967.sol\":69322:69353  _mint(msg.sender, _totalSupply) */\n      jump\t// in\n    tag_405:\n        /* \"ERC1967.sol\":8827:8841  isTopLevelCall */\n      dup4\n        /* \"ERC1967.sol\":8823:8927  if (isTopLevelCall) {... */\n      iszero\n      tag_406\n      jumpi\n        /* \"ERC1967.sol\":8858:8881  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"ERC1967.sol\":8901:8915  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":13677:13727   */\n      dup2\n      mstore\n        /* \"ERC1967.sol\":8901:8915  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":13665:13667   */\n      0x20\n        /* \"#utility.yul\":13650:13668   */\n      add\n        /* \"ERC1967.sol\":8901:8915  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC1967.sol\":8823:8927  if (isTopLevelCall) {... */\n    tag_406:\n        /* \"ERC1967.sol\":7825:8934  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC1967.sol\":67175:69361  function initialize(address initialOwner) initializer public {... */\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":78133:78231  function changeTokenCap(uint amount) external  onlyOwner... */\n    tag_170:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_410\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_410:\n        /* \"ERC1967.sol\":78206:78214  tokenCap */\n      0x15\n        /* \"ERC1967.sol\":78206:78223  tokenCap = amount */\n      sstore\n        /* \"ERC1967.sol\":78133:78231  function changeTokenCap(uint amount) external  onlyOwner... */\n      jump\t// out\n        /* \"ERC1967.sol\":25517:25715  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":25678:25698  $._allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC1967.sol\":25597:25604  uint256 */\n      0x00\n        /* \"ERC1967.sol\":25678:25698  $._allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC1967.sol\":25678:25691  $._allowances */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01\n        /* \"ERC1967.sol\":25678:25698  $._allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC1967.sol\":25678:25707  $._allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC1967.sol\":25517:25715  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"ERC1967.sol\":70966:71229  function setWalletLimit(uint256 newValue) external onlyOwner {... */\n    tag_184:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_415\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_415:\n        /* \"ERC1967.sol\":71058:71059  1 */\n      0x01\n        /* \"ERC1967.sol\":71046:71054  newValue */\n      dup2\n        /* \"ERC1967.sol\":71046:71059  newValue >= 1 */\n      lt\n      iszero\n        /* \"ERC1967.sol\":71038:71098  require(newValue >= 1, \"Max wallet cant be lower than 0.1%\") */\n      tag_417\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13940:13942   */\n      0x20\n        /* \"ERC1967.sol\":71038:71098  require(newValue >= 1, \"Max wallet cant be lower than 0.1%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13922:13943   */\n      mstore\n        /* \"#utility.yul\":13979:13981   */\n      0x22\n        /* \"#utility.yul\":13959:13977   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13952:13982   */\n      mstore\n        /* \"#utility.yul\":14018:14052   */\n      0x4d61782077616c6c65742063616e74206265206c6f776572207468616e20302e\n        /* \"#utility.yul\":13998:14016   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13991:14053   */\n      mstore\n      shl(0xf0, 0x3125)\n        /* \"#utility.yul\":14069:14087   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14062:14094   */\n      mstore\n        /* \"#utility.yul\":14111:14130   */\n      0x84\n      add\n        /* \"ERC1967.sol\":71038:71098  require(newValue >= 1, \"Max wallet cant be lower than 0.1%\") */\n      tag_219\n        /* \"#utility.yul\":13738:14136   */\n      jump\n        /* \"ERC1967.sol\":71038:71098  require(newValue >= 1, \"Max wallet cant be lower than 0.1%\") */\n    tag_417:\n        /* \"ERC1967.sol\":71159:71163  1000 */\n      0x03e8\n        /* \"ERC1967.sol\":71147:71155  newValue */\n      dup2\n        /* \"ERC1967.sol\":71131:71144  totalSupply() */\n      tag_420\n      0x00\n      dup1\n      mload\n      0x20\n      data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":24808:24822  $._totalSupply */\n      sload\n      swap1\n        /* \"ERC1967.sol\":24675:24830  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"ERC1967.sol\":71131:71144  totalSupply() */\n    tag_420:\n        /* \"ERC1967.sol\":71131:71155  totalSupply() * newValue */\n      tag_421\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_421:\n        /* \"ERC1967.sol\":71130:71163  (totalSupply() * newValue) / 1000 */\n      tag_422\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_422:\n        /* \"ERC1967.sol\":71109:71127  _walletAmountLimit */\n      0x10\n        /* \"ERC1967.sol\":71109:71163  _walletAmountLimit = (totalSupply() * newValue) / 1000 */\n      dup2\n      swap1\n      sstore\n        /* \"ERC1967.sol\":71179:71221  MaxWalletAmountUpdated(_walletAmountLimit) */\n      mload(0x40)\n        /* \"#utility.yul\":1717:1742   */\n      swap1\n      dup2\n      mstore\n        /* \"ERC1967.sol\":71179:71221  MaxWalletAmountUpdated(_walletAmountLimit) */\n      0x4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e001\n      swap1\n        /* \"#utility.yul\":1705:1707   */\n      0x20\n        /* \"#utility.yul\":1690:1708   */\n      add\n        /* \"ERC1967.sol\":71179:71221  MaxWalletAmountUpdated(_walletAmountLimit) */\n      tag_304\n        /* \"#utility.yul\":1571:1748   */\n      jump\n        /* \"ERC1967.sol\":36620:36840  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_188:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_425\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_425:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":36705:36727  newOwner == address(0) */\n      dup2\n      and\n        /* \"ERC1967.sol\":36701:36794  if (newOwner == address(0)) {... */\n      tag_427\n      jumpi\n        /* \"ERC1967.sol\":36751:36782  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"ERC1967.sol\":36779:36780  0 */\n      0x00\n        /* \"ERC1967.sol\":36751:36782  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":36751:36782  OwnableInvalidOwner(address(0)) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":36701:36794  if (newOwner == address(0)) {... */\n    tag_427:\n        /* \"ERC1967.sol\":36804:36832  _transferOwnership(newOwner) */\n      tag_280\n        /* \"ERC1967.sol\":36823:36831  newOwner */\n      dup2\n        /* \"ERC1967.sol\":36804:36822  _transferOwnership */\n      tag_330\n        /* \"ERC1967.sol\":36804:36832  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"ERC1967.sol\":69530:69904  function open() external onlyOwner {... */\n    tag_191:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_431\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n    tag_431:\n        /* \"ERC1967.sol\":69585:69596  tradingOpen */\n      sload(0x14)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1967.sol\":69584:69596  !tradingOpen */\n      iszero\n        /* \"ERC1967.sol\":69576:69624  require(!tradingOpen, \"trading is already open\") */\n      tag_433\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14343:14345   */\n      0x20\n        /* \"ERC1967.sol\":69576:69624  require(!tradingOpen, \"trading is already open\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14325:14346   */\n      mstore\n        /* \"#utility.yul\":14382:14384   */\n      0x17\n        /* \"#utility.yul\":14362:14380   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14355:14385   */\n      mstore\n        /* \"#utility.yul\":14421:14446   */\n      0x74726164696e6720697320616c7265616479206f70656e000000000000000000\n        /* \"#utility.yul\":14401:14419   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14394:14447   */\n      mstore\n        /* \"#utility.yul\":14464:14482   */\n      0x64\n      add\n        /* \"ERC1967.sol\":69576:69624  require(!tradingOpen, \"trading is already open\") */\n      tag_219\n        /* \"#utility.yul\":14141:14488   */\n      jump\n        /* \"ERC1967.sol\":69576:69624  require(!tradingOpen, \"trading is already open\") */\n    tag_433:\n        /* \"ERC1967.sol\":69635:69646  swapEnabled */\n      0x14\n        /* \"ERC1967.sol\":69635:69653  swapEnabled = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff00ff))\n        /* \"ERC1967.sol\":69664:69682  tradingOpen = true */\n      and\n      shl(0xa0, 0x010001)\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69706:69718  block.number */\n      number\n        /* \"ERC1967.sol\":69693:69703  firstBlock */\n      0x09\n        /* \"ERC1967.sol\":69693:69718  firstBlock = block.number */\n      dup2\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69729:69744  lastLiquifyTime */\n      0x0a\n        /* \"ERC1967.sol\":69729:69767  lastLiquifyTime = uint64(block.number) */\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      and\n      0xffffffffffffffff\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69805:69809  this */\n      address\n      0x00\n        /* \"ERC1967.sol\":69778:69811  _isExcludedFromFee[address(this)] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC1967.sol\":69778:69818  _isExcludedFromFee[address(this)] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":69838:69840  25 */\n      0x19\n      0x0b\n        /* \"ERC1967.sol\":69829:69840  buyFee = 25 */\n      sstore\n        /* \"ERC1967.sol\":69861:69863  40 */\n      0x28\n        /* \"ERC1967.sol\":69851:69858  sellFee */\n      0x0c\n        /* \"ERC1967.sol\":69851:69863  sellFee = 40 */\n      sstore\n        /* \"ERC1967.sol\":69881:69896  TradingOpened() */\n      mload\n      0xea4359d5c4b8f0945a64ab9c37fe830b3407d45e0e6e6f84275977a570457d6f\n      swap2\n      swap1\n      log1\n        /* \"ERC1967.sol\":69530:69904  function open() external onlyOwner {... */\n      jump\t// out\n        /* \"ERC1967.sol\":35852:36018  function _checkOwner() internal view virtual {... */\n    tag_194:\n        /* \"ERC1967.sol\":13742:13752  msg.sender */\n      caller\n        /* \"ERC1967.sol\":35912:35919  owner() */\n      tag_438\n        /* \"ERC1967.sol\":35912:35917  owner */\n      tag_135\n        /* \"ERC1967.sol\":35912:35919  owner() */\n      jump\t// in\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":35912:35935  owner() != _msgSender() */\n      and\n      eq\n        /* \"ERC1967.sol\":35908:36011  if (owner() != _msgSender()) {... */\n      tag_329\n      jumpi\n        /* \"ERC1967.sol\":35959:35999  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"ERC1967.sol\":13742:13752  msg.sender */\n      caller\n        /* \"ERC1967.sol\":35959:35999  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":35959:35999  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":30933:31063  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_225:\n        /* \"ERC1967.sol\":31018:31055  _approve(owner, spender, value, true) */\n      tag_445\n        /* \"ERC1967.sol\":31027:31032  owner */\n      dup4\n        /* \"ERC1967.sol\":31034:31041  spender */\n      dup4\n        /* \"ERC1967.sol\":31043:31048  value */\n      dup4\n        /* \"ERC1967.sol\":31050:31054  true */\n      0x01\n        /* \"ERC1967.sol\":31018:31026  _approve */\n      tag_446\n        /* \"ERC1967.sol\":31018:31055  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_445:\n        /* \"ERC1967.sol\":30933:31063  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":32705:33192  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_263:\n        /* \"ERC1967.sol\":32805:32829  uint256 currentAllowance */\n      0x00\n        /* \"ERC1967.sol\":32832:32857  allowance(owner, spender) */\n      tag_448\n        /* \"ERC1967.sol\":32842:32847  owner */\n      dup5\n        /* \"ERC1967.sol\":32849:32856  spender */\n      dup5\n        /* \"ERC1967.sol\":32832:32841  allowance */\n      tag_179\n        /* \"ERC1967.sol\":32832:32857  allowance(owner, spender) */\n      jump\t// in\n    tag_448:\n        /* \"ERC1967.sol\":32805:32857  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"ERC1967.sol\":32872:32888  currentAllowance */\n      dup2\n        /* \"ERC1967.sol\":32872:32909  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC1967.sol\":32868:33185  if (currentAllowance != type(uint256).max) {... */\n      tag_232\n      jumpi\n        /* \"ERC1967.sol\":32949:32954  value */\n      dup2\n        /* \"ERC1967.sol\":32930:32946  currentAllowance */\n      dup2\n        /* \"ERC1967.sol\":32930:32954  currentAllowance < value */\n      lt\n        /* \"ERC1967.sol\":32926:33058  if (currentAllowance < value) {... */\n      iszero\n      tag_450\n      jumpi\n        /* \"ERC1967.sol\":32982:33042  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14713:14745   */\n      dup5\n      and\n        /* \"ERC1967.sol\":32982:33042  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14695:14746   */\n      mstore\n        /* \"#utility.yul\":14762:14780   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14755:14789   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14805:14823   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14798:14832   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14668:14686   */\n      0x64\n      add\n        /* \"ERC1967.sol\":32982:33042  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_219\n        /* \"#utility.yul\":14493:14838   */\n      jump\n        /* \"ERC1967.sol\":32926:33058  if (currentAllowance < value) {... */\n    tag_450:\n        /* \"ERC1967.sol\":33101:33158  _approve(owner, spender, currentAllowance - value, false) */\n      tag_232\n        /* \"ERC1967.sol\":33110:33115  owner */\n      dup5\n        /* \"ERC1967.sol\":33117:33124  spender */\n      dup5\n        /* \"ERC1967.sol\":33145:33150  value */\n      dup5\n        /* \"ERC1967.sol\":33126:33142  currentAllowance */\n      dup5\n        /* \"ERC1967.sol\":33126:33150  currentAllowance - value */\n      sub\n        /* \"ERC1967.sol\":33152:33157  false */\n      0x00\n        /* \"ERC1967.sol\":33101:33109  _approve */\n      tag_446\n        /* \"ERC1967.sol\":33101:33158  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"ERC1967.sol\":73615:76000  function _transfer(... */\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":73755:73773  from != address(0) */\n      dup4\n      and\n        /* \"ERC1967.sol\":73747:73815  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_455\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15045:15047   */\n      0x20\n        /* \"ERC1967.sol\":73747:73815  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15027:15048   */\n      mstore\n        /* \"#utility.yul\":15084:15086   */\n      0x25\n        /* \"#utility.yul\":15064:15082   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15057:15087   */\n      mstore\n        /* \"#utility.yul\":15123:15157   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":15103:15121   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15096:15158   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":15174:15192   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15167:15202   */\n      mstore\n        /* \"#utility.yul\":15219:15238   */\n      0x84\n      add\n        /* \"ERC1967.sol\":73747:73815  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_219\n        /* \"#utility.yul\":14843:15244   */\n      jump\n        /* \"ERC1967.sol\":73747:73815  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_455:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":73834:73850  to != address(0) */\n      dup3\n      and\n        /* \"ERC1967.sol\":73826:73890  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_458\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15451:15453   */\n      0x20\n        /* \"ERC1967.sol\":73826:73890  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15433:15454   */\n      mstore\n        /* \"#utility.yul\":15490:15492   */\n      0x23\n        /* \"#utility.yul\":15470:15488   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15463:15493   */\n      mstore\n        /* \"#utility.yul\":15529:15563   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":15509:15527   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15502:15564   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":15580:15598   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15573:15606   */\n      mstore\n        /* \"#utility.yul\":15623:15642   */\n      0x84\n      add\n        /* \"ERC1967.sol\":73826:73890  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_219\n        /* \"#utility.yul\":15249:15648   */\n      jump\n        /* \"ERC1967.sol\":73826:73890  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_458:\n        /* \"ERC1967.sol\":73918:73919  0 */\n      0x00\n        /* \"ERC1967.sol\":73909:73915  amount */\n      dup2\n        /* \"ERC1967.sol\":73909:73919  amount > 0 */\n      gt\n        /* \"ERC1967.sol\":73901:73965  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_461\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15855:15857   */\n      0x20\n        /* \"ERC1967.sol\":73901:73965  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15837:15858   */\n      mstore\n        /* \"#utility.yul\":15894:15896   */\n      0x29\n        /* \"#utility.yul\":15874:15892   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15867:15897   */\n      mstore\n        /* \"#utility.yul\":15933:15967   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":15913:15931   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15906:15968   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":15984:16002   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15977:16016   */\n      mstore\n        /* \"#utility.yul\":16033:16052   */\n      0x84\n      add\n        /* \"ERC1967.sol\":73901:73965  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_219\n        /* \"#utility.yul\":15653:16058   */\n      jump\n        /* \"ERC1967.sol\":73901:73965  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_461:\n        /* \"ERC1967.sol\":73976:73993  uint256 taxAmount */\n      0x00\n        /* \"ERC1967.sol\":74020:74027  owner() */\n      tag_464\n        /* \"ERC1967.sol\":74020:74025  owner */\n      tag_135\n        /* \"ERC1967.sol\":74020:74027  owner() */\n      jump\t// in\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74012:74027  from != owner() */\n      and\n        /* \"ERC1967.sol\":74012:74016  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74012:74027  from != owner() */\n      and\n      eq\n      iszero\n        /* \"ERC1967.sol\":74012:74044  from != owner() && to != owner() */\n      dup1\n      iszero\n      tag_465\n      jumpi\n      pop\n        /* \"ERC1967.sol\":74037:74044  owner() */\n      tag_466\n        /* \"ERC1967.sol\":74037:74042  owner */\n      tag_135\n        /* \"ERC1967.sol\":74037:74044  owner() */\n      jump\t// in\n    tag_466:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74031:74044  to != owner() */\n      and\n        /* \"ERC1967.sol\":74031:74033  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74031:74044  to != owner() */\n      and\n      eq\n      iszero\n        /* \"ERC1967.sol\":74012:74044  from != owner() && to != owner() */\n    tag_465:\n        /* \"ERC1967.sol\":74012:74055  from != owner() && to != owner() && !inSwap */\n      dup1\n      iszero\n      tag_467\n      jumpi\n      pop\n        /* \"ERC1967.sol\":74049:74055  inSwap */\n      sload(0x14)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1967.sol\":74048:74055  !inSwap */\n      iszero\n        /* \"ERC1967.sol\":74012:74055  from != owner() && to != owner() && !inSwap */\n    tag_467:\n        /* \"ERC1967.sol\":74008:75830  if (from != owner() && to != owner() && !inSwap) {... */\n      iszero\n      tag_468\n      jumpi\n        /* \"ERC1967.sol\":74076:74086  launchmode */\n      sload(0x14)\n      shl(0xb8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1967.sol\":74072:74161  if (launchmode){... */\n      iszero\n      tag_471\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74114:74126  _canTx[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC1967.sol\":74114:74120  _canTx */\n      0x16\n        /* \"ERC1967.sol\":74114:74126  _canTx[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"ERC1967.sol\":74114:74140  _canTx[from] || _canTx[to] */\n      tag_470\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74130:74140  _canTx[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC1967.sol\":74130:74136  _canTx */\n      0x16\n        /* \"ERC1967.sol\":74130:74140  _canTx[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC1967.sol\":74114:74140  _canTx[from] || _canTx[to] */\n    tag_470:\n        /* \"ERC1967.sol\":74106:74145  require(_canTx[from] || _canTx[to], \"\") */\n      tag_471\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16265:16267   */\n      0x20\n        /* \"ERC1967.sol\":74106:74145  require(_canTx[from] || _canTx[to], \"\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16247:16268   */\n      mstore\n      0x00\n        /* \"#utility.yul\":16284:16302   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16277:16306   */\n      mstore\n        /* \"#utility.yul\":16323:16341   */\n      0x44\n      add\n        /* \"ERC1967.sol\":74106:74145  require(_canTx[from] || _canTx[to], \"\") */\n      tag_219\n        /* \"#utility.yul\":16063:16347   */\n      jump\n        /* \"ERC1967.sol\":74106:74145  require(_canTx[from] || _canTx[to], \"\") */\n    tag_471:\n        /* \"ERC1967.sol\":74210:74213  100 */\n      0x64\n        /* \"ERC1967.sol\":74199:74205  buyFee */\n      sload(0x0b)\n        /* \"ERC1967.sol\":74189:74195  amount */\n      dup4\n        /* \"ERC1967.sol\":74189:74206  amount * (buyFee) */\n      tag_474\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_474:\n        /* \"ERC1967.sol\":74189:74214  amount * (buyFee) / (100) */\n      tag_475\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_475:\n        /* \"ERC1967.sol\":74261:74274  uniswapV2Pair */\n      sload(0x14)\n        /* \"ERC1967.sol\":74177:74214  taxAmount = amount * (buyFee) / (100) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74253:74274  from == uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"ERC1967.sol\":74261:74274  uniswapV2Pair */\n      swap2\n      and\n        /* \"ERC1967.sol\":74253:74274  from == uniswapV2Pair */\n      eq\n        /* \"ERC1967.sol\":74253:74325  from == uniswapV2Pair &&... */\n      dup1\n      iszero\n      tag_476\n      jumpi\n      pop\n        /* \"ERC1967.sol\":74309:74324  uniswapV2Router */\n      sload(0x13)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74295:74325  to != address(uniswapV2Router) */\n      dup5\n      dup2\n      and\n        /* \"ERC1967.sol\":74309:74324  uniswapV2Router */\n      swap2\n      and\n        /* \"ERC1967.sol\":74295:74325  to != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"ERC1967.sol\":74253:74325  from == uniswapV2Pair &&... */\n    tag_476:\n        /* \"ERC1967.sol\":74253:74369  from == uniswapV2Pair &&... */\n      dup1\n      iszero\n      tag_477\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74347:74369  _isExcludedFromFee[to] */\n      dup4\n      and\n        /* \"ERC1967.sol\":74347:74365  _isExcludedFromFee */\n      0x00\n        /* \"ERC1967.sol\":74347:74369  _isExcludedFromFee[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC1967.sol\":74346:74369  !_isExcludedFromFee[to] */\n      iszero\n        /* \"ERC1967.sol\":74253:74369  from == uniswapV2Pair &&... */\n    tag_477:\n        /* \"ERC1967.sol\":74231:74799  if (... */\n      iszero\n      tag_478\n      jumpi\n        /* \"ERC1967.sol\":74422:74436  _txAmountLimit */\n      sload(0x0f)\n        /* \"ERC1967.sol\":74412:74418  amount */\n      dup3\n        /* \"ERC1967.sol\":74412:74436  amount <= _txAmountLimit */\n      gt\n      iszero\n        /* \"ERC1967.sol\":74404:74468  require(amount <= _txAmountLimit, \"Exceeds the _txAmountLimit.\") */\n      tag_479\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16554:16556   */\n      0x20\n        /* \"ERC1967.sol\":74404:74468  require(amount <= _txAmountLimit, \"Exceeds the _txAmountLimit.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16536:16557   */\n      mstore\n        /* \"#utility.yul\":16593:16595   */\n      0x1b\n        /* \"#utility.yul\":16573:16591   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16566:16596   */\n      mstore\n        /* \"#utility.yul\":16632:16661   */\n      0x4578636565647320746865205f7478416d6f756e744c696d69742e0000000000\n        /* \"#utility.yul\":16612:16630   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16605:16662   */\n      mstore\n        /* \"#utility.yul\":16679:16697   */\n      0x64\n      add\n        /* \"ERC1967.sol\":74404:74468  require(amount <= _txAmountLimit, \"Exceeds the _txAmountLimit.\") */\n      tag_219\n        /* \"#utility.yul\":16352:16703   */\n      jump\n        /* \"ERC1967.sol\":74404:74468  require(amount <= _txAmountLimit, \"Exceeds the _txAmountLimit.\") */\n    tag_479:\n        /* \"ERC1967.sol\":74543:74561  _walletAmountLimit */\n      sload(0x10)\n        /* \"ERC1967.sol\":74533:74539  amount */\n      dup3\n        /* \"ERC1967.sol\":74517:74530  balanceOf(to) */\n      tag_482\n        /* \"ERC1967.sol\":74527:74529  to */\n      dup6\n        /* \"ERC1967.sol\":74517:74526  balanceOf */\n      tag_128\n        /* \"ERC1967.sol\":74517:74530  balanceOf(to) */\n      jump\t// in\n    tag_482:\n        /* \"ERC1967.sol\":74517:74539  balanceOf(to) + amount */\n      tag_483\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_483:\n        /* \"ERC1967.sol\":74517:74561  balanceOf(to) + amount <= _walletAmountLimit */\n      gt\n      iszero\n        /* \"ERC1967.sol\":74487:74631  require(... */\n      tag_484\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16910:16912   */\n      0x20\n        /* \"ERC1967.sol\":74487:74631  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16892:16913   */\n      mstore\n        /* \"#utility.yul\":16949:16951   */\n      0x1a\n        /* \"#utility.yul\":16929:16947   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16922:16952   */\n      mstore\n        /* \"#utility.yul\":16988:17016   */\n      0x4578636565647320746865206d617857616c6c657453697a652e000000000000\n        /* \"#utility.yul\":16968:16986   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16961:17017   */\n      mstore\n        /* \"#utility.yul\":17034:17052   */\n      0x64\n      add\n        /* \"ERC1967.sol\":74487:74631  require(... */\n      tag_219\n        /* \"#utility.yul\":16708:17058   */\n      jump\n        /* \"ERC1967.sol\":74487:74631  require(... */\n    tag_484:\n        /* \"ERC1967.sol\":74673:74685  block.number */\n      number\n        /* \"ERC1967.sol\":74656:74666  firstBlock */\n      sload(0x09)\n        /* \"ERC1967.sol\":74669:74670  3 */\n      0x03\n        /* \"ERC1967.sol\":74656:74670  firstBlock + 3 */\n      tag_487\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_487:\n        /* \"ERC1967.sol\":74656:74685  firstBlock + 3 > block.number */\n      gt\n        /* \"ERC1967.sol\":74652:74754  if (firstBlock + 3 > block.number) {... */\n      iszero\n      tag_491\n      jumpi\n        /* \"ERC1967.sol\":76254:76274  extcodesize(account) */\n      dup3\n      extcodesize\n        /* \"ERC1967.sol\":76302:76310  size > 0 */\n      iszero\n        /* \"ERC1967.sol\":74710:74734  require(!isContract(to)) */\n      tag_491\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_491:\n        /* \"ERC1967.sol\":74772:74781  _buyCount */\n      0x0e\n        /* \"ERC1967.sol\":74772:74783  _buyCount++ */\n      dup1\n      sload\n      swap1\n        /* \"ERC1967.sol\":74772:74781  _buyCount */\n      0x00\n        /* \"ERC1967.sol\":74772:74783  _buyCount++ */\n      tag_492\n      dup4\n      tag_493\n      jump\t// in\n    tag_492:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ERC1967.sol\":74231:74799  if (... */\n    tag_478:\n        /* \"ERC1967.sol\":74825:74838  uniswapV2Pair */\n      sload(0x14)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74819:74838  to != uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"ERC1967.sol\":74825:74838  uniswapV2Pair */\n      swap2\n      and\n        /* \"ERC1967.sol\":74819:74838  to != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"ERC1967.sol\":74819:74865  to != uniswapV2Pair && !_isExcludedFromFee[to] */\n      tag_494\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":74843:74865  _isExcludedFromFee[to] */\n      dup4\n      and\n        /* \"ERC1967.sol\":74843:74861  _isExcludedFromFee */\n      0x00\n        /* \"ERC1967.sol\":74843:74865  _isExcludedFromFee[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ERC1967.sol\":74842:74865  !_isExcludedFromFee[to] */\n      iszero\n        /* \"ERC1967.sol\":74819:74865  to != uniswapV2Pair && !_isExcludedFromFee[to] */\n    tag_494:\n        /* \"ERC1967.sol\":74815:75046  if (to != uniswapV2Pair && !_isExcludedFromFee[to]) {... */\n      iszero\n      tag_498\n      jumpi\n        /* \"ERC1967.sol\":74942:74960  _walletAmountLimit */\n      sload(0x10)\n        /* \"ERC1967.sol\":74932:74938  amount */\n      dup3\n        /* \"ERC1967.sol\":74916:74929  balanceOf(to) */\n      tag_496\n        /* \"ERC1967.sol\":74926:74928  to */\n      dup6\n        /* \"ERC1967.sol\":74916:74925  balanceOf */\n      tag_128\n        /* \"ERC1967.sol\":74916:74929  balanceOf(to) */\n      jump\t// in\n    tag_496:\n        /* \"ERC1967.sol\":74916:74938  balanceOf(to) + amount */\n      tag_497\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_497:\n        /* \"ERC1967.sol\":74916:74960  balanceOf(to) + amount <= _walletAmountLimit */\n      gt\n      iszero\n        /* \"ERC1967.sol\":74886:75030  require(... */\n      tag_498\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16910:16912   */\n      0x20\n        /* \"ERC1967.sol\":74886:75030  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16892:16913   */\n      mstore\n        /* \"#utility.yul\":16949:16951   */\n      0x1a\n        /* \"#utility.yul\":16929:16947   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16922:16952   */\n      mstore\n        /* \"#utility.yul\":16988:17016   */\n      0x4578636565647320746865206d617857616c6c657453697a652e000000000000\n        /* \"#utility.yul\":16968:16986   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16961:17017   */\n      mstore\n        /* \"#utility.yul\":17034:17052   */\n      0x64\n      add\n        /* \"ERC1967.sol\":74886:75030  require(... */\n      tag_219\n        /* \"#utility.yul\":16708:17058   */\n      jump\n        /* \"ERC1967.sol\":74886:75030  require(... */\n    tag_498:\n        /* \"ERC1967.sol\":75072:75085  uniswapV2Pair */\n      sload(0x14)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":75066:75085  to == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"ERC1967.sol\":75072:75085  uniswapV2Pair */\n      swap2\n      and\n        /* \"ERC1967.sol\":75066:75085  to == uniswapV2Pair */\n      eq\n        /* \"ERC1967.sol\":75066:75110  to == uniswapV2Pair && from != address(this) */\n      dup1\n      iszero\n      tag_500\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":75089:75110  from != address(this) */\n      dup5\n      and\n        /* \"ERC1967.sol\":75105:75109  this */\n      address\n        /* \"ERC1967.sol\":75089:75110  from != address(this) */\n      eq\n      iszero\n        /* \"ERC1967.sol\":75066:75110  to == uniswapV2Pair && from != address(this) */\n    tag_500:\n        /* \"ERC1967.sol\":75062:75185  if (to == uniswapV2Pair && from != address(this)) {... */\n      iszero\n      tag_501\n      jumpi\n        /* \"ERC1967.sol\":75165:75168  100 */\n      0x64\n        /* \"ERC1967.sol\":75153:75160  sellFee */\n      sload(0x0c)\n        /* \"ERC1967.sol\":75143:75149  amount */\n      dup4\n        /* \"ERC1967.sol\":75143:75161  amount * (sellFee) */\n      tag_502\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_502:\n        /* \"ERC1967.sol\":75143:75169  amount * (sellFee) / (100) */\n      tag_503\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_503:\n        /* \"ERC1967.sol\":75131:75169  taxAmount = amount * (sellFee) / (100) */\n      swap1\n      pop\n        /* \"ERC1967.sol\":75062:75185  if (to == uniswapV2Pair && from != address(this)) {... */\n    tag_501:\n        /* \"ERC1967.sol\":75201:75229  uint256 contractTokenBalance */\n      0x00\n        /* \"ERC1967.sol\":75232:75256  balanceOf(address(this)) */\n      tag_504\n        /* \"ERC1967.sol\":75250:75254  this */\n      address\n        /* \"ERC1967.sol\":75232:75241  balanceOf */\n      tag_128\n        /* \"ERC1967.sol\":75232:75256  balanceOf(address(this)) */\n      jump\t// in\n    tag_504:\n        /* \"ERC1967.sol\":75294:75300  inSwap */\n      sload(0x14)\n        /* \"ERC1967.sol\":75201:75256  uint256 contractTokenBalance = balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n      shl(0xa8, 0x01)\n        /* \"ERC1967.sol\":75294:75300  inSwap */\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1967.sol\":75293:75300  !inSwap */\n      iszero\n        /* \"ERC1967.sol\":75293:75340  !inSwap &&... */\n      dup1\n      iszero\n      tag_505\n      jumpi\n      pop\n        /* \"ERC1967.sol\":75327:75340  uniswapV2Pair */\n      sload(0x14)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":75321:75340  to == uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"ERC1967.sol\":75327:75340  uniswapV2Pair */\n      swap2\n      and\n        /* \"ERC1967.sol\":75321:75340  to == uniswapV2Pair */\n      eq\n        /* \"ERC1967.sol\":75293:75340  !inSwap &&... */\n    tag_505:\n        /* \"ERC1967.sol\":75293:75372  !inSwap &&... */\n      dup1\n      iszero\n      tag_506\n      jumpi\n      pop\n        /* \"ERC1967.sol\":75361:75372  swapEnabled */\n      sload(0x14)\n      shl(0xb0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1967.sol\":75293:75372  !inSwap &&... */\n    tag_506:\n        /* \"ERC1967.sol\":75293:75428  !inSwap &&... */\n      dup1\n      iszero\n      tag_507\n      jumpi\n      pop\n        /* \"ERC1967.sol\":75416:75428  _swapbackMin */\n      sload(0x11)\n        /* \"ERC1967.sol\":75393:75413  contractTokenBalance */\n      dup2\n        /* \"ERC1967.sol\":75393:75428  contractTokenBalance > _swapbackMin */\n      gt\n        /* \"ERC1967.sol\":75293:75428  !inSwap &&... */\n    tag_507:\n        /* \"ERC1967.sol\":75293:75479  !inSwap &&... */\n      dup1\n      iszero\n      tag_508\n      jumpi\n      pop\n        /* \"ERC1967.sol\":75461:75479  _preventSwapBefore */\n      sload(0x0d)\n        /* \"ERC1967.sol\":75449:75458  _buyCount */\n      sload(0x0e)\n        /* \"ERC1967.sol\":75449:75479  _buyCount > _preventSwapBefore */\n      gt\n        /* \"ERC1967.sol\":75293:75479  !inSwap &&... */\n    tag_508:\n        /* \"ERC1967.sol\":75293:75539  !inSwap &&... */\n      dup1\n      iszero\n      tag_509\n      jumpi\n      pop\n        /* \"ERC1967.sol\":75500:75515  lastLiquifyTime */\n      sload(0x0a)\n        /* \"ERC1967.sol\":75526:75538  block.number */\n      number\n        /* \"ERC1967.sol\":75500:75539  lastLiquifyTime != uint64(block.number) */\n      0xffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"ERC1967.sol\":75500:75515  lastLiquifyTime */\n      swap2\n      and\n        /* \"ERC1967.sol\":75500:75539  lastLiquifyTime != uint64(block.number) */\n      eq\n      iszero\n        /* \"ERC1967.sol\":75293:75539  !inSwap &&... */\n    tag_509:\n        /* \"ERC1967.sol\":75271:75819  if (... */\n      iszero\n      tag_510\n      jumpi\n        /* \"ERC1967.sol\":75574:75631  swapTokensForEth(min(contractTokenBalance, _swapbackMax)) */\n      tag_511\n        /* \"ERC1967.sol\":75591:75630  min(contractTokenBalance, _swapbackMax) */\n      tag_512\n        /* \"ERC1967.sol\":75595:75615  contractTokenBalance */\n      dup3\n        /* \"ERC1967.sol\":75617:75629  _swapbackMax */\n      sload(0x12)\n        /* \"ERC1967.sol\":75591:75594  min */\n      tag_513\n        /* \"ERC1967.sol\":75591:75630  min(contractTokenBalance, _swapbackMax) */\n      jump\t// in\n    tag_512:\n        /* \"ERC1967.sol\":75574:75590  swapTokensForEth */\n      tag_341\n        /* \"ERC1967.sol\":75574:75631  swapTokensForEth(min(contractTokenBalance, _swapbackMax)) */\n      jump\t// in\n    tag_511:\n        /* \"ERC1967.sol\":75679:75700  address(this).balance */\n      selfbalance\n        /* \"ERC1967.sol\":75723:75745  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"ERC1967.sol\":75719:75804  if (contractETHBalance > 0) {... */\n      tag_515\n      jumpi\n        /* \"ERC1967.sol\":75770:75784  sendETHToFee() */\n      tag_515\n        /* \"ERC1967.sol\":75770:75782  sendETHToFee */\n      tag_344\n        /* \"ERC1967.sol\":75770:75784  sendETHToFee() */\n      jump\t// in\n    tag_515:\n        /* \"ERC1967.sol\":75555:75819  {... */\n      pop\n        /* \"ERC1967.sol\":75271:75819  if (... */\n    tag_510:\n        /* \"ERC1967.sol\":74057:75830  {... */\n      pop\n        /* \"ERC1967.sol\":74008:75830  if (from != owner() && to != owner() && !inSwap) {... */\n    tag_468:\n        /* \"ERC1967.sol\":75846:75859  taxAmount > 0 */\n      dup1\n      iszero\n        /* \"ERC1967.sol\":75842:75935  if (taxAmount > 0) {... */\n      tag_517\n      jumpi\n        /* \"ERC1967.sol\":75876:75923  super._transfer(from, address(this), taxAmount) */\n      tag_517\n        /* \"ERC1967.sol\":75892:75896  from */\n      dup5\n        /* \"ERC1967.sol\":75906:75910  this */\n      address\n        /* \"ERC1967.sol\":75913:75922  taxAmount */\n      dup4\n        /* \"ERC1967.sol\":75876:75891  super._transfer */\n      tag_518\n        /* \"ERC1967.sol\":75876:75923  super._transfer(from, address(this), taxAmount) */\n      jump\t// in\n    tag_517:\n        /* \"ERC1967.sol\":75945:75992  super._transfer(from, to, amount - (taxAmount)) */\n      tag_232\n        /* \"ERC1967.sol\":75961:75965  from */\n      dup5\n        /* \"ERC1967.sol\":75967:75969  to */\n      dup5\n        /* \"ERC1967.sol\":75971:75991  amount - (taxAmount) */\n      tag_520\n        /* \"ERC1967.sol\":75981:75990  taxAmount */\n      dup5\n        /* \"ERC1967.sol\":75971:75977  amount */\n      dup7\n        /* \"ERC1967.sol\":75971:75991  amount - (taxAmount) */\n      tag_521\n      jump\t// in\n    tag_520:\n        /* \"ERC1967.sol\":75945:75960  super._transfer */\n      tag_518\n        /* \"ERC1967.sol\":75945:75992  super._transfer(from, to, amount - (taxAmount)) */\n      jump\t// in\n        /* \"ERC1967.sol\":30169:30380  function _burn(address account, uint256 value) internal {... */\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":30240:30261  account == address(0) */\n      dup3\n      and\n        /* \"ERC1967.sol\":30236:30327  if (account == address(0)) {... */\n      tag_523\n      jumpi\n        /* \"ERC1967.sol\":30285:30315  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"ERC1967.sol\":30312:30313  0 */\n      0x00\n        /* \"ERC1967.sol\":30285:30315  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":30285:30315  ERC20InvalidSender(address(0)) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":30236:30327  if (account == address(0)) {... */\n    tag_523:\n        /* \"ERC1967.sol\":30337:30372  _update(account, address(0), value) */\n      tag_259\n        /* \"ERC1967.sol\":30345:30352  account */\n      dup3\n        /* \"ERC1967.sol\":30362:30363  0 */\n      0x00\n        /* \"ERC1967.sol\":30366:30371  value */\n      dup4\n        /* \"ERC1967.sol\":30337:30344  _update */\n      tag_526\n        /* \"ERC1967.sol\":30337:30372  _update(account, address(0), value) */\n      jump\t// in\n        /* \"ERC1967.sol\":60585:60904  function _checkProxy() internal view virtual {... */\n    tag_285:\n        /* \"ERC1967.sol\":60667:60671  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":60676:60682  __self */\n      immutable(\"0xac8929c8974860d03a062a3562d586a140087e9e0f07f932aa4cee7e717608a8\")\n        /* \"ERC1967.sol\":60659:60682  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"ERC1967.sol\":60659:60780  address(this) == __self || // Must be called through delegatecall... */\n      tag_528\n      jumpi\n      pop\n        /* \"ERC1967.sol\":60774:60780  __self */\n      immutable(\"0xac8929c8974860d03a062a3562d586a140087e9e0f07f932aa4cee7e717608a8\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":60738:60780  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"ERC1967.sol\":60738:60770  ERC1967Utils.getImplementation() */\n      tag_529\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":51239:51292  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"ERC1967.sol\":51160:51300  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"ERC1967.sol\":60738:60770  ERC1967Utils.getImplementation() */\n    tag_529:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":60738:60780  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"ERC1967.sol\":60659:60780  address(this) == __self || // Must be called through delegatecall... */\n    tag_528:\n        /* \"ERC1967.sol\":60641:60897  if (... */\n      iszero\n      tag_329\n      jumpi\n        /* \"ERC1967.sol\":60856:60885  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1967.sol\":69369:69485  function _authorizeUpgrade(address newImplementation)... */\n    tag_288:\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      tag_280\n        /* \"ERC1967.sol\":35513:35524  _checkOwner */\n      tag_194\n        /* \"ERC1967.sol\":35513:35526  _checkOwner() */\n      jump\t// in\n        /* \"ERC1967.sol\":62078:62626  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_290:\n        /* \"ERC1967.sol\":62196:62213  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":62178:62228  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"ERC1967.sol\":62178:62230  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_536\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_537\n      swap2\n      dup2\n      add\n      swap1\n      tag_538\n      jump\t// in\n    tag_537:\n      0x01\n    tag_536:\n        /* \"ERC1967.sol\":62174:62619  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_539\n      jumpi\n        /* \"ERC1967.sol\":62547:62607  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6866:6898   */\n      dup4\n      and\n        /* \"ERC1967.sol\":62547:62607  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":62547:62607  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":62174:62619  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_539:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":62273:62313  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"ERC1967.sol\":62269:62391  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_545\n      jumpi\n        /* \"ERC1967.sol\":62341:62375  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1717:1742   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1690:1708   */\n      0x24\n      add\n        /* \"ERC1967.sol\":62341:62375  UUPSUnsupportedProxiableUUID(slot) */\n      tag_219\n        /* \"#utility.yul\":1571:1748   */\n      jump\n        /* \"ERC1967.sol\":62269:62391  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_545:\n        /* \"ERC1967.sol\":62405:62459  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_445\n        /* \"ERC1967.sol\":62435:62452  newImplementation */\n      dup4\n        /* \"ERC1967.sol\":62454:62458  data */\n      dup4\n        /* \"ERC1967.sol\":62405:62434  ERC1967Utils.upgradeToAndCall */\n      tag_548\n        /* \"ERC1967.sol\":62405:62459  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"ERC1967.sol\":61027:61245  function _checkNotDelegated() internal view virtual {... */\n    tag_293:\n        /* \"ERC1967.sol\":61102:61106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":61111:61117  __self */\n      immutable(\"0xac8929c8974860d03a062a3562d586a140087e9e0f07f932aa4cee7e717608a8\")\n        /* \"ERC1967.sol\":61094:61117  address(this) != __self */\n      and\n      eq\n        /* \"ERC1967.sol\":61090:61238  if (address(this) != __self) {... */\n      tag_329\n      jumpi\n        /* \"ERC1967.sol\":61197:61226  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1967.sol\":37000:37253  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_330:\n        /* \"ERC1967.sol\":34458:34480  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"ERC1967.sol\":37151:37159  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"ERC1967.sol\":37170:37189  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"ERC1967.sol\":37205:37245  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"ERC1967.sol\":37151:37159  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"ERC1967.sol\":37205:37245  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"ERC1967.sol\":37074:37098  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"ERC1967.sol\":37205:37245  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"ERC1967.sol\":37063:37253  {... */\n      pop\n      pop\n        /* \"ERC1967.sol\":37000:37253  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":76736:77268  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {... */\n    tag_341:\n        /* \"ERC1967.sol\":66989:66995  inSwap */\n      0x14\n        /* \"ERC1967.sol\":66989:67002  inSwap = true */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":76814:76829  lastLiquifyTime */\n      0x0a\n        /* \"ERC1967.sol\":76814:76852  lastLiquifyTime = uint64(block.number) */\n      dup1\n      sload\n      0xffffffffffffffff\n        /* \"ERC1967.sol\":76839:76851  block.number */\n      number\n        /* \"ERC1967.sol\":76814:76852  lastLiquifyTime = uint64(block.number) */\n      and\n      not(0xffffffffffffffff)\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":76887:76903  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"ERC1967.sol\":76901:76902  2 */\n      0x02\n        /* \"ERC1967.sol\":76887:76903  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      swap3\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"ERC1967.sol\":76863:76903  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"ERC1967.sol\":76932:76936  this */\n      address\n        /* \"ERC1967.sol\":76914:76918  path */\n      dup2\n        /* \"ERC1967.sol\":76919:76920  0 */\n      0x00\n        /* \"ERC1967.sol\":76914:76921  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_561\n      jumpi\n      tag_561\n      tag_236\n      jump\t// in\n    tag_561:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":76914:76937  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"ERC1967.sol\":76914:76921  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"ERC1967.sol\":76914:76937  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"ERC1967.sol\":76958:76973  uniswapV2Router */\n      sload(0x13)\n        /* \"ERC1967.sol\":76958:76980  uniswapV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC1967.sol\":76958:76973  uniswapV2Router */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"ERC1967.sol\":76958:76978  uniswapV2Router.WETH */\n      0xad5c4648\n      swap3\n        /* \"ERC1967.sol\":76958:76980  uniswapV2Router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"ERC1967.sol\":76914:76921  path[0] */\n      swap2\n      swap3\n        /* \"ERC1967.sol\":76958:76980  uniswapV2Router.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ERC1967.sol\":76958:76973  uniswapV2Router */\n      dup7\n        /* \"ERC1967.sol\":76958:76980  uniswapV2Router.WETH() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_563\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_563:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_564\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_564:\n        /* \"ERC1967.sol\":76948:76952  path */\n      dup2\n        /* \"ERC1967.sol\":76953:76954  1 */\n      0x01\n        /* \"ERC1967.sol\":76948:76955  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_566\n      jumpi\n      tag_566\n      tag_236\n      jump\t// in\n    tag_566:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":76948:76980  path[1] = uniswapV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"ERC1967.sol\":76948:76955  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"ERC1967.sol\":76948:76980  path[1] = uniswapV2Router.WETH() */\n      mstore\n        /* \"ERC1967.sol\":77023:77038  uniswapV2Router */\n      sload(0x13)\n        /* \"ERC1967.sol\":76991:77053  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      tag_567\n      swap2\n        /* \"ERC1967.sol\":77008:77012  this */\n      address\n      swap2\n        /* \"ERC1967.sol\":77023:77038  uniswapV2Router */\n      and\n        /* \"ERC1967.sol\":77041:77052  tokenAmount */\n      dup5\n        /* \"ERC1967.sol\":76991:76999  _approve */\n      tag_225\n        /* \"ERC1967.sol\":76991:77053  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      jump\t// in\n    tag_567:\n        /* \"ERC1967.sol\":77064:77079  uniswapV2Router */\n      sload(0x13)\n        /* \"ERC1967.sol\":77064:77260  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":77064:77079  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ERC1967.sol\":77064:77130  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"ERC1967.sol\":77064:77260  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      tag_568\n      swap1\n        /* \"ERC1967.sol\":77145:77156  tokenAmount */\n      dup6\n      swap1\n        /* \"ERC1967.sol\":77064:77079  uniswapV2Router */\n      0x00\n      swap1\n        /* \"ERC1967.sol\":77187:77191  path */\n      dup7\n      swap1\n        /* \"ERC1967.sol\":77214:77218  this */\n      address\n      swap1\n        /* \"ERC1967.sol\":77234:77249  block.timestamp */\n      timestamp\n      swap1\n        /* \"ERC1967.sol\":77064:77260  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      0x04\n      add\n      tag_569\n      jump\t// in\n    tag_568:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_570\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_570:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_572\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_572:\n      pop\n      pop\n        /* \"ERC1967.sol\":67025:67031  inSwap */\n      0x14\n        /* \"ERC1967.sol\":67025:67039  inSwap = false */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC1967.sol\":76736:77268  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {... */\n      jump\t// out\n        /* \"ERC1967.sol\":77276:78127  function sendETHToFee() private {... */\n    tag_344:\n        /* \"ERC1967.sol\":77319:77331  bool success */\n      0x00\n      dup1\n        /* \"ERC1967.sol\":77358:77383  address(this).balance / 8 */\n      tag_574\n        /* \"ERC1967.sol\":77382:77383  8 */\n      0x08\n        /* \"ERC1967.sol\":77358:77379  address(this).balance */\n      selfbalance\n        /* \"ERC1967.sol\":77358:77383  address(this).balance / 8 */\n      tag_200\n      jump\t// in\n    tag_574:\n        /* \"ERC1967.sol\":77416:77427  _taxWallet1 */\n      sload(0x01)\n        /* \"ERC1967.sol\":77408:77475  address(_taxWallet1).call{value: share}(... */\n      mload(0x40)\n        /* \"ERC1967.sol\":77342:77383  uint256 share = address(this).balance / 8 */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":77416:77427  _taxWallet1 */\n      and\n      swap1\n        /* \"ERC1967.sol\":77342:77383  uint256 share = address(this).balance / 8 */\n      dup3\n      swap1\n        /* \"ERC1967.sol\":77408:77475  address(_taxWallet1).call{value: share}(... */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ERC1967.sol\":77342:77383  uint256 share = address(this).balance / 8 */\n      dup6\n        /* \"ERC1967.sol\":77416:77427  _taxWallet1 */\n      dup8\n        /* \"ERC1967.sol\":77408:77475  address(_taxWallet1).call{value: share}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_579\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_578)\n    tag_579:\n      0x60\n      swap2\n      pop\n    tag_578:\n      pop\n      pop\n        /* \"ERC1967.sol\":77508:77519  _taxWallet2 */\n      sload(0x02)\n        /* \"ERC1967.sol\":77500:77567  address(_taxWallet2).call{value: share}(... */\n      mload(0x40)\n        /* \"ERC1967.sol\":77394:77475  (success, ) = address(_taxWallet1).call{value: share}(... */\n      swap2\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":77508:77519  _taxWallet2 */\n      and\n      swap1\n        /* \"ERC1967.sol\":77533:77538  share */\n      dup3\n      swap1\n        /* \"ERC1967.sol\":77500:77567  address(_taxWallet2).call{value: share}(... */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ERC1967.sol\":77533:77538  share */\n      dup6\n        /* \"ERC1967.sol\":77508:77519  _taxWallet2 */\n      dup8\n        /* \"ERC1967.sol\":77500:77567  address(_taxWallet2).call{value: share}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_583\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_582)\n    tag_583:\n      0x60\n      swap2\n      pop\n    tag_582:\n      pop\n      pop\n        /* \"ERC1967.sol\":77600:77611  _taxWallet3 */\n      sload(0x03)\n        /* \"ERC1967.sol\":77592:77659  address(_taxWallet3).call{value: share}(... */\n      mload(0x40)\n        /* \"ERC1967.sol\":77486:77567  (success, ) = address(_taxWallet2).call{value: share}(... */\n      swap2\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":77600:77611  _taxWallet3 */\n      and\n      swap1\n        /* \"ERC1967.sol\":77625:77630  share */\n      dup3\n      swap1\n        /* \"ERC1967.sol\":77592:77659  address(_taxWallet3).call{value: share}(... */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ERC1967.sol\":77625:77630  share */\n      dup6\n        /* \"ERC1967.sol\":77600:77611  _taxWallet3 */\n      dup8\n        /* \"ERC1967.sol\":77592:77659  address(_taxWallet3).call{value: share}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_587\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_586)\n    tag_587:\n      0x60\n      swap2\n      pop\n    tag_586:\n      pop\n      pop\n        /* \"ERC1967.sol\":77692:77703  _taxWallet4 */\n      sload(0x04)\n        /* \"ERC1967.sol\":77684:77751  address(_taxWallet4).call{value: share}(... */\n      mload(0x40)\n        /* \"ERC1967.sol\":77578:77659  (success, ) = address(_taxWallet3).call{value: share}(... */\n      swap2\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":77692:77703  _taxWallet4 */\n      and\n      swap1\n        /* \"ERC1967.sol\":77717:77722  share */\n      dup3\n      swap1\n        /* \"ERC1967.sol\":77684:77751  address(_taxWallet4).call{value: share}(... */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ERC1967.sol\":77717:77722  share */\n      dup6\n        /* \"ERC1967.sol\":77692:77703  _taxWallet4 */\n      dup8\n        /* \"ERC1967.sol\":77684:77751  address(_taxWallet4).call{value: share}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_591\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_590)\n    tag_591:\n      0x60\n      swap2\n      pop\n    tag_590:\n      pop\n      pop\n        /* \"ERC1967.sol\":77784:77795  _taxWallet5 */\n      sload(0x05)\n        /* \"ERC1967.sol\":77776:77843  address(_taxWallet5).call{value: share}(... */\n      mload(0x40)\n        /* \"ERC1967.sol\":77670:77751  (success, ) = address(_taxWallet4).call{value: share}(... */\n      swap2\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":77784:77795  _taxWallet5 */\n      and\n      swap1\n        /* \"ERC1967.sol\":77809:77814  share */\n      dup3\n      swap1\n        /* \"ERC1967.sol\":77776:77843  address(_taxWallet5).call{value: share}(... */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ERC1967.sol\":77809:77814  share */\n      dup6\n        /* \"ERC1967.sol\":77784:77795  _taxWallet5 */\n      dup8\n        /* \"ERC1967.sol\":77776:77843  address(_taxWallet5).call{value: share}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_595\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_594)\n    tag_595:\n      0x60\n      swap2\n      pop\n    tag_594:\n      pop\n      pop\n        /* \"ERC1967.sol\":77876:77887  _taxWallet6 */\n      sload(0x06)\n        /* \"ERC1967.sol\":77868:77935  address(_taxWallet6).call{value: share}(... */\n      mload(0x40)\n        /* \"ERC1967.sol\":77762:77843  (success, ) = address(_taxWallet5).call{value: share}(... */\n      swap2\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":77876:77887  _taxWallet6 */\n      and\n      swap1\n        /* \"ERC1967.sol\":77901:77906  share */\n      dup3\n      swap1\n        /* \"ERC1967.sol\":77868:77935  address(_taxWallet6).call{value: share}(... */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ERC1967.sol\":77901:77906  share */\n      dup6\n        /* \"ERC1967.sol\":77876:77887  _taxWallet6 */\n      dup8\n        /* \"ERC1967.sol\":77868:77935  address(_taxWallet6).call{value: share}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_599\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_598)\n    tag_599:\n      0x60\n      swap2\n      pop\n    tag_598:\n      pop\n      pop\n        /* \"ERC1967.sol\":77968:77979  _taxWallet7 */\n      sload(0x07)\n        /* \"ERC1967.sol\":77960:78027  address(_taxWallet7).call{value: share}(... */\n      mload(0x40)\n        /* \"ERC1967.sol\":77854:77935  (success, ) = address(_taxWallet6).call{value: share}(... */\n      swap2\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":77968:77979  _taxWallet7 */\n      and\n      swap1\n        /* \"ERC1967.sol\":77993:77998  share */\n      dup3\n      swap1\n        /* \"ERC1967.sol\":77960:78027  address(_taxWallet7).call{value: share}(... */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ERC1967.sol\":77993:77998  share */\n      dup6\n        /* \"ERC1967.sol\":77968:77979  _taxWallet7 */\n      dup8\n        /* \"ERC1967.sol\":77960:78027  address(_taxWallet7).call{value: share}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_603\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_602)\n    tag_603:\n      0x60\n      swap2\n      pop\n    tag_602:\n      pop\n      pop\n        /* \"ERC1967.sol\":78060:78071  _taxWallet8 */\n      sload(0x08)\n        /* \"ERC1967.sol\":78052:78119  address(_taxWallet8).call{value: share}(... */\n      mload(0x40)\n        /* \"ERC1967.sol\":77946:78027  (success, ) = address(_taxWallet7).call{value: share}(... */\n      swap2\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":78060:78071  _taxWallet8 */\n      and\n      swap1\n        /* \"ERC1967.sol\":78085:78090  share */\n      dup3\n      swap1\n        /* \"ERC1967.sol\":78052:78119  address(_taxWallet8).call{value: share}(... */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"ERC1967.sol\":78085:78090  share */\n      dup6\n        /* \"ERC1967.sol\":78060:78071  _taxWallet8 */\n      dup8\n        /* \"ERC1967.sol\":78052:78119  address(_taxWallet8).call{value: share}(... */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_607\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_606)\n    tag_607:\n      0x60\n      swap2\n      pop\n    tag_606:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC1967.sol\":77276:78127  function sendETHToFee() private {... */\n      jump\t// out\n        /* \"ERC1967.sol\":29628:29841  function _mint(address account, uint256 value) internal {... */\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":29699:29720  account == address(0) */\n      dup3\n      and\n        /* \"ERC1967.sol\":29695:29788  if (account == address(0)) {... */\n      tag_609\n      jumpi\n        /* \"ERC1967.sol\":29744:29776  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"ERC1967.sol\":29773:29774  0 */\n      0x00\n        /* \"ERC1967.sol\":29744:29776  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":29744:29776  ERC20InvalidReceiver(address(0)) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":29695:29788  if (account == address(0)) {... */\n    tag_609:\n        /* \"ERC1967.sol\":29798:29833  _update(address(0), account, value) */\n      tag_259\n        /* \"ERC1967.sol\":29814:29815  0 */\n      0x00\n        /* \"ERC1967.sol\":29818:29825  account */\n      dup4\n        /* \"ERC1967.sol\":29827:29832  value */\n      dup4\n        /* \"ERC1967.sol\":29798:29805  _update */\n      tag_526\n        /* \"ERC1967.sol\":29798:29833  _update(address(0), account, value) */\n      jump\t// in\n        /* \"ERC1967.sol\":23014:23163  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_377:\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      tag_614\n        /* \"ERC1967.sol\":10731:10749  _checkInitializing */\n      tag_615\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      jump\t// in\n    tag_614:\n        /* \"ERC1967.sol\":23117:23155  __ERC20_init_unchained(name_, symbol_) */\n      tag_259\n        /* \"ERC1967.sol\":23140:23145  name_ */\n      dup3\n        /* \"ERC1967.sol\":23147:23154  symbol_ */\n      dup3\n        /* \"ERC1967.sol\":23117:23139  __ERC20_init_unchained */\n      tag_618\n        /* \"ERC1967.sol\":23117:23155  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n        /* \"ERC1967.sol\":35011:35140  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_379:\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      tag_620\n        /* \"ERC1967.sol\":10731:10749  _checkInitializing */\n      tag_615\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      jump\t// in\n    tag_620:\n        /* \"ERC1967.sol\":35094:35132  __Ownable_init_unchained(initialOwner) */\n      tag_280\n        /* \"ERC1967.sol\":35119:35131  initialOwner */\n      dup2\n        /* \"ERC1967.sol\":35094:35118  __Ownable_init_unchained */\n      tag_623\n        /* \"ERC1967.sol\":35094:35132  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"ERC1967.sol\":58917:58985  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_381:\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      tag_329\n        /* \"ERC1967.sol\":10731:10749  _checkInitializing */\n      tag_615\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      jump\t// in\n        /* \"ERC1967.sol\":31914:32413  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_446:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":32081:32100  owner == address(0) */\n      dup6\n      and\n        /* \"ERC1967.sol\":32077:32168  if (owner == address(0)) {... */\n      tag_629\n      jumpi\n        /* \"ERC1967.sol\":32124:32156  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"ERC1967.sol\":32153:32154  0 */\n      0x00\n        /* \"ERC1967.sol\":32124:32156  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":32124:32156  ERC20InvalidApprover(address(0)) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":32077:32168  if (owner == address(0)) {... */\n    tag_629:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":32182:32203  spender == address(0) */\n      dup5\n      and\n        /* \"ERC1967.sol\":32178:32270  if (spender == address(0)) {... */\n      tag_631\n      jumpi\n        /* \"ERC1967.sol\":32227:32258  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"ERC1967.sol\":32255:32256  0 */\n      0x00\n        /* \"ERC1967.sol\":32227:32258  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":32227:32258  ERC20InvalidSpender(address(0)) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":32178:32270  if (spender == address(0)) {... */\n    tag_631:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":32280:32300  $._allowances[owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC1967.sol\":32280:32293  $._allowances */\n      0x01\n      dup4\n      add\n        /* \"ERC1967.sol\":32280:32300  $._allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC1967.sol\":32280:32309  $._allowances[owner][spender] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"ERC1967.sol\":32280:32317  $._allowances[owner][spender] = value */\n      dup4\n      swap1\n      sstore\n        /* \"ERC1967.sol\":32328:32406  if (emitEvent) {... */\n      dup2\n      iszero\n      tag_606\n      jumpi\n        /* \"ERC1967.sol\":32379:32386  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":32363:32394  Approval(owner, spender, value) */\n      and\n        /* \"ERC1967.sol\":32372:32377  owner */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":32363:32394  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC1967.sol\":32388:32393  value */\n      dup6\n        /* \"ERC1967.sol\":32363:32394  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_634\n      swap2\n        /* \"#utility.yul\":1717:1742   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1705:1707   */\n      0x20\n        /* \"#utility.yul\":1690:1708   */\n      add\n      swap1\n        /* \"#utility.yul\":1571:1748   */\n      jump\n        /* \"ERC1967.sol\":32363:32394  Approval(owner, spender, value) */\n    tag_634:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC1967.sol\":32012:32413  {... */\n      pop\n        /* \"ERC1967.sol\":31914:32413  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":76008:76115  function min(uint256 a, uint256 b) private pure returns (uint256) {... */\n    tag_513:\n        /* \"ERC1967.sol\":76065:76072  uint256 */\n      0x00\n        /* \"ERC1967.sol\":76097:76098  b */\n      dup2\n        /* \"ERC1967.sol\":76093:76094  a */\n      dup4\n        /* \"ERC1967.sol\":76093:76098  a > b */\n      gt\n        /* \"ERC1967.sol\":76092:76107  (a > b) ? b : a */\n      tag_637\n      jumpi\n        /* \"ERC1967.sol\":76106:76107  a */\n      dup3\n        /* \"ERC1967.sol\":76092:76107  (a > b) ? b : a */\n      jump(tag_260)\n    tag_637:\n      pop\n        /* \"ERC1967.sol\":76102:76103  b */\n      swap2\n        /* \"ERC1967.sol\":76085:76107  return (a > b) ? b : a */\n      swap1\n      pop\n        /* \"ERC1967.sol\":76008:76115  function min(uint256 a, uint256 b) private pure returns (uint256) {... */\n      jump\t// out\n        /* \"ERC1967.sol\":27436:27752  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_518:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":27528:27546  from == address(0) */\n      dup4\n      and\n        /* \"ERC1967.sol\":27524:27612  if (from == address(0)) {... */\n      tag_640\n      jumpi\n        /* \"ERC1967.sol\":27570:27600  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"ERC1967.sol\":27597:27598  0 */\n      0x00\n        /* \"ERC1967.sol\":27570:27600  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":27570:27600  ERC20InvalidSender(address(0)) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":27524:27612  if (from == address(0)) {... */\n    tag_640:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":27626:27642  to == address(0) */\n      dup3\n      and\n        /* \"ERC1967.sol\":27622:27710  if (to == address(0)) {... */\n      tag_642\n      jumpi\n        /* \"ERC1967.sol\":27666:27698  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"ERC1967.sol\":27695:27696  0 */\n      0x00\n        /* \"ERC1967.sol\":27666:27698  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":27666:27698  ERC20InvalidReceiver(address(0)) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":27622:27710  if (to == address(0)) {... */\n    tag_642:\n        /* \"ERC1967.sol\":27720:27744  _update(from, to, value) */\n      tag_445\n        /* \"ERC1967.sol\":27728:27732  from */\n      dup4\n        /* \"ERC1967.sol\":27734:27736  to */\n      dup4\n        /* \"ERC1967.sol\":27738:27743  value */\n      dup4\n        /* \"ERC1967.sol\":28076:29275  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_526:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":28220:28238  from == address(0) */\n      dup5\n      and\n        /* \"ERC1967.sol\":28216:28774  if (from == address(0)) {... */\n      tag_647\n      jumpi\n        /* \"ERC1967.sol\":28376:28381  value */\n      dup2\n        /* \"ERC1967.sol\":28358:28359  $ */\n      dup2\n        /* \"ERC1967.sol\":28358:28372  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"ERC1967.sol\":28358:28381  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_648\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_648:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ERC1967.sol\":28216:28774  if (from == address(0)) {... */\n      tag_649\n      swap1\n      pop\n      jump\n    tag_647:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":28436:28453  $._balances[from] */\n      dup5\n      and\n        /* \"ERC1967.sol\":28414:28433  uint256 fromBalance */\n      0x00\n        /* \"ERC1967.sol\":28436:28453  $._balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC1967.sol\":28472:28491  fromBalance < value */\n      dup3\n      dup2\n      lt\n        /* \"ERC1967.sol\":28468:28585  if (fromBalance < value) {... */\n      iszero\n      tag_650\n      jumpi\n        /* \"ERC1967.sol\":28519:28569  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14713:14745   */\n      dup7\n      and\n        /* \"ERC1967.sol\":28519:28569  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14695:14746   */\n      mstore\n        /* \"#utility.yul\":14762:14780   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14755:14789   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14805:14823   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14798:14832   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14668:14686   */\n      0x64\n      add\n        /* \"ERC1967.sol\":28519:28569  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_219\n        /* \"#utility.yul\":14493:14838   */\n      jump\n        /* \"ERC1967.sol\":28468:28585  if (fromBalance < value) {... */\n    tag_650:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":28708:28725  $._balances[from] */\n      dup6\n      and\n        /* \"ERC1967.sol\":28708:28719  $._balances */\n      0x00\n        /* \"ERC1967.sol\":28708:28725  $._balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup4\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ERC1967.sol\":28728:28747  fromBalance - value */\n      swap1\n      dup4\n      swap1\n      sub\n        /* \"ERC1967.sol\":28708:28747  $._balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"ERC1967.sol\":28216:28774  if (from == address(0)) {... */\n    tag_649:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":28790:28806  to == address(0) */\n      dup4\n      and\n        /* \"ERC1967.sol\":28786:29225  if (to == address(0)) {... */\n      tag_652\n      jumpi\n        /* \"ERC1967.sol\":28956:28970  $._totalSupply */\n      0x02\n      dup2\n      add\n        /* \"ERC1967.sol\":28956:28979  $._totalSupply -= value */\n      dup1\n      sload\n      dup4\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"ERC1967.sol\":28786:29225  if (to == address(0)) {... */\n      jump(tag_653)\n    tag_652:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":29174:29189  $._balances[to] */\n      dup4\n      and\n        /* \"ERC1967.sol\":29174:29185  $._balances */\n      0x00\n        /* \"ERC1967.sol\":29174:29189  $._balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ERC1967.sol\":29174:29198  $._balances[to] += value */\n      dup1\n      sload\n      dup4\n      add\n      swap1\n      sstore\n        /* \"ERC1967.sol\":28786:29225  if (to == address(0)) {... */\n    tag_653:\n        /* \"ERC1967.sol\":29257:29259  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":29242:29267  Transfer(from, to, value) */\n      and\n        /* \"ERC1967.sol\":29251:29255  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":29242:29267  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC1967.sol\":29261:29266  value */\n      dup5\n        /* \"ERC1967.sol\":29242:29267  Transfer(from, to, value) */\n      mload(0x40)\n      tag_654\n      swap2\n        /* \"#utility.yul\":1717:1742   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1705:1707   */\n      0x20\n        /* \"#utility.yul\":1690:1708   */\n      add\n      swap1\n        /* \"#utility.yul\":1571:1748   */\n      jump\n        /* \"ERC1967.sol\":29242:29267  Transfer(from, to, value) */\n    tag_654:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC1967.sol\":28151:29275  {... */\n      pop\n        /* \"ERC1967.sol\":28076:29275  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":52003:52347  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_548:\n        /* \"ERC1967.sol\":52095:52132  _setImplementation(newImplementation) */\n      tag_659\n        /* \"ERC1967.sol\":52114:52131  newImplementation */\n      dup3\n        /* \"ERC1967.sol\":52095:52113  _setImplementation */\n      tag_660\n        /* \"ERC1967.sol\":52095:52132  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_659:\n        /* \"ERC1967.sol\":52148:52175  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"ERC1967.sol\":52192:52203  data.length */\n      dup1\n      mload\n        /* \"ERC1967.sol\":52192:52207  data.length > 0 */\n      iszero\n        /* \"ERC1967.sol\":52188:52340  if (data.length > 0) {... */\n      tag_661\n      jumpi\n        /* \"ERC1967.sol\":52224:52277  Address.functionDelegateCall(newImplementation, data) */\n      tag_445\n        /* \"ERC1967.sol\":52253:52270  newImplementation */\n      dup3\n        /* \"ERC1967.sol\":52272:52276  data */\n      dup3\n        /* \"ERC1967.sol\":52224:52252  Address.functionDelegateCall */\n      tag_663\n        /* \"ERC1967.sol\":52224:52277  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"ERC1967.sol\":52188:52340  if (data.length > 0) {... */\n    tag_661:\n        /* \"ERC1967.sol\":52310:52328  _checkNonPayable() */\n      tag_259\n        /* \"ERC1967.sol\":52310:52326  _checkNonPayable */\n      tag_666\n        /* \"ERC1967.sol\":52310:52328  _checkNonPayable() */\n      jump\t// in\n        /* \"ERC1967.sol\":10891:11036  function _checkInitializing() internal view virtual {... */\n    tag_615:\n        /* \"ERC1967.sol\":12724:12745  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"ERC1967.sol\":12405:12445  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1967.sol\":10954:11029  if (!_isInitializing()) {... */\n      tag_329\n      jumpi\n        /* \"ERC1967.sol\":11000:11017  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1967.sol\":23171:23391  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_618:\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      tag_672\n        /* \"ERC1967.sol\":10731:10749  _checkInitializing */\n      tag_615\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      jump\t// in\n    tag_672:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":23338:23345  $._name */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n        /* \"ERC1967.sol\":23338:23353  $._name = name_ */\n      tag_675\n        /* \"ERC1967.sol\":23348:23353  name_ */\n      dup5\n        /* \"ERC1967.sol\":23338:23345  $._name */\n      dup3\n        /* \"ERC1967.sol\":23338:23353  $._name = name_ */\n      tag_676\n      jump\t// in\n    tag_675:\n      pop\n        /* \"ERC1967.sol\":23364:23373  $._symbol */\n      0x04\n      dup2\n      add\n        /* \"ERC1967.sol\":23364:23383  $._symbol = symbol_ */\n      tag_232\n        /* \"ERC1967.sol\":23376:23383  symbol_ */\n      dup4\n        /* \"ERC1967.sol\":23364:23373  $._symbol */\n      dup3\n        /* \"ERC1967.sol\":23364:23383  $._symbol = symbol_ */\n      tag_676\n      jump\t// in\n        /* \"ERC1967.sol\":35148:35388  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_623:\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      tag_425\n        /* \"ERC1967.sol\":10731:10749  _checkInitializing */\n      tag_615\n        /* \"ERC1967.sol\":10731:10751  _checkInitializing() */\n      jump\t// in\n        /* \"ERC1967.sol\":51396:51682  function _setImplementation(address newImplementation) private {... */\n    tag_660:\n        /* \"ERC1967.sol\":51474:51491  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":51474:51503  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"ERC1967.sol\":51507:51508  0 */\n      0x00\n        /* \"ERC1967.sol\":51474:51508  newImplementation.code.length == 0 */\n      sub\n        /* \"ERC1967.sol\":51470:51591  if (newImplementation.code.length == 0) {... */\n      tag_686\n      jumpi\n        /* \"ERC1967.sol\":51532:51579  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6866:6898   */\n      dup3\n      and\n        /* \"ERC1967.sol\":51532:51579  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":51532:51579  ERC1967InvalidImplementation(newImplementation) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":51470:51591  if (newImplementation.code.length == 0) {... */\n    tag_686:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC1967.sol\":51601:51674  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ERC1967.sol\":51396:51682  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"ERC1967.sol\":42949:43205  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_663:\n        /* \"ERC1967.sol\":43032:43044  bytes memory */\n      0x60\n        /* \"ERC1967.sol\":43058:43070  bool success */\n      0x00\n        /* \"ERC1967.sol\":43072:43095  bytes memory returndata */\n      dup1\n        /* \"ERC1967.sol\":43099:43105  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":43099:43118  target.delegatecall */\n      and\n        /* \"ERC1967.sol\":43119:43123  data */\n      dup5\n        /* \"ERC1967.sol\":43099:43124  target.delegatecall(data) */\n      mload(0x40)\n      tag_690\n      swap2\n      swap1\n      tag_691\n      jump\t// in\n    tag_690:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_694\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_693)\n    tag_694:\n      0x60\n      swap2\n      pop\n    tag_693:\n      pop\n        /* \"ERC1967.sol\":43057:43124  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ERC1967.sol\":43142:43197  verifyCallResultFromTarget(target, success, returndata) */\n      tag_695\n        /* \"ERC1967.sol\":43169:43175  target */\n      dup6\n        /* \"ERC1967.sol\":43177:43184  success */\n      dup4\n        /* \"ERC1967.sol\":43186:43196  returndata */\n      dup4\n        /* \"ERC1967.sol\":43142:43168  verifyCallResultFromTarget */\n      tag_696\n        /* \"ERC1967.sol\":43142:43197  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_695:\n        /* \"ERC1967.sol\":43135:43197  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"ERC1967.sol\":42949:43205  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1967.sol\":55927:56053  function _checkNonPayable() private {... */\n    tag_666:\n        /* \"ERC1967.sol\":55978:55987  msg.value */\n      callvalue\n        /* \"ERC1967.sol\":55978:55991  msg.value > 0 */\n      iszero\n        /* \"ERC1967.sol\":55974:56046  if (msg.value > 0) {... */\n      tag_329\n      jumpi\n        /* \"ERC1967.sol\":56015:56034  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1967.sol\":43478:44075  function verifyCallResultFromTarget(... */\n    tag_696:\n        /* \"ERC1967.sol\":43626:43638  bytes memory */\n      0x60\n        /* \"ERC1967.sol\":43656:43663  success */\n      dup3\n        /* \"ERC1967.sol\":43651:44068  if (!success) {... */\n      tag_702\n      jumpi\n        /* \"ERC1967.sol\":43680:43699  _revert(returndata) */\n      tag_703\n        /* \"ERC1967.sol\":43688:43698  returndata */\n      dup3\n        /* \"ERC1967.sol\":43680:43687  _revert */\n      tag_704\n        /* \"ERC1967.sol\":43680:43699  _revert(returndata) */\n      jump\t// in\n    tag_703:\n        /* \"ERC1967.sol\":43651:44068  if (!success) {... */\n      jump(tag_260)\n    tag_702:\n        /* \"ERC1967.sol\":43908:43925  returndata.length */\n      dup2\n      mload\n        /* \"ERC1967.sol\":43908:43930  returndata.length == 0 */\n      iszero\n        /* \"ERC1967.sol\":43908:43957  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_706\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC1967.sol\":43934:43952  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"ERC1967.sol\":43934:43957  target.code.length == 0 */\n      iszero\n        /* \"ERC1967.sol\":43908:43957  returndata.length == 0 && target.code.length == 0 */\n    tag_706:\n        /* \"ERC1967.sol\":43904:44025  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_707\n      jumpi\n        /* \"ERC1967.sol\":43985:44009  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6866:6898   */\n      dup6\n      and\n        /* \"ERC1967.sol\":43985:44009  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6848:6899   */\n      mstore\n        /* \"#utility.yul\":6821:6839   */\n      0x24\n      add\n        /* \"ERC1967.sol\":43985:44009  AddressEmptyCode(target) */\n      tag_219\n        /* \"#utility.yul\":6702:6905   */\n      jump\n        /* \"ERC1967.sol\":43904:44025  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_707:\n      pop\n        /* \"ERC1967.sol\":44046:44056  returndata */\n      dup1\n        /* \"ERC1967.sol\":44039:44056  return returndata */\n      jump(tag_260)\n        /* \"ERC1967.sol\":44628:45156  function _revert(bytes memory returndata) private pure {... */\n    tag_704:\n        /* \"ERC1967.sol\":44761:44778  returndata.length */\n      dup1\n      mload\n        /* \"ERC1967.sol\":44761:44782  returndata.length > 0 */\n      iszero\n        /* \"ERC1967.sol\":44757:45149  if (returndata.length > 0) {... */\n      tag_710\n      jumpi\n        /* \"ERC1967.sol\":44993:45003  returndata */\n      dup1\n        /* \"ERC1967.sol\":44987:45004  mload(returndata) */\n      mload\n        /* \"ERC1967.sol\":45050:45065  returndata_size */\n      dup1\n        /* \"ERC1967.sol\":45037:45047  returndata */\n      dup3\n        /* \"ERC1967.sol\":45033:45035  32 */\n      0x20\n        /* \"ERC1967.sol\":45029:45048  add(32, returndata) */\n      add\n        /* \"ERC1967.sol\":45022:45066  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"ERC1967.sol\":44757:45149  if (returndata.length > 0) {... */\n    tag_710:\n        /* \"ERC1967.sol\":45120:45137  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:262   */\n    tag_48:\n        /* \"#utility.yul\":82:88   */\n      0x00\n        /* \"#utility.yul\":90:96   */\n      dup1\n        /* \"#utility.yul\":143:145   */\n      0x40\n        /* \"#utility.yul\":131:140   */\n      dup4\n        /* \"#utility.yul\":122:129   */\n      dup6\n        /* \"#utility.yul\":118:141   */\n      sub\n        /* \"#utility.yul\":114:146   */\n      slt\n        /* \"#utility.yul\":111:163   */\n      iszero\n      tag_721\n      jumpi\n        /* \"#utility.yul\":159:160   */\n      0x00\n        /* \"#utility.yul\":156:157   */\n      dup1\n        /* \"#utility.yul\":149:161   */\n      revert\n        /* \"#utility.yul\":111:163   */\n    tag_721:\n      pop\n      pop\n        /* \"#utility.yul\":182:205   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":252:254   */\n      0x20\n        /* \"#utility.yul\":237:255   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":224:256   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":14:262   */\n      jump\t// out\n        /* \"#utility.yul\":267:517   */\n    tag_712:\n        /* \"#utility.yul\":352:353   */\n      0x00\n        /* \"#utility.yul\":362:475   */\n    tag_723:\n        /* \"#utility.yul\":376:382   */\n      dup4\n        /* \"#utility.yul\":373:374   */\n      dup2\n        /* \"#utility.yul\":370:383   */\n      lt\n        /* \"#utility.yul\":362:475   */\n      iszero\n      tag_725\n      jumpi\n        /* \"#utility.yul\":452:463   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":446:464   */\n      mload\n        /* \"#utility.yul\":433:444   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":426:465   */\n      mstore\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":391:401   */\n      add\n        /* \"#utility.yul\":362:475   */\n      jump(tag_723)\n    tag_725:\n      pop\n      pop\n        /* \"#utility.yul\":509:510   */\n      0x00\n        /* \"#utility.yul\":491:507   */\n      swap2\n      add\n        /* \"#utility.yul\":484:511   */\n      mstore\n        /* \"#utility.yul\":267:517   */\n      jump\t// out\n        /* \"#utility.yul\":522:918   */\n    tag_54:\n        /* \"#utility.yul\":671:673   */\n      0x20\n        /* \"#utility.yul\":660:669   */\n      dup2\n        /* \"#utility.yul\":653:674   */\n      mstore\n        /* \"#utility.yul\":634:638   */\n      0x00\n        /* \"#utility.yul\":703:709   */\n      dup3\n        /* \"#utility.yul\":697:710   */\n      mload\n        /* \"#utility.yul\":746:752   */\n      dup1\n        /* \"#utility.yul\":741:743   */\n      0x20\n        /* \"#utility.yul\":730:739   */\n      dup5\n        /* \"#utility.yul\":726:744   */\n      add\n        /* \"#utility.yul\":719:753   */\n      mstore\n        /* \"#utility.yul\":762:841   */\n      tag_727\n        /* \"#utility.yul\":834:840   */\n      dup2\n        /* \"#utility.yul\":829:831   */\n      0x40\n        /* \"#utility.yul\":818:827   */\n      dup6\n        /* \"#utility.yul\":814:832   */\n      add\n        /* \"#utility.yul\":809:811   */\n      0x20\n        /* \"#utility.yul\":801:807   */\n      dup8\n        /* \"#utility.yul\":797:812   */\n      add\n        /* \"#utility.yul\":762:841   */\n      tag_712\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":902:904   */\n      0x1f\n        /* \"#utility.yul\":881:896   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":877:906   */\n      and\n        /* \"#utility.yul\":862:907   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":909:911   */\n      0x40\n        /* \"#utility.yul\":858:912   */\n      add\n      swap3\n        /* \"#utility.yul\":522:918   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1054   */\n    tag_713:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":998:1029   */\n      dup2\n      and\n        /* \"#utility.yul\":988:1030   */\n      dup2\n      eq\n        /* \"#utility.yul\":978:1048   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1044:1045   */\n      0x00\n        /* \"#utility.yul\":1041:1042   */\n      dup1\n        /* \"#utility.yul\":1034:1046   */\n      revert\n        /* \"#utility.yul\":1059:1374   */\n    tag_61:\n        /* \"#utility.yul\":1127:1133   */\n      0x00\n        /* \"#utility.yul\":1135:1141   */\n      dup1\n        /* \"#utility.yul\":1188:1190   */\n      0x40\n        /* \"#utility.yul\":1176:1185   */\n      dup4\n        /* \"#utility.yul\":1167:1174   */\n      dup6\n        /* \"#utility.yul\":1163:1186   */\n      sub\n        /* \"#utility.yul\":1159:1191   */\n      slt\n        /* \"#utility.yul\":1156:1208   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":1204:1205   */\n      0x00\n        /* \"#utility.yul\":1201:1202   */\n      dup1\n        /* \"#utility.yul\":1194:1206   */\n      revert\n        /* \"#utility.yul\":1156:1208   */\n    tag_731:\n        /* \"#utility.yul\":1243:1252   */\n      dup3\n        /* \"#utility.yul\":1230:1253   */\n      calldataload\n        /* \"#utility.yul\":1262:1293   */\n      tag_732\n        /* \"#utility.yul\":1287:1292   */\n      dup2\n        /* \"#utility.yul\":1262:1293   */\n      tag_713\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":1312:1317   */\n      swap5\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"#utility.yul\":1349:1367   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1336:1368   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1059:1374   */\n      jump\t// out\n        /* \"#utility.yul\":1753:1913   */\n    tag_714:\n        /* \"#utility.yul\":1818:1838   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1874:1887   */\n      dup1\n      iszero\n        /* \"#utility.yul\":1867:1888   */\n      iszero\n        /* \"#utility.yul\":1857:1889   */\n      dup2\n      eq\n        /* \"#utility.yul\":1847:1907   */\n      tag_736\n      jumpi\n        /* \"#utility.yul\":1903:1904   */\n      0x00\n        /* \"#utility.yul\":1900:1901   */\n      dup1\n        /* \"#utility.yul\":1893:1905   */\n      revert\n        /* \"#utility.yul\":1847:1907   */\n    tag_736:\n        /* \"#utility.yul\":1753:1913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1918:2607   */\n    tag_73:\n        /* \"#utility.yul\":2010:2016   */\n      0x00\n        /* \"#utility.yul\":2018:2024   */\n      dup1\n        /* \"#utility.yul\":2026:2032   */\n      0x00\n        /* \"#utility.yul\":2079:2081   */\n      0x40\n        /* \"#utility.yul\":2067:2076   */\n      dup5\n        /* \"#utility.yul\":2058:2065   */\n      dup7\n        /* \"#utility.yul\":2054:2077   */\n      sub\n        /* \"#utility.yul\":2050:2082   */\n      slt\n        /* \"#utility.yul\":2047:2099   */\n      iszero\n      tag_738\n      jumpi\n        /* \"#utility.yul\":2095:2096   */\n      0x00\n        /* \"#utility.yul\":2092:2093   */\n      dup1\n        /* \"#utility.yul\":2085:2097   */\n      revert\n        /* \"#utility.yul\":2047:2099   */\n    tag_738:\n        /* \"#utility.yul\":2135:2144   */\n      dup4\n        /* \"#utility.yul\":2122:2145   */\n      calldataload\n        /* \"#utility.yul\":2164:2182   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2205:2207   */\n      dup1\n        /* \"#utility.yul\":2197:2203   */\n      dup3\n        /* \"#utility.yul\":2194:2208   */\n      gt\n        /* \"#utility.yul\":2191:2225   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":2221:2222   */\n      0x00\n        /* \"#utility.yul\":2218:2219   */\n      dup1\n        /* \"#utility.yul\":2211:2223   */\n      revert\n        /* \"#utility.yul\":2191:2225   */\n    tag_739:\n        /* \"#utility.yul\":2259:2265   */\n      dup2\n        /* \"#utility.yul\":2248:2257   */\n      dup7\n        /* \"#utility.yul\":2244:2266   */\n      add\n        /* \"#utility.yul\":2234:2266   */\n      swap2\n      pop\n        /* \"#utility.yul\":2304:2311   */\n      dup7\n        /* \"#utility.yul\":2297:2301   */\n      0x1f\n        /* \"#utility.yul\":2293:2295   */\n      dup4\n        /* \"#utility.yul\":2289:2302   */\n      add\n        /* \"#utility.yul\":2285:2312   */\n      slt\n        /* \"#utility.yul\":2275:2330   */\n      tag_740\n      jumpi\n        /* \"#utility.yul\":2326:2327   */\n      0x00\n        /* \"#utility.yul\":2323:2324   */\n      dup1\n        /* \"#utility.yul\":2316:2328   */\n      revert\n        /* \"#utility.yul\":2275:2330   */\n    tag_740:\n        /* \"#utility.yul\":2366:2368   */\n      dup2\n        /* \"#utility.yul\":2353:2369   */\n      calldataload\n        /* \"#utility.yul\":2392:2394   */\n      dup2\n        /* \"#utility.yul\":2384:2390   */\n      dup2\n        /* \"#utility.yul\":2381:2395   */\n      gt\n        /* \"#utility.yul\":2378:2412   */\n      iszero\n      tag_741\n      jumpi\n        /* \"#utility.yul\":2408:2409   */\n      0x00\n        /* \"#utility.yul\":2405:2406   */\n      dup1\n        /* \"#utility.yul\":2398:2410   */\n      revert\n        /* \"#utility.yul\":2378:2412   */\n    tag_741:\n        /* \"#utility.yul\":2463:2470   */\n      dup8\n        /* \"#utility.yul\":2456:2460   */\n      0x20\n        /* \"#utility.yul\":2446:2452   */\n      dup3\n        /* \"#utility.yul\":2443:2444   */\n      0x05\n        /* \"#utility.yul\":2439:2453   */\n      shl\n        /* \"#utility.yul\":2435:2437   */\n      dup6\n        /* \"#utility.yul\":2431:2454   */\n      add\n        /* \"#utility.yul\":2427:2461   */\n      add\n        /* \"#utility.yul\":2424:2471   */\n      gt\n        /* \"#utility.yul\":2421:2488   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":2484:2485   */\n      0x00\n        /* \"#utility.yul\":2481:2482   */\n      dup1\n        /* \"#utility.yul\":2474:2486   */\n      revert\n        /* \"#utility.yul\":2421:2488   */\n    tag_742:\n        /* \"#utility.yul\":2515:2519   */\n      0x20\n        /* \"#utility.yul\":2507:2520   */\n      swap3\n      dup4\n      add\n      swap6\n      pop\n        /* \"#utility.yul\":2539:2545   */\n      swap4\n      pop\n        /* \"#utility.yul\":2564:2601   */\n      tag_743\n      swap2\n        /* \"#utility.yul\":2580:2600   */\n      dup7\n      add\n      swap1\n      pop\n        /* \"#utility.yul\":2564:2601   */\n      tag_714\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":2554:2601   */\n      swap1\n      pop\n        /* \"#utility.yul\":1918:2607   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2612:3068   */\n    tag_81:\n        /* \"#utility.yul\":2689:2695   */\n      0x00\n        /* \"#utility.yul\":2697:2703   */\n      dup1\n        /* \"#utility.yul\":2705:2711   */\n      0x00\n        /* \"#utility.yul\":2758:2760   */\n      0x60\n        /* \"#utility.yul\":2746:2755   */\n      dup5\n        /* \"#utility.yul\":2737:2744   */\n      dup7\n        /* \"#utility.yul\":2733:2756   */\n      sub\n        /* \"#utility.yul\":2729:2761   */\n      slt\n        /* \"#utility.yul\":2726:2778   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":2774:2775   */\n      0x00\n        /* \"#utility.yul\":2771:2772   */\n      dup1\n        /* \"#utility.yul\":2764:2776   */\n      revert\n        /* \"#utility.yul\":2726:2778   */\n    tag_745:\n        /* \"#utility.yul\":2813:2822   */\n      dup4\n        /* \"#utility.yul\":2800:2823   */\n      calldataload\n        /* \"#utility.yul\":2832:2863   */\n      tag_746\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2832:2863   */\n      tag_713\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":2882:2887   */\n      swap3\n      pop\n        /* \"#utility.yul\":2939:2941   */\n      0x20\n        /* \"#utility.yul\":2924:2942   */\n      dup5\n      add\n        /* \"#utility.yul\":2911:2943   */\n      calldataload\n        /* \"#utility.yul\":2952:2985   */\n      tag_747\n        /* \"#utility.yul\":2911:2943   */\n      dup2\n        /* \"#utility.yul\":2952:2985   */\n      tag_713\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":2612:3068   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3004:3011   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3058:3060   */\n      0x40\n        /* \"#utility.yul\":3043:3061   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3030:3062   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2612:3068   */\n      jump\t// out\n        /* \"#utility.yul\":3073:4376   */\n    tag_87:\n        /* \"#utility.yul\":3259:3265   */\n      0x00\n        /* \"#utility.yul\":3267:3273   */\n      dup1\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3283:3289   */\n      dup1\n        /* \"#utility.yul\":3291:3297   */\n      0x00\n        /* \"#utility.yul\":3299:3305   */\n      dup1\n        /* \"#utility.yul\":3307:3313   */\n      0x00\n        /* \"#utility.yul\":3315:3321   */\n      dup1\n        /* \"#utility.yul\":3368:3371   */\n      0x0100\n        /* \"#utility.yul\":3356:3365   */\n      dup10\n        /* \"#utility.yul\":3347:3354   */\n      dup12\n        /* \"#utility.yul\":3343:3366   */\n      sub\n        /* \"#utility.yul\":3339:3372   */\n      slt\n        /* \"#utility.yul\":3336:3389   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3382:3383   */\n      dup1\n        /* \"#utility.yul\":3375:3387   */\n      revert\n        /* \"#utility.yul\":3336:3389   */\n    tag_749:\n        /* \"#utility.yul\":3424:3433   */\n      dup9\n        /* \"#utility.yul\":3411:3434   */\n      calldataload\n        /* \"#utility.yul\":3443:3474   */\n      tag_750\n        /* \"#utility.yul\":3468:3473   */\n      dup2\n        /* \"#utility.yul\":3443:3474   */\n      tag_713\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":3493:3498   */\n      swap8\n      pop\n        /* \"#utility.yul\":3550:3552   */\n      0x20\n        /* \"#utility.yul\":3535:3553   */\n      dup10\n      add\n        /* \"#utility.yul\":3522:3554   */\n      calldataload\n        /* \"#utility.yul\":3563:3596   */\n      tag_751\n        /* \"#utility.yul\":3522:3554   */\n      dup2\n        /* \"#utility.yul\":3563:3596   */\n      tag_713\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":3615:3622   */\n      swap7\n      pop\n        /* \"#utility.yul\":3674:3676   */\n      0x40\n        /* \"#utility.yul\":3659:3677   */\n      dup10\n      add\n        /* \"#utility.yul\":3646:3678   */\n      calldataload\n        /* \"#utility.yul\":3687:3720   */\n      tag_752\n        /* \"#utility.yul\":3646:3678   */\n      dup2\n        /* \"#utility.yul\":3687:3720   */\n      tag_713\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":3739:3746   */\n      swap6\n      pop\n        /* \"#utility.yul\":3798:3800   */\n      0x60\n        /* \"#utility.yul\":3783:3801   */\n      dup10\n      add\n        /* \"#utility.yul\":3770:3802   */\n      calldataload\n        /* \"#utility.yul\":3811:3844   */\n      tag_753\n        /* \"#utility.yul\":3770:3802   */\n      dup2\n        /* \"#utility.yul\":3811:3844   */\n      tag_713\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":3863:3870   */\n      swap5\n      pop\n        /* \"#utility.yul\":3922:3925   */\n      0x80\n        /* \"#utility.yul\":3907:3926   */\n      dup10\n      add\n        /* \"#utility.yul\":3894:3927   */\n      calldataload\n        /* \"#utility.yul\":3936:3969   */\n      tag_754\n        /* \"#utility.yul\":3894:3927   */\n      dup2\n        /* \"#utility.yul\":3936:3969   */\n      tag_713\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":3988:3995   */\n      swap4\n      pop\n        /* \"#utility.yul\":4047:4050   */\n      0xa0\n        /* \"#utility.yul\":4032:4051   */\n      dup10\n      add\n        /* \"#utility.yul\":4019:4052   */\n      calldataload\n        /* \"#utility.yul\":4061:4094   */\n      tag_755\n        /* \"#utility.yul\":4019:4052   */\n      dup2\n        /* \"#utility.yul\":4061:4094   */\n      tag_713\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":4113:4120   */\n      swap3\n      pop\n        /* \"#utility.yul\":4172:4175   */\n      0xc0\n        /* \"#utility.yul\":4157:4176   */\n      dup10\n      add\n        /* \"#utility.yul\":4144:4177   */\n      calldataload\n        /* \"#utility.yul\":4186:4219   */\n      tag_756\n        /* \"#utility.yul\":4144:4177   */\n      dup2\n        /* \"#utility.yul\":4186:4219   */\n      tag_713\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":4238:4245   */\n      swap2\n      pop\n        /* \"#utility.yul\":4297:4300   */\n      0xe0\n        /* \"#utility.yul\":4282:4301   */\n      dup10\n      add\n        /* \"#utility.yul\":4269:4302   */\n      calldataload\n        /* \"#utility.yul\":4311:4344   */\n      tag_757\n        /* \"#utility.yul\":4269:4302   */\n      dup2\n        /* \"#utility.yul\":4311:4344   */\n      tag_713\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":4363:4370   */\n      dup1\n        /* \"#utility.yul\":4353:4370   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3073:4376   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4381:4696   */\n    tag_92:\n        /* \"#utility.yul\":4446:4452   */\n      0x00\n        /* \"#utility.yul\":4454:4460   */\n      dup1\n        /* \"#utility.yul\":4507:4509   */\n      0x40\n        /* \"#utility.yul\":4495:4504   */\n      dup4\n        /* \"#utility.yul\":4486:4493   */\n      dup6\n        /* \"#utility.yul\":4482:4505   */\n      sub\n        /* \"#utility.yul\":4478:4510   */\n      slt\n        /* \"#utility.yul\":4475:4527   */\n      iszero\n      tag_759\n      jumpi\n        /* \"#utility.yul\":4523:4524   */\n      0x00\n        /* \"#utility.yul\":4520:4521   */\n      dup1\n        /* \"#utility.yul\":4513:4525   */\n      revert\n        /* \"#utility.yul\":4475:4527   */\n    tag_759:\n        /* \"#utility.yul\":4562:4571   */\n      dup3\n        /* \"#utility.yul\":4549:4572   */\n      calldataload\n        /* \"#utility.yul\":4581:4612   */\n      tag_760\n        /* \"#utility.yul\":4606:4611   */\n      dup2\n        /* \"#utility.yul\":4581:4612   */\n      tag_713\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":4631:4636   */\n      swap2\n      pop\n        /* \"#utility.yul\":4655:4690   */\n      tag_761\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4671:4689   */\n      dup5\n      add\n        /* \"#utility.yul\":4655:4690   */\n      tag_714\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":4645:4690   */\n      swap1\n      pop\n        /* \"#utility.yul\":4381:4696   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5070   */\n    tag_102:\n        /* \"#utility.yul\":4949:4955   */\n      0x00\n        /* \"#utility.yul\":5002:5004   */\n      0x20\n        /* \"#utility.yul\":4990:4999   */\n      dup3\n        /* \"#utility.yul\":4981:4988   */\n      dup5\n        /* \"#utility.yul\":4977:5000   */\n      sub\n        /* \"#utility.yul\":4973:5005   */\n      slt\n        /* \"#utility.yul\":4970:5022   */\n      iszero\n      tag_764\n      jumpi\n        /* \"#utility.yul\":5018:5019   */\n      0x00\n        /* \"#utility.yul\":5015:5016   */\n      dup1\n        /* \"#utility.yul\":5008:5020   */\n      revert\n        /* \"#utility.yul\":4970:5022   */\n    tag_764:\n      pop\n        /* \"#utility.yul\":5041:5064   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4890:5070   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5075:5202   */\n    tag_558:\n        /* \"#utility.yul\":5136:5146   */\n      0x4e487b71\n        /* \"#utility.yul\":5131:5134   */\n      0xe0\n        /* \"#utility.yul\":5127:5147   */\n      shl\n        /* \"#utility.yul\":5124:5125   */\n      0x00\n        /* \"#utility.yul\":5117:5148   */\n      mstore\n        /* \"#utility.yul\":5167:5171   */\n      0x41\n        /* \"#utility.yul\":5164:5165   */\n      0x04\n        /* \"#utility.yul\":5157:5172   */\n      mstore\n        /* \"#utility.yul\":5191:5195   */\n      0x24\n        /* \"#utility.yul\":5188:5189   */\n      0x00\n        /* \"#utility.yul\":5181:5196   */\n      revert\n        /* \"#utility.yul\":5207:6263   */\n    tag_106:\n        /* \"#utility.yul\":5284:5290   */\n      0x00\n        /* \"#utility.yul\":5292:5298   */\n      dup1\n        /* \"#utility.yul\":5345:5347   */\n      0x40\n        /* \"#utility.yul\":5333:5342   */\n      dup4\n        /* \"#utility.yul\":5324:5331   */\n      dup6\n        /* \"#utility.yul\":5320:5343   */\n      sub\n        /* \"#utility.yul\":5316:5348   */\n      slt\n        /* \"#utility.yul\":5313:5365   */\n      iszero\n      tag_767\n      jumpi\n        /* \"#utility.yul\":5361:5362   */\n      0x00\n        /* \"#utility.yul\":5358:5359   */\n      dup1\n        /* \"#utility.yul\":5351:5363   */\n      revert\n        /* \"#utility.yul\":5313:5365   */\n    tag_767:\n        /* \"#utility.yul\":5400:5409   */\n      dup3\n        /* \"#utility.yul\":5387:5410   */\n      calldataload\n        /* \"#utility.yul\":5419:5450   */\n      tag_768\n        /* \"#utility.yul\":5444:5449   */\n      dup2\n        /* \"#utility.yul\":5419:5450   */\n      tag_713\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":5469:5474   */\n      swap2\n      pop\n        /* \"#utility.yul\":5525:5527   */\n      0x20\n        /* \"#utility.yul\":5510:5528   */\n      dup4\n      add\n        /* \"#utility.yul\":5497:5529   */\n      calldataload\n        /* \"#utility.yul\":5548:5566   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5578:5592   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5575:5609   */\n      iszero\n      tag_769\n      jumpi\n        /* \"#utility.yul\":5605:5606   */\n      0x00\n        /* \"#utility.yul\":5602:5603   */\n      dup1\n        /* \"#utility.yul\":5595:5607   */\n      revert\n        /* \"#utility.yul\":5575:5609   */\n    tag_769:\n        /* \"#utility.yul\":5643:5649   */\n      dup2\n        /* \"#utility.yul\":5632:5641   */\n      dup6\n        /* \"#utility.yul\":5628:5650   */\n      add\n        /* \"#utility.yul\":5618:5650   */\n      swap2\n      pop\n        /* \"#utility.yul\":5688:5695   */\n      dup6\n        /* \"#utility.yul\":5681:5685   */\n      0x1f\n        /* \"#utility.yul\":5677:5679   */\n      dup4\n        /* \"#utility.yul\":5673:5686   */\n      add\n        /* \"#utility.yul\":5669:5696   */\n      slt\n        /* \"#utility.yul\":5659:5714   */\n      tag_770\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5659:5714   */\n    tag_770:\n        /* \"#utility.yul\":5746:5748   */\n      dup2\n        /* \"#utility.yul\":5733:5749   */\n      calldataload\n        /* \"#utility.yul\":5768:5770   */\n      dup2\n        /* \"#utility.yul\":5764:5766   */\n      dup2\n        /* \"#utility.yul\":5761:5771   */\n      gt\n        /* \"#utility.yul\":5758:5794   */\n      iszero\n      tag_772\n      jumpi\n        /* \"#utility.yul\":5774:5792   */\n      tag_772\n      tag_558\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":5849:5851   */\n      0x40\n        /* \"#utility.yul\":5843:5852   */\n      mload\n        /* \"#utility.yul\":5817:5819   */\n      0x1f\n        /* \"#utility.yul\":5903:5916   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5899:5921   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5923:5925   */\n      0x3f\n        /* \"#utility.yul\":5895:5926   */\n      add\n        /* \"#utility.yul\":5891:5931   */\n      and\n        /* \"#utility.yul\":5879:5932   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5947:5965   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":5967:5989   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":5944:5990   */\n      or\n        /* \"#utility.yul\":5941:6013   */\n      iszero\n      tag_774\n      jumpi\n        /* \"#utility.yul\":5993:6011   */\n      tag_774\n      tag_558\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":6033:6043   */\n      dup2\n        /* \"#utility.yul\":6029:6031   */\n      0x40\n        /* \"#utility.yul\":6022:6044   */\n      mstore\n        /* \"#utility.yul\":6068:6070   */\n      dup3\n        /* \"#utility.yul\":6060:6066   */\n      dup2\n        /* \"#utility.yul\":6053:6071   */\n      mstore\n        /* \"#utility.yul\":6108:6115   */\n      dup9\n        /* \"#utility.yul\":6103:6105   */\n      0x20\n        /* \"#utility.yul\":6098:6100   */\n      dup5\n        /* \"#utility.yul\":6094:6096   */\n      dup8\n        /* \"#utility.yul\":6090:6101   */\n      add\n        /* \"#utility.yul\":6086:6106   */\n      add\n        /* \"#utility.yul\":6083:6116   */\n      gt\n        /* \"#utility.yul\":6080:6133   */\n      iszero\n      tag_775\n      jumpi\n        /* \"#utility.yul\":6129:6130   */\n      0x00\n        /* \"#utility.yul\":6126:6127   */\n      dup1\n        /* \"#utility.yul\":6119:6131   */\n      revert\n        /* \"#utility.yul\":6080:6133   */\n    tag_775:\n        /* \"#utility.yul\":6185:6187   */\n      dup3\n        /* \"#utility.yul\":6180:6182   */\n      0x20\n        /* \"#utility.yul\":6176:6178   */\n      dup7\n        /* \"#utility.yul\":6172:6183   */\n      add\n        /* \"#utility.yul\":6167:6169   */\n      0x20\n        /* \"#utility.yul\":6159:6165   */\n      dup4\n        /* \"#utility.yul\":6155:6170   */\n      add\n        /* \"#utility.yul\":6142:6188   */\n      calldatacopy\n        /* \"#utility.yul\":6230:6231   */\n      0x00\n        /* \"#utility.yul\":6225:6227   */\n      0x20\n        /* \"#utility.yul\":6220:6222   */\n      dup5\n        /* \"#utility.yul\":6212:6218   */\n      dup4\n        /* \"#utility.yul\":6208:6223   */\n      add\n        /* \"#utility.yul\":6204:6228   */\n      add\n        /* \"#utility.yul\":6197:6232   */\n      mstore\n        /* \"#utility.yul\":6251:6257   */\n      dup1\n        /* \"#utility.yul\":6241:6257   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5207:6263   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6450:6697   */\n    tag_127:\n        /* \"#utility.yul\":6509:6515   */\n      0x00\n        /* \"#utility.yul\":6562:6564   */\n      0x20\n        /* \"#utility.yul\":6550:6559   */\n      dup3\n        /* \"#utility.yul\":6541:6548   */\n      dup5\n        /* \"#utility.yul\":6537:6560   */\n      sub\n        /* \"#utility.yul\":6533:6565   */\n      slt\n        /* \"#utility.yul\":6530:6582   */\n      iszero\n      tag_778\n      jumpi\n        /* \"#utility.yul\":6578:6579   */\n      0x00\n        /* \"#utility.yul\":6575:6576   */\n      dup1\n        /* \"#utility.yul\":6568:6580   */\n      revert\n        /* \"#utility.yul\":6530:6582   */\n    tag_778:\n        /* \"#utility.yul\":6617:6626   */\n      dup2\n        /* \"#utility.yul\":6604:6627   */\n      calldataload\n        /* \"#utility.yul\":6636:6667   */\n      tag_260\n        /* \"#utility.yul\":6661:6666   */\n      dup2\n        /* \"#utility.yul\":6636:6667   */\n      tag_713\n      jump\t// in\n        /* \"#utility.yul\":7450:7838   */\n    tag_178:\n        /* \"#utility.yul\":7518:7524   */\n      0x00\n        /* \"#utility.yul\":7526:7532   */\n      dup1\n        /* \"#utility.yul\":7579:7581   */\n      0x40\n        /* \"#utility.yul\":7567:7576   */\n      dup4\n        /* \"#utility.yul\":7558:7565   */\n      dup6\n        /* \"#utility.yul\":7554:7577   */\n      sub\n        /* \"#utility.yul\":7550:7582   */\n      slt\n        /* \"#utility.yul\":7547:7599   */\n      iszero\n      tag_783\n      jumpi\n        /* \"#utility.yul\":7595:7596   */\n      0x00\n        /* \"#utility.yul\":7592:7593   */\n      dup1\n        /* \"#utility.yul\":7585:7597   */\n      revert\n        /* \"#utility.yul\":7547:7599   */\n    tag_783:\n        /* \"#utility.yul\":7634:7643   */\n      dup3\n        /* \"#utility.yul\":7621:7644   */\n      calldataload\n        /* \"#utility.yul\":7653:7684   */\n      tag_784\n        /* \"#utility.yul\":7678:7683   */\n      dup2\n        /* \"#utility.yul\":7653:7684   */\n      tag_713\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":7703:7708   */\n      swap2\n      pop\n        /* \"#utility.yul\":7760:7762   */\n      0x20\n        /* \"#utility.yul\":7745:7763   */\n      dup4\n      add\n        /* \"#utility.yul\":7732:7764   */\n      calldataload\n        /* \"#utility.yul\":7773:7806   */\n      tag_785\n        /* \"#utility.yul\":7732:7764   */\n      dup2\n        /* \"#utility.yul\":7773:7806   */\n      tag_713\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":7825:7832   */\n      dup1\n        /* \"#utility.yul\":7815:7832   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7450:7838   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7843:7970   */\n    tag_715:\n        /* \"#utility.yul\":7904:7914   */\n      0x4e487b71\n        /* \"#utility.yul\":7899:7902   */\n      0xe0\n        /* \"#utility.yul\":7895:7915   */\n      shl\n        /* \"#utility.yul\":7892:7893   */\n      0x00\n        /* \"#utility.yul\":7885:7916   */\n      mstore\n        /* \"#utility.yul\":7935:7939   */\n      0x11\n        /* \"#utility.yul\":7932:7933   */\n      0x04\n        /* \"#utility.yul\":7925:7940   */\n      mstore\n        /* \"#utility.yul\":7959:7963   */\n      0x24\n        /* \"#utility.yul\":7956:7957   */\n      0x00\n        /* \"#utility.yul\":7949:7964   */\n      revert\n        /* \"#utility.yul\":7975:8143   */\n    tag_198:\n        /* \"#utility.yul\":8048:8057   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8079:8088   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8096:8111   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8090:8112   */\n      dup5\n      eq\n        /* \"#utility.yul\":8076:8113   */\n      or\n        /* \"#utility.yul\":8066:8137   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":8117:8135   */\n      tag_221\n      tag_715\n      jump\t// in\n        /* \"#utility.yul\":8148:8365   */\n    tag_200:\n        /* \"#utility.yul\":8188:8189   */\n      0x00\n        /* \"#utility.yul\":8214:8215   */\n      dup3\n        /* \"#utility.yul\":8204:8336   */\n      tag_791\n      jumpi\n        /* \"#utility.yul\":8258:8268   */\n      0x4e487b71\n        /* \"#utility.yul\":8253:8256   */\n      0xe0\n        /* \"#utility.yul\":8249:8269   */\n      shl\n        /* \"#utility.yul\":8246:8247   */\n      0x00\n        /* \"#utility.yul\":8239:8270   */\n      mstore\n        /* \"#utility.yul\":8293:8297   */\n      0x12\n        /* \"#utility.yul\":8290:8291   */\n      0x04\n        /* \"#utility.yul\":8283:8298   */\n      mstore\n        /* \"#utility.yul\":8321:8325   */\n      0x24\n        /* \"#utility.yul\":8318:8319   */\n      0x00\n        /* \"#utility.yul\":8311:8326   */\n      revert\n        /* \"#utility.yul\":8204:8336   */\n    tag_791:\n      pop\n        /* \"#utility.yul\":8350:8359   */\n      div\n      swap1\n        /* \"#utility.yul\":8148:8365   */\n      jump\t// out\n        /* \"#utility.yul\":8623:9003   */\n    tag_210:\n        /* \"#utility.yul\":8702:8703   */\n      0x01\n        /* \"#utility.yul\":8698:8710   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8745:8757   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8766:8827   */\n      tag_794\n      jumpi\n        /* \"#utility.yul\":8820:8824   */\n      0x7f\n        /* \"#utility.yul\":8812:8818   */\n      dup3\n        /* \"#utility.yul\":8808:8825   */\n      and\n        /* \"#utility.yul\":8798:8825   */\n      swap2\n      pop\n        /* \"#utility.yul\":8766:8827   */\n    tag_794:\n        /* \"#utility.yul\":8873:8875   */\n      0x20\n        /* \"#utility.yul\":8865:8871   */\n      dup3\n        /* \"#utility.yul\":8862:8876   */\n      lt\n        /* \"#utility.yul\":8842:8860   */\n      dup2\n        /* \"#utility.yul\":8839:8877   */\n      sub\n        /* \"#utility.yul\":8836:8997   */\n      tag_637\n      jumpi\n        /* \"#utility.yul\":8919:8929   */\n      0x4e487b71\n        /* \"#utility.yul\":8914:8917   */\n      0xe0\n        /* \"#utility.yul\":8910:8930   */\n      shl\n        /* \"#utility.yul\":8907:8908   */\n      0x00\n        /* \"#utility.yul\":8900:8931   */\n      mstore\n        /* \"#utility.yul\":8954:8958   */\n      0x22\n        /* \"#utility.yul\":8951:8952   */\n      0x04\n        /* \"#utility.yul\":8944:8959   */\n      mstore\n        /* \"#utility.yul\":8982:8986   */\n      0x24\n        /* \"#utility.yul\":8979:8980   */\n      0x00\n        /* \"#utility.yul\":8972:8987   */\n      revert\n        /* \"#utility.yul\":9368:9495   */\n    tag_236:\n        /* \"#utility.yul\":9429:9439   */\n      0x4e487b71\n        /* \"#utility.yul\":9424:9427   */\n      0xe0\n        /* \"#utility.yul\":9420:9440   */\n      shl\n        /* \"#utility.yul\":9417:9418   */\n      0x00\n        /* \"#utility.yul\":9410:9441   */\n      mstore\n        /* \"#utility.yul\":9460:9464   */\n      0x32\n        /* \"#utility.yul\":9457:9458   */\n      0x04\n        /* \"#utility.yul\":9450:9465   */\n      mstore\n        /* \"#utility.yul\":9484:9488   */\n      0x24\n        /* \"#utility.yul\":9481:9482   */\n      0x00\n        /* \"#utility.yul\":9474:9489   */\n      revert\n        /* \"#utility.yul\":12480:12605   */\n    tag_356:\n        /* \"#utility.yul\":12545:12554   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12566:12576   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12563:12599   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":12579:12597   */\n      tag_221\n      tag_715\n      jump\t// in\n        /* \"#utility.yul\":12959:13210   */\n    tag_395:\n        /* \"#utility.yul\":13029:13035   */\n      0x00\n        /* \"#utility.yul\":13082:13084   */\n      0x20\n        /* \"#utility.yul\":13070:13079   */\n      dup3\n        /* \"#utility.yul\":13061:13068   */\n      dup5\n        /* \"#utility.yul\":13057:13080   */\n      sub\n        /* \"#utility.yul\":13053:13085   */\n      slt\n        /* \"#utility.yul\":13050:13102   */\n      iszero\n      tag_810\n      jumpi\n        /* \"#utility.yul\":13098:13099   */\n      0x00\n        /* \"#utility.yul\":13095:13096   */\n      dup1\n        /* \"#utility.yul\":13088:13100   */\n      revert\n        /* \"#utility.yul\":13050:13102   */\n    tag_810:\n        /* \"#utility.yul\":13130:13139   */\n      dup2\n        /* \"#utility.yul\":13124:13140   */\n      mload\n        /* \"#utility.yul\":13149:13180   */\n      tag_260\n        /* \"#utility.yul\":13174:13179   */\n      dup2\n        /* \"#utility.yul\":13149:13180   */\n      tag_713\n      jump\t// in\n        /* \"#utility.yul\":17063:17198   */\n    tag_493:\n        /* \"#utility.yul\":17102:17105   */\n      0x00\n        /* \"#utility.yul\":17123:17140   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":17120:17163   */\n      tag_825\n      jumpi\n        /* \"#utility.yul\":17143:17161   */\n      tag_825\n      tag_715\n      jump\t// in\n    tag_825:\n      pop\n        /* \"#utility.yul\":17190:17191   */\n      0x01\n        /* \"#utility.yul\":17179:17192   */\n      add\n      swap1\n        /* \"#utility.yul\":17063:17198   */\n      jump\t// out\n        /* \"#utility.yul\":17203:17331   */\n    tag_521:\n        /* \"#utility.yul\":17270:17279   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":17291:17302   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":17288:17325   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":17305:17323   */\n      tag_221\n      tag_715\n      jump\t// in\n        /* \"#utility.yul\":17336:17520   */\n    tag_538:\n        /* \"#utility.yul\":17406:17412   */\n      0x00\n        /* \"#utility.yul\":17459:17461   */\n      0x20\n        /* \"#utility.yul\":17447:17456   */\n      dup3\n        /* \"#utility.yul\":17438:17445   */\n      dup5\n        /* \"#utility.yul\":17434:17457   */\n      sub\n        /* \"#utility.yul\":17430:17462   */\n      slt\n        /* \"#utility.yul\":17427:17479   */\n      iszero\n      tag_830\n      jumpi\n        /* \"#utility.yul\":17475:17476   */\n      0x00\n        /* \"#utility.yul\":17472:17473   */\n      dup1\n        /* \"#utility.yul\":17465:17477   */\n      revert\n        /* \"#utility.yul\":17427:17479   */\n    tag_830:\n      pop\n        /* \"#utility.yul\":17498:17514   */\n      mload\n      swap2\n        /* \"#utility.yul\":17336:17520   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17525:18505   */\n    tag_569:\n        /* \"#utility.yul\":17787:17791   */\n      0x00\n        /* \"#utility.yul\":17835:17838   */\n      0xa0\n        /* \"#utility.yul\":17824:17833   */\n      dup3\n        /* \"#utility.yul\":17820:17839   */\n      add\n        /* \"#utility.yul\":17866:17872   */\n      dup8\n        /* \"#utility.yul\":17855:17864   */\n      dup4\n        /* \"#utility.yul\":17848:17873   */\n      mstore\n        /* \"#utility.yul\":17892:17894   */\n      0x20\n        /* \"#utility.yul\":17930:17936   */\n      dup8\n        /* \"#utility.yul\":17925:17927   */\n      0x20\n        /* \"#utility.yul\":17914:17923   */\n      dup6\n        /* \"#utility.yul\":17910:17928   */\n      add\n        /* \"#utility.yul\":17903:17937   */\n      mstore\n        /* \"#utility.yul\":17973:17976   */\n      0xa0\n        /* \"#utility.yul\":17968:17970   */\n      0x40\n        /* \"#utility.yul\":17957:17966   */\n      dup6\n        /* \"#utility.yul\":17953:17971   */\n      add\n        /* \"#utility.yul\":17946:17977   */\n      mstore\n        /* \"#utility.yul\":17997:18003   */\n      dup2\n        /* \"#utility.yul\":18032:18038   */\n      dup8\n        /* \"#utility.yul\":18026:18039   */\n      mload\n        /* \"#utility.yul\":18063:18069   */\n      dup1\n        /* \"#utility.yul\":18055:18061   */\n      dup5\n        /* \"#utility.yul\":18048:18070   */\n      mstore\n        /* \"#utility.yul\":18101:18104   */\n      0xc0\n        /* \"#utility.yul\":18090:18099   */\n      dup7\n        /* \"#utility.yul\":18086:18105   */\n      add\n        /* \"#utility.yul\":18079:18105   */\n      swap2\n      pop\n        /* \"#utility.yul\":18140:18142   */\n      0x20\n        /* \"#utility.yul\":18132:18138   */\n      dup10\n        /* \"#utility.yul\":18128:18143   */\n      add\n        /* \"#utility.yul\":18114:18143   */\n      swap4\n      pop\n        /* \"#utility.yul\":18161:18162   */\n      0x00\n        /* \"#utility.yul\":18171:18366   */\n    tag_832:\n        /* \"#utility.yul\":18185:18191   */\n      dup2\n        /* \"#utility.yul\":18182:18183   */\n      dup2\n        /* \"#utility.yul\":18179:18192   */\n      lt\n        /* \"#utility.yul\":18171:18366   */\n      iszero\n      tag_834\n      jumpi\n        /* \"#utility.yul\":18250:18263   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18246:18285   */\n      and\n        /* \"#utility.yul\":18234:18286   */\n      dup4\n      mstore\n        /* \"#utility.yul\":18341:18356   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":18306:18318   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":18282:18283   */\n      0x01\n        /* \"#utility.yul\":18200:18209   */\n      add\n        /* \"#utility.yul\":18171:18366   */\n      jump(tag_832)\n    tag_834:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18422:18454   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":18417:18419   */\n      0x60\n        /* \"#utility.yul\":18402:18420   */\n      dup6\n      add\n        /* \"#utility.yul\":18395:18455   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18486:18489   */\n      0x80\n        /* \"#utility.yul\":18471:18490   */\n      add\n        /* \"#utility.yul\":18464:18499   */\n      mstore\n        /* \"#utility.yul\":18383:18386   */\n      swap4\n        /* \"#utility.yul\":17525:18505   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18846:19364   */\n    tag_717:\n        /* \"#utility.yul\":18948:18950   */\n      0x1f\n        /* \"#utility.yul\":18943:18946   */\n      dup3\n        /* \"#utility.yul\":18940:18951   */\n      gt\n        /* \"#utility.yul\":18937:19358   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":18984:18989   */\n      dup1\n        /* \"#utility.yul\":18981:18982   */\n      0x00\n        /* \"#utility.yul\":18974:18990   */\n      mstore\n        /* \"#utility.yul\":19028:19032   */\n      0x20\n        /* \"#utility.yul\":19025:19026   */\n      0x00\n        /* \"#utility.yul\":19015:19033   */\n      keccak256\n        /* \"#utility.yul\":19098:19100   */\n      0x1f\n        /* \"#utility.yul\":19086:19096   */\n      dup5\n        /* \"#utility.yul\":19082:19101   */\n      add\n        /* \"#utility.yul\":19079:19080   */\n      0x05\n        /* \"#utility.yul\":19075:19102   */\n      shr\n        /* \"#utility.yul\":19069:19073   */\n      dup2\n        /* \"#utility.yul\":19065:19103   */\n      add\n        /* \"#utility.yul\":19134:19138   */\n      0x20\n        /* \"#utility.yul\":19122:19132   */\n      dup6\n        /* \"#utility.yul\":19119:19139   */\n      lt\n        /* \"#utility.yul\":19116:19163   */\n      iszero\n      tag_839\n      jumpi\n      pop\n        /* \"#utility.yul\":19157:19161   */\n      dup1\n        /* \"#utility.yul\":19116:19163   */\n    tag_839:\n        /* \"#utility.yul\":19212:19214   */\n      0x1f\n        /* \"#utility.yul\":19207:19210   */\n      dup5\n        /* \"#utility.yul\":19203:19215   */\n      add\n        /* \"#utility.yul\":19200:19201   */\n      0x05\n        /* \"#utility.yul\":19196:19216   */\n      shr\n        /* \"#utility.yul\":19190:19194   */\n      dup3\n        /* \"#utility.yul\":19186:19217   */\n      add\n        /* \"#utility.yul\":19176:19217   */\n      swap2\n      pop\n        /* \"#utility.yul\":19267:19348   */\n    tag_840:\n        /* \"#utility.yul\":19285:19287   */\n      dup2\n        /* \"#utility.yul\":19278:19283   */\n      dup2\n        /* \"#utility.yul\":19275:19288   */\n      lt\n        /* \"#utility.yul\":19267:19348   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":19344:19345   */\n      0x00\n        /* \"#utility.yul\":19330:19346   */\n      dup2\n      sstore\n        /* \"#utility.yul\":19311:19312   */\n      0x01\n        /* \"#utility.yul\":19300:19313   */\n      add\n        /* \"#utility.yul\":19267:19348   */\n      jump(tag_840)\n        /* \"#utility.yul\":19540:20885   */\n    tag_676:\n        /* \"#utility.yul\":19666:19669   */\n      dup2\n        /* \"#utility.yul\":19660:19670   */\n      mload\n        /* \"#utility.yul\":19693:19711   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19685:19691   */\n      dup2\n        /* \"#utility.yul\":19682:19712   */\n      gt\n        /* \"#utility.yul\":19679:19735   */\n      iszero\n      tag_846\n      jumpi\n        /* \"#utility.yul\":19715:19733   */\n      tag_846\n      tag_558\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":19744:19841   */\n      tag_847\n        /* \"#utility.yul\":19834:19840   */\n      dup2\n        /* \"#utility.yul\":19794:19832   */\n      tag_848\n        /* \"#utility.yul\":19826:19830   */\n      dup5\n        /* \"#utility.yul\":19820:19831   */\n      sload\n        /* \"#utility.yul\":19794:19832   */\n      tag_210\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":19788:19792   */\n      dup5\n        /* \"#utility.yul\":19744:19841   */\n      tag_717\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":19896:19900   */\n      0x20\n      dup1\n        /* \"#utility.yul\":19953:19955   */\n      0x1f\n        /* \"#utility.yul\":19942:19956   */\n      dup4\n      gt\n        /* \"#utility.yul\":19970:19971   */\n      0x01\n        /* \"#utility.yul\":19965:20628   */\n      dup2\n      eq\n      tag_850\n      jumpi\n        /* \"#utility.yul\":20672:20673   */\n      0x00\n        /* \"#utility.yul\":20689:20695   */\n      dup5\n        /* \"#utility.yul\":20686:20775   */\n      iszero\n      tag_851\n      jumpi\n      pop\n        /* \"#utility.yul\":20741:20760   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":20735:20761   */\n      mload\n        /* \"#utility.yul\":20686:20775   */\n    tag_851:\n      not(0x00)\n        /* \"#utility.yul\":19497:19498   */\n      0x03\n        /* \"#utility.yul\":19493:19504   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":19489:19513   */\n      shr\n        /* \"#utility.yul\":19485:19514   */\n      not\n        /* \"#utility.yul\":19475:19515   */\n      and\n        /* \"#utility.yul\":19521:19522   */\n      0x01\n        /* \"#utility.yul\":19517:19528   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":19472:19529   */\n      or\n        /* \"#utility.yul\":20788:20869   */\n      dup6\n      sstore\n        /* \"#utility.yul\":19935:20879   */\n      jump(tag_406)\n        /* \"#utility.yul\":19965:20628   */\n    tag_850:\n        /* \"#utility.yul\":18793:18794   */\n      0x00\n        /* \"#utility.yul\":18786:18800   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":18830:18834   */\n      0x20\n        /* \"#utility.yul\":18817:18835   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":20001:20021   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":20119:20355   */\n    tag_854:\n        /* \"#utility.yul\":20133:20140   */\n      dup3\n        /* \"#utility.yul\":20130:20131   */\n      dup2\n        /* \"#utility.yul\":20127:20141   */\n      lt\n        /* \"#utility.yul\":20119:20355   */\n      iszero\n      tag_856\n      jumpi\n        /* \"#utility.yul\":20222:20241   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":20216:20242   */\n      mload\n        /* \"#utility.yul\":20201:20243   */\n      dup3\n      sstore\n        /* \"#utility.yul\":20314:20341   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":20282:20283   */\n      0x01\n        /* \"#utility.yul\":20270:20284   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":20149:20168   */\n      dup5\n      add\n        /* \"#utility.yul\":20119:20355   */\n      jump(tag_854)\n    tag_856:\n        /* \"#utility.yul\":20123:20126   */\n      pop\n        /* \"#utility.yul\":20383:20389   */\n      dup6\n        /* \"#utility.yul\":20374:20381   */\n      dup3\n        /* \"#utility.yul\":20371:20390   */\n      lt\n        /* \"#utility.yul\":20368:20569   */\n      iszero\n      tag_857\n      jumpi\n        /* \"#utility.yul\":20444:20463   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":20438:20464   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":20527:20528   */\n      0x03\n        /* \"#utility.yul\":20523:20537   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":20539:20542   */\n      0xf8\n        /* \"#utility.yul\":20519:20543   */\n      and\n        /* \"#utility.yul\":20515:20552   */\n      shr\n        /* \"#utility.yul\":20511:20553   */\n      not\n        /* \"#utility.yul\":20496:20554   */\n      and\n        /* \"#utility.yul\":20481:20555   */\n      dup2\n      sstore\n        /* \"#utility.yul\":20368:20569   */\n    tag_857:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20615:20616   */\n      0x01\n        /* \"#utility.yul\":20599:20613   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":20595:20617   */\n      add\n        /* \"#utility.yul\":20582:20618   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":19540:20885   */\n      jump\t// out\n        /* \"#utility.yul\":20890:21177   */\n    tag_691:\n        /* \"#utility.yul\":21019:21022   */\n      0x00\n        /* \"#utility.yul\":21057:21063   */\n      dup3\n        /* \"#utility.yul\":21051:21064   */\n      mload\n        /* \"#utility.yul\":21073:21139   */\n      tag_859\n        /* \"#utility.yul\":21132:21138   */\n      dup2\n        /* \"#utility.yul\":21127:21130   */\n      dup5\n        /* \"#utility.yul\":21120:21124   */\n      0x20\n        /* \"#utility.yul\":21112:21118   */\n      dup8\n        /* \"#utility.yul\":21108:21125   */\n      add\n        /* \"#utility.yul\":21073:21139   */\n      tag_712\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":21155:21171   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":20890:21177   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b 52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n    data_5c46c655e238aa25f8cbb2dc253afd95ec6fe3438bb2613b924ec6dfbcfd524d 52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n\n    auxdata: 0xa26469706673582212209fd4f362f3ab85ed5f80094f7da9f337eff7d7676e834759412712b6913122d464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2477": {
									"entryPoint": null,
									"id": 2477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_321": {
									"entryPoint": 58,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:1",
										"nodeType": "YulBlock",
										"src": "0:216:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:1",
													"nodeType": "YulBlock",
													"src": "113:101:1",
													"statements": [
														{
															"nativeSrc": "123:26:1",
															"nodeType": "YulAssignment",
															"src": "123:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:1",
																		"nodeType": "YulLiteral",
																		"src": "146:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:1"
																},
																"nativeSrc": "131:18:1",
																"nodeType": "YulFunctionCall",
																"src": "131:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:1",
																								"nodeType": "YulLiteral",
																								"src": "196:2:1",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:1",
																								"nodeType": "YulLiteral",
																								"src": "200:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:1"
																						},
																						"nativeSrc": "192:10:1",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:1",
																						"nodeType": "YulLiteral",
																						"src": "204:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:1"
																				},
																				"nativeSrc": "188:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:1"
																		},
																		"nativeSrc": "176:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:1"
																},
																"nativeSrc": "158:50:1",
																"nodeType": "YulFunctionCall",
																"src": "158:50:1"
															},
															"nativeSrc": "158:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:1",
														"nodeType": "YulTypedName",
														"src": "82:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:1",
														"nodeType": "YulTypedName",
														"src": "93:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:1",
														"nodeType": "YulTypedName",
														"src": "104:4:1",
														"type": ""
													}
												],
												"src": "14:200:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052306080526014805462ffffff60a81b1916600160b81b17905534801562000029575f80fd5b50620000346200003a565b620000ee565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156200008b5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000eb5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051613031620001155f395f8181611dde01528181611e070152611f4601526130315ff3fe6080604052600436106101e9575f3560e01c80636ed6a48d11610108578063ad3cb1cc1161009d578063dd54291b1161006d578063dd54291b1461056d578063dd62ed3e14610582578063f1d5f517146105a1578063f2fde38b146105c0578063fcfff16f146105df575f80fd5b8063ad3cb1cc146104b4578063ae601480146104e4578063c4d66de81461052f578063da7fe6521461054e575f80fd5b80638f937cc4116100d85780638f937cc41461044e57806395d89b4114610462578063a0712d6814610476578063a9059cbb14610495575f80fd5b80636ed6a48d146103db57806370a08231146103ef578063715018a61461040e5780638da5cb5b14610422575f80fd5b806323bc25ed1161017e5780634f1ef2861161014e5780634f1ef2861461037657806352d1902d14610389578063620cc86c1461039d578063667f6526146103bc575f80fd5b806323bc25ed146102fe5780632dc4f5e61461031d578063313ce5671461033c57806342966c6814610357575f80fd5b806318160ddd116101b957806318160ddd146102825780631c537de5146102ac578063217b6da6146102cb57806323b872dd146102df575f80fd5b80630313fc4b146101f457806306fdde031461021557806308ade0c91461023f578063095ea7b314610253575f80fd5b366101f057005b5f80fd5b3480156101ff575f80fd5b5061021361020e36600461297c565b6105f3565b005b348015610220575f80fd5b50610229610699565b60405161023691906129be565b60405180910390f35b34801561024a575f80fd5b50610213610759565b34801561025e575f80fd5b5061027261026d366004612a04565b6107ce565b6040519015158152602001610236565b34801561028d575f80fd5b505f80516020612fbc833981519152545b604051908152602001610236565b3480156102b7575f80fd5b506102136102c6366004612a42565b6107e7565b3480156102d6575f80fd5b50610213610859565b3480156102ea575f80fd5b506102726102f9366004612abf565b610a91565b348015610309575f80fd5b50610213610318366004612afd565b610ab6565b348015610328575f80fd5b50610213610337366004612ba1565b610bb2565b348015610347575f80fd5b5060405160128152602001610236565b348015610362575f80fd5b50610213610371366004612bd4565b610c13565b610213610384366004612bff565b610c2f565b348015610394575f80fd5b5061029e610c4a565b3480156103a8575f80fd5b506102136103b7366004612bd4565b610c65565b3480156103c7575f80fd5b506102136103d636600461297c565b610d27565b3480156103e6575f80fd5b50610213610e02565b3480156103fa575f80fd5b5061029e610409366004612cbd565b610ebe565b348015610419575f80fd5b50610213610ee4565b34801561042d575f80fd5b50610436610ef7565b6040516001600160a01b039091168152602001610236565b348015610459575f80fd5b50610213610f25565b34801561046d575f80fd5b50610229610faa565b348015610481575f80fd5b50610213610490366004612bd4565b610fe8565b3480156104a0575f80fd5b506102726104af366004612a04565b611057565b3480156104bf575f80fd5b50610229604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156104ef575f80fd5b50600b54600c54600f54601054601154601254604080519687526020870195909552938501929092526060840152608083015260a082015260c001610236565b34801561053a575f80fd5b50610213610549366004612cbd565b611064565b348015610559575f80fd5b50610213610568366004612bd4565b6115ac565b348015610578575f80fd5b5061029e60155481565b34801561058d575f80fd5b5061029e61059c366004612cd8565b6115b9565b3480156105ac575f80fd5b506102136105bb366004612bd4565b611602565b3480156105cb575f80fd5b506102136105da366004612cbd565b6116c8565b3480156105ea575f80fd5b50610213611702565b6105fb6117ed565b612710826106145f80516020612fbc8339815191525490565b61061e9190612d23565b6106289190612d3a565b601155612710816106445f80516020612fbc8339815191525490565b61064e9190612d23565b6106589190612d3a565b60125560408051838152602081018390527f2b3f4c022d9943b151090e389857495bb9d8493714259cc19a540f5a11475fb191015b60405180910390a15050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f80516020612f9c833981519152916106d790612d59565b80601f016020809104026020016040519081016040528092919081815260200182805461070390612d59565b801561074e5780601f106107255761010080835404028352916020019161074e565b820191905f5260205f20905b81548152906001019060200180831161073157829003601f168201915b505050505091505090565b6107616117ed565b601454600160b81b900460ff166107bf5760405162461bcd60e51b815260206004820152601f60248201527f4c61756e6368206d6f646520697320616c72656164792064697361626c65640060448201526064015b60405180910390fd5b6014805460ff60b81b19169055565b5f336107db81858561181f565b60019150505b92915050565b6107ef6117ed565b5f5b82811015610853578160165f86868581811061080f5761080f612d8b565b90506020020160208101906108249190612cbd565b6001600160a01b0316815260208101919091526040015f20805460ff19169115159190911790556001016107f1565b50505050565b610861610ef7565b6001600160a01b0316336001600160a01b0316146108c15760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206665652072656365697665722063616e207472696767657200000060448201526064016107b6565b5f6108cd600847612d3a565b6001546040519192506001600160a01b03169082156108fc029083905f818181858888f19350505050158015610905573d5f803e3d5ffd5b506002546040516001600160a01b039091169082156108fc029083905f818181858888f1935050505015801561093d573d5f803e3d5ffd5b506003546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610975573d5f803e3d5ffd5b506004546040516001600160a01b039091169082156108fc029083905f818181858888f193505050501580156109ad573d5f803e3d5ffd5b506005546040516001600160a01b039091169082156108fc029083905f818181858888f193505050501580156109e5573d5f803e3d5ffd5b506006546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610a1d573d5f803e3d5ffd5b506007546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610a55573d5f803e3d5ffd5b506008546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610a8d573d5f803e3d5ffd5b5050565b5f33610a9e858285611831565b610aa985858561188e565b60019150505b9392505050565b610abe6117ed565b600180546001600160a01b038a81166001600160a01b03199283168117909355600280548b83169084168117909155600380548b84169085168117909155600480548b85169086168117909155600580548b86169087168117909155600680548b87169088168117909155600780548b8816908916811790915560088054978b16979098168717909755604080519889526020890195909552938701929092526060860152608085015260a084015260c083019190915260e08201527f52e6e0e286d372f9e966ef36de088520ff74564d54d64ad119477262ca461e7b906101000160405180910390a15050505050505050565b610bba6117ed565b6001600160a01b0382165f8181526020818152604091829020805460ff19168515159081179091558251938452908301527f2d43abd87b27cee7b0aa8c6f7e0b4a3247b683262a83cbc2318b0df398a49aa9910161068d565b610c1b6117ed565b610c2c610c26610ef7565b82611d9f565b50565b610c37611dd3565b610c4082611e77565b610a8d8282611e7f565b5f610c53611f3b565b505f80516020612fdc83398151915290565b610c6d6117ed565b6001811015610cbe5760405162461bcd60e51b815260206004820152601e60248201527f4d61782074782063616e74206265206c6f776572207468616e20302e3125000060448201526064016107b6565b6103e881610cd75f80516020612fbc8339815191525490565b610ce19190612d23565b610ceb9190612d3a565b600f8190556040519081527f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf906020015b60405180910390a150565b610d2f6117ed565b6063821115610d785760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420627579207461782076616c756560581b60448201526064016107b6565b6063811115610dc25760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073656c6c207461782076616c756560501b60448201526064016107b6565b600b829055600c81905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910161068d565b610e0a6117ed565b5f80516020612fbc83398151915254600f555f80516020612fbc833981519152546010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf610e645f80516020612fbc8339815191525490565b60405190815260200160405180910390a17f4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e001610eab5f80516020612fbc8339815191525490565b60405190815260200160405180910390a1565b6001600160a01b03165f9081525f80516020612f9c833981519152602052604090205490565b610eec6117ed565b610ef55f611f84565b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b610f2d610ef7565b6001600160a01b0316336001600160a01b031614610f865760405162461bcd60e51b815260206004820152601660248201527527b7363c9037bbb732b91031b0b7103a3934b3b3b2b960511b60448201526064016107b6565b5f610f9030610ebe565b9050610f9b81611ff4565b478015610a8d57610a8d612183565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020612f9c833981519152916106d790612d59565b610ff06117ed565b601554816017546110019190612d9f565b11156110465760405162461bcd60e51b815260206004820152601460248201527314dd5c1c1b1e48131a5b5a5d0814995858da195960621b60448201526064016107b6565b610c2c611051610ef7565b82612425565b5f336107db81858561188e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156110a95750825b90505f8267ffffffffffffffff1660011480156110c55750303b155b9050811580156110d3575080155b156110f15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561111b57845460ff60401b1916600160401b1785555b61115f6040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250612459565b6111688661246b565b61117061247c565b6d04ee2d6d415b85acef810000000060178190556d314dc6448d9338c15b0a000000006015556103e8906111a590600a612d23565b6111af9190612d3a565b600f556017546103e8906111c490600a612d23565b6111ce9190612d3a565b601055601754612710906111e3906005612d23565b6111ed9190612d3a565b6011556017546127109061120390610190612d23565b61120d9190612d3a565b601255600f600b556028600c556001600d8190555f600e8190553080825260166020526040909120805460ff1916909217909155601380546001600160a01b031916739ac64cc6e4415144c455bd8e4837fea55603e5c390811790915561128991906112845f80516020612fbc8339815191525490565b61181f565b60135f9054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fd9190612db2565b6001600160a01b031663c9c653963060135f9054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561135c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113809190612db2565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303815f875af11580156113ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113ee9190612db2565b601480546001600160a01b03929092166001600160a01b0319928316179055600180548216732f8d1ddd0f3ccf0fe21c505a4ebc56f6f4626c0d908117825560028054841682179055600380548416821790556004805484168217905560058054841682179055600680548416821790556007805484168217905560088054909316179091555f8061147e610ef7565b6001600160a01b03908116825260208083019390935260409182015f908120805495151560ff1996871617905530815292839052818320805485166001908117909155805482168452828420805486168217905560025482168452828420805486168217905560035482168452828420805486168217905560045482168452828420805486168217905560055482168452828420805486168217905560065482168452828420805486168217905560075482168452828420805486168217905560085490911683529120805490921617905560175461155e903390612425565b83156115a457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6115b46117ed565b601555565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61160a6117ed565b60018110156116665760405162461bcd60e51b815260206004820152602260248201527f4d61782077616c6c65742063616e74206265206c6f776572207468616e20302e604482015261312560f01b60648201526084016107b6565b6103e88161167f5f80516020612fbc8339815191525490565b6116899190612d23565b6116939190612d3a565b60108190556040519081527f4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e00190602001610d1c565b6116d06117ed565b6001600160a01b0381166116f957604051631e4fbdf760e01b81525f60048201526024016107b6565b610c2c81611f84565b61170a6117ed565b601454600160a01b900460ff16156117645760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016107b6565b6014805462ff00ff60a01b19166201000160a01b179055436009819055600a805467ffffffffffffffff191667ffffffffffffffff909216919091179055305f90815260208190526040808220805460ff191660011790556019600b556028600c55517fea4359d5c4b8f0945a64ab9c37fe830b3407d45e0e6e6f84275977a570457d6f9190a1565b336117f6610ef7565b6001600160a01b031614610ef55760405163118cdaa760e01b81523360048201526024016107b6565b61182c8383836001612484565b505050565b5f61183c84846115b9565b90505f198114610853578181101561188057604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107b6565b61085384848484035f612484565b6001600160a01b0383166118f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107b6565b6001600160a01b0382166119545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107b6565b5f81116119b55760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016107b6565b5f6119be610ef7565b6001600160a01b0316846001600160a01b0316141580156119f857506119e2610ef7565b6001600160a01b0316836001600160a01b031614155b8015611a0e5750601454600160a81b900460ff16155b15611d7a57601454600160b81b900460ff1615611a87576001600160a01b0384165f9081526016602052604090205460ff1680611a6257506001600160a01b0383165f9081526016602052604090205460ff165b611a875760405162461bcd60e51b8152602060048201525f60248201526044016107b6565b6064600b5483611a979190612d23565b611aa19190612d3a565b6014549091506001600160a01b038581169116148015611acf57506013546001600160a01b03848116911614155b8015611af357506001600160a01b0383165f9081526020819052604090205460ff16155b15611be557600f54821115611b4a5760405162461bcd60e51b815260206004820152601b60248201527f4578636565647320746865205f7478416d6f756e744c696d69742e000000000060448201526064016107b6565b60105482611b5785610ebe565b611b619190612d9f565b1115611baf5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016107b6565b436009546003611bbf9190612d9f565b1115611bd057823b15611bd0575f80fd5b600e8054905f611bdf83612dcd565b91905055505b6014546001600160a01b03848116911614801590611c1b57506001600160a01b0383165f9081526020819052604090205460ff16155b15611c855760105482611c2d85610ebe565b611c379190612d9f565b1115611c855760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016107b6565b6014546001600160a01b038481169116148015611cab57506001600160a01b0384163014155b15611ccd576064600c5483611cc09190612d23565b611cca9190612d3a565b90505b5f611cd730610ebe565b601454909150600160a81b900460ff16158015611d0157506014546001600160a01b038581169116145b8015611d165750601454600160b01b900460ff165b8015611d23575060115481115b8015611d325750600d54600e54115b8015611d4e5750600a544367ffffffffffffffff908116911614155b15611d7857611d67611d6282601254612567565b611ff4565b478015611d7657611d76612183565b505b505b8015611d8b57611d8b84308361257b565b6108538484611d9a8486612de5565b61257b565b6001600160a01b038216611dc857604051634b637e8f60e11b81525f60048201526024016107b6565b610a8d825f836125d4565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611e5957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611e4d5f80516020612fdc833981519152546001600160a01b031690565b6001600160a01b031614155b15610ef55760405163703e46dd60e11b815260040160405180910390fd5b610c2c6117ed565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611ed9575060408051601f3d908101601f19168201909252611ed691810190612df8565b60015b611f0157604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107b6565b5f80516020612fdc8339815191528114611f3157604051632a87526960e21b8152600481018290526024016107b6565b61182c838361270d565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ef55760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6014805460ff60a81b1916600160a81b179055600a805467ffffffffffffffff431667ffffffffffffffff199091161790556040805160028082526060820183525f9260208301908036833701905050905030815f8151811061205957612059612d8b565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156120b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120d49190612db2565b816001815181106120e7576120e7612d8b565b6001600160a01b03928316602091820292909201015260135461210d913091168461181f565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906121459085905f90869030904290600401612e0f565b5f604051808303815f87803b15801561215c575f80fd5b505af115801561216e573d5f803e3d5ffd5b50506014805460ff60a81b1916905550505050565b5f80612190600847612d3a565b6001546040519192506001600160a01b03169082905f81818185875af1925050503d805f81146121db576040519150601f19603f3d011682016040523d82523d5f602084013e6121e0565b606091505b50506002546040519193506001600160a01b03169082905f81818185875af1925050503d805f811461222d576040519150601f19603f3d011682016040523d82523d5f602084013e612232565b606091505b50506003546040519193506001600160a01b03169082905f81818185875af1925050503d805f811461227f576040519150601f19603f3d011682016040523d82523d5f602084013e612284565b606091505b50506004546040519193506001600160a01b03169082905f81818185875af1925050503d805f81146122d1576040519150601f19603f3d011682016040523d82523d5f602084013e6122d6565b606091505b50506005546040519193506001600160a01b03169082905f81818185875af1925050503d805f8114612323576040519150601f19603f3d011682016040523d82523d5f602084013e612328565b606091505b50506006546040519193506001600160a01b03169082905f81818185875af1925050503d805f8114612375576040519150601f19603f3d011682016040523d82523d5f602084013e61237a565b606091505b50506007546040519193506001600160a01b03169082905f81818185875af1925050503d805f81146123c7576040519150601f19603f3d011682016040523d82523d5f602084013e6123cc565b606091505b50506008546040519193506001600160a01b03169082905f81818185875af1925050503d805f8114612419576040519150601f19603f3d011682016040523d82523d5f602084013e61241e565b606091505b5050505050565b6001600160a01b03821661244e5760405163ec442f0560e01b81525f60048201526024016107b6565b610a8d5f83836125d4565b612461612762565b610a8d82826127ab565b612473612762565b610c2c816127fb565b610ef5612762565b5f80516020612f9c8339815191526001600160a01b0385166124bb5760405163e602df0560e01b81525f60048201526024016107b6565b6001600160a01b0384166124e457604051634a1406b160e11b81525f60048201526024016107b6565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561241e57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161255891815260200190565b60405180910390a35050505050565b5f8183116125755782610aaf565b50919050565b6001600160a01b0383166125a457604051634b637e8f60e11b81525f60048201526024016107b6565b6001600160a01b0382166125cd5760405163ec442f0560e01b81525f60048201526024016107b6565b61182c8383835b5f80516020612f9c8339815191526001600160a01b03841661260e5781816002015f8282546126039190612d9f565b9091555061267e9050565b6001600160a01b0384165f90815260208290526040902054828110156126605760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016107b6565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b03831661269c5760028101805483900390556126ba565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516126ff91815260200190565b60405180910390a350505050565b61271682612803565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561275a5761182c8282612866565b610a8d6128d8565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ef557604051631afcd79f60e31b815260040160405180910390fd5b6127b3612762565b5f80516020612f9c8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036127ec8482612ec4565b50600481016108538382612ec4565b6116d0612762565b806001600160a01b03163b5f0361283857604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107b6565b5f80516020612fdc83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516128829190612f80565b5f60405180830381855af49150503d805f81146128ba576040519150601f19603f3d011682016040523d82523d5f602084013e6128bf565b606091505b50915091506128cf8583836128f7565b95945050505050565b3415610ef55760405163b398979f60e01b815260040160405180910390fd5b60608261290c5761290782612953565b610aaf565b815115801561292357506001600160a01b0384163b155b1561294c57604051639996b31560e01b81526001600160a01b03851660048201526024016107b6565b5080610aaf565b8051156129635780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f806040838503121561298d575f80fd5b50508035926020909101359150565b5f5b838110156129b657818101518382015260200161299e565b50505f910152565b602081525f82518060208401526129dc81604085016020870161299c565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610c2c575f80fd5b5f8060408385031215612a15575f80fd5b8235612a20816129f0565b946020939093013593505050565b80358015158114612a3d575f80fd5b919050565b5f805f60408486031215612a54575f80fd5b833567ffffffffffffffff80821115612a6b575f80fd5b818601915086601f830112612a7e575f80fd5b813581811115612a8c575f80fd5b8760208260051b8501011115612aa0575f80fd5b602092830195509350612ab69186019050612a2e565b90509250925092565b5f805f60608486031215612ad1575f80fd5b8335612adc816129f0565b92506020840135612aec816129f0565b929592945050506040919091013590565b5f805f805f805f80610100898b031215612b15575f80fd5b8835612b20816129f0565b97506020890135612b30816129f0565b96506040890135612b40816129f0565b95506060890135612b50816129f0565b94506080890135612b60816129f0565b935060a0890135612b70816129f0565b925060c0890135612b80816129f0565b915060e0890135612b90816129f0565b809150509295985092959890939650565b5f8060408385031215612bb2575f80fd5b8235612bbd816129f0565b9150612bcb60208401612a2e565b90509250929050565b5f60208284031215612be4575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215612c10575f80fd5b8235612c1b816129f0565b9150602083013567ffffffffffffffff80821115612c37575f80fd5b818501915085601f830112612c4a575f80fd5b813581811115612c5c57612c5c612beb565b604051601f8201601f19908116603f01168101908382118183101715612c8457612c84612beb565b81604052828152886020848701011115612c9c575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f60208284031215612ccd575f80fd5b8135610aaf816129f0565b5f8060408385031215612ce9575f80fd5b8235612cf4816129f0565b91506020830135612d04816129f0565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176107e1576107e1612d0f565b5f82612d5457634e487b7160e01b5f52601260045260245ffd5b500490565b600181811c90821680612d6d57607f821691505b60208210810361257557634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b808201808211156107e1576107e1612d0f565b5f60208284031215612dc2575f80fd5b8151610aaf816129f0565b5f60018201612dde57612dde612d0f565b5060010190565b818103818111156107e1576107e1612d0f565b5f60208284031215612e08575f80fd5b5051919050565b5f60a08201878352602087602085015260a0604085015281875180845260c0860191506020890193505f5b81811015612e5f5784516001600160a01b031683529383019391830191600101612e3a565b50506001600160a01b03969096166060850152505050608001529392505050565b601f82111561182c57805f5260205f20601f840160051c81016020851015612ea55750805b601f840160051c820191505b8181101561241e575f8155600101612eb1565b815167ffffffffffffffff811115612ede57612ede612beb565b612ef281612eec8454612d59565b84612e80565b602080601f831160018114612f25575f8415612f0e5750858301515b5f19600386901b1c1916600185901b1785556115a4565b5f85815260208120601f198616915b82811015612f5357888601518255948401946001909101908401612f34565b5085821015612f7057878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f8251612f9181846020870161299c565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212209fd4f362f3ab85ed5f80094f7da9f337eff7d7676e834759412712b6913122d464736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE PUSH1 0x14 DUP1 SLOAD PUSH3 0xFFFFFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xB8 SHL OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x29 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x34 PUSH3 0x3A JUMP JUMPDEST PUSH3 0xEE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x8B JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH3 0xEB JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3031 PUSH3 0x115 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1DDE ADD MSTORE DUP2 DUP2 PUSH2 0x1E07 ADD MSTORE PUSH2 0x1F46 ADD MSTORE PUSH2 0x3031 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6ED6A48D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xDD54291B GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xDD54291B EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xF1D5F517 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xFCFFF16F EQ PUSH2 0x5DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xAE601480 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xDA7FE652 EQ PUSH2 0x54E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F937CC4 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x8F937CC4 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6ED6A48D EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23BC25ED GT PUSH2 0x17E JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x14E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x620CC86C EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x667F6526 EQ PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23BC25ED EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x2DC4F5E6 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x357 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x1C537DE5 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x217B6DA6 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313FC4B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x8ADE0C9 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1F0 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x759 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A04 JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A42 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x859 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABF JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AFD JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA1 JUMP JUMPDEST PUSH2 0xBB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BFF JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0xC4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CBD JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xEE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xF25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0xFAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0xFE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2A04 JUMP JUMPDEST PUSH2 0x1057 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CBD JUMP JUMPDEST PUSH2 0x1064 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD8 JUMP JUMPDEST PUSH2 0x15B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0x1602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CBD JUMP JUMPDEST PUSH2 0x16C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x2710 DUP3 PUSH2 0x614 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x11 SSTORE PUSH2 0x2710 DUP2 PUSH2 0x644 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x2B3F4C022D9943B151090E389857495BB9D8493714259CC19A540F5A11475FB1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x6D7 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x703 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x725 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x74E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x731 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x761 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756E6368206D6F646520697320616C72656164792064697361626C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xB8 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7DB DUP2 DUP6 DUP6 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x17ED JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x853 JUMPI DUP2 PUSH1 0x16 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x80F JUMPI PUSH2 0x80F PUSH2 0x2D8B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x7F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x861 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206665652072656365697665722063616E2074726967676572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0x8CD PUSH1 0x8 SELFBALANCE PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x905 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x975 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA1D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA8D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA9E DUP6 DUP3 DUP6 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0xAA9 DUP6 DUP6 DUP6 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xABE PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP12 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP6 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP12 DUP6 AND SWAP1 DUP7 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP12 DUP7 AND SWAP1 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD DUP12 DUP8 AND SWAP1 DUP9 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD DUP12 DUP9 AND SWAP1 DUP10 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP8 DUP12 AND SWAP8 SWAP1 SWAP9 AND DUP8 OR SWAP1 SWAP8 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH32 0x52E6E0E286D372F9E966EF36DE088520FF74564D54D64AD119477262CA461E7B SWAP1 PUSH2 0x100 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBBA PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x2D43ABD87B27CEE7B0AA8C6F7E0B4A3247B683262A83CBC2318B0DF398A49AA9 SWAP2 ADD PUSH2 0x68D JUMP JUMPDEST PUSH2 0xC1B PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xC2C PUSH2 0xC26 PUSH2 0xEF7 JUMP JUMPDEST DUP3 PUSH2 0x1D9F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC37 PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0xC40 DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH2 0xA8D DUP3 DUP3 PUSH2 0x1E7F JUMP JUMPDEST PUSH0 PUSH2 0xC53 PUSH2 0x1F3B JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xC6D PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782074782063616E74206265206C6F776572207468616E20302E31250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x3E8 DUP2 PUSH2 0xCD7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xD2F PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x63 DUP3 GT ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420627579207461782076616C7565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x63 DUP2 GT ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642073656C6C207461782076616C7565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x5C6323BF1C2D7AAEA2C091A4751C1C87AF7F2864650C336507A77D0557AF37A1 SWAP2 ADD PUSH2 0x68D JUMP JUMPDEST PUSH2 0xE0A PUSH2 0x17ED JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xF SSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x10 SSTORE PUSH32 0x947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF PUSH2 0xE64 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x4B39C36D20C57D220F61FD25C4349D4435CC03EF6C2A680942F15333C3C3E001 PUSH2 0xEAB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xEF5 PUSH0 PUSH2 0x1F84 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF2D PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9037BBB732B91031B0B7103A3934B3B3B2B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0xF90 ADDRESS PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP PUSH2 0xF9B DUP2 PUSH2 0x1FF4 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0xA8D JUMPI PUSH2 0xA8D PUSH2 0x2183 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x6D7 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH2 0xFF0 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 PUSH1 0x17 SLOAD PUSH2 0x1001 SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST GT ISZERO PUSH2 0x1046 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD5C1C1B1E48131A5B5A5D0814995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xC2C PUSH2 0x1051 PUSH2 0xEF7 JUMP JUMPDEST DUP3 PUSH2 0x2425 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7DB DUP2 DUP6 DUP6 PUSH2 0x188E JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x10A9 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x10C5 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x111B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x115F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x2459 JUMP JUMPDEST PUSH2 0x1168 DUP7 PUSH2 0x246B JUMP JUMPDEST PUSH2 0x1170 PUSH2 0x247C JUMP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0x17 DUP2 SWAP1 SSTORE PUSH14 0x314DC6448D9338C15B0A00000000 PUSH1 0x15 SSTORE PUSH2 0x3E8 SWAP1 PUSH2 0x11A5 SWAP1 PUSH1 0xA PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x11AF SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x17 SLOAD PUSH2 0x3E8 SWAP1 PUSH2 0x11C4 SWAP1 PUSH1 0xA PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x11CE SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x17 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x11E3 SWAP1 PUSH1 0x5 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x11 SSTORE PUSH1 0x17 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x1203 SWAP1 PUSH2 0x190 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x120D SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH1 0xF PUSH1 0xB SSTORE PUSH1 0x28 PUSH1 0xC SSTORE PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE PUSH0 PUSH1 0xE DUP2 SWAP1 SSTORE ADDRESS DUP1 DUP3 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x9AC64CC6E4415144C455BD8E4837FEA55603E5C3 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x1284 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x181F JUMP JUMPDEST PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FD SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x135C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1380 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13EE SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND PUSH20 0x2F8D1DDD0F3CCF0FE21C505A4EBC56F6F4626C0D SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE PUSH0 DUP1 PUSH2 0x147E PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE ADDRESS DUP2 MSTORE SWAP3 DUP4 SWAP1 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD DUP6 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x2 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x3 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x4 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x5 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x6 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x7 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x8 SLOAD SWAP1 SWAP2 AND DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x17 SLOAD PUSH2 0x155E SWAP1 CALLER SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x15A4 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15B4 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x160A PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x1666 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782077616C6C65742063616E74206265206C6F776572207468616E20302E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3125 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x3E8 DUP2 PUSH2 0x167F PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1689 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1693 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x4B39C36D20C57D220F61FD25C4349D4435CC03EF6C2A680942F15333C3C3E001 SWAP1 PUSH1 0x20 ADD PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x16D0 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xC2C DUP2 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x170A PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696E6720697320616C7265616479206F70656E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH3 0xFF00FF PUSH1 0xA0 SHL NOT AND PUSH3 0x10001 PUSH1 0xA0 SHL OR SWAP1 SSTORE NUMBER PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x19 PUSH1 0xB SSTORE PUSH1 0x28 PUSH1 0xC SSTORE MLOAD PUSH32 0xEA4359D5C4B8F0945A64AB9C37FE830B3407D45E0E6E6F84275977A570457D6F SWAP2 SWAP1 LOG1 JUMP JUMPDEST CALLER PUSH2 0x17F6 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x182C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2484 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x183C DUP5 DUP5 PUSH2 0x15B9 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x853 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1880 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x853 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2484 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x19B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0x19BE PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x19F8 JUMPI POP PUSH2 0x19E2 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1A0E JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A87 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1A62 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1A87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x64 PUSH1 0xB SLOAD DUP4 PUSH2 0x1A97 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1ACF JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1AF3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1BE5 JUMPI PUSH1 0xF SLOAD DUP3 GT ISZERO PUSH2 0x1B4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205F7478416D6F756E744C696D69742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 PUSH2 0x1B57 DUP6 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x1B61 SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST GT ISZERO PUSH2 0x1BAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206D617857616C6C657453697A652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST NUMBER PUSH1 0x9 SLOAD PUSH1 0x3 PUSH2 0x1BBF SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST GT ISZERO PUSH2 0x1BD0 JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0x1BD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x1BDF DUP4 PUSH2 0x2DCD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x1C1B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x10 SLOAD DUP3 PUSH2 0x1C2D DUP6 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x1C37 SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST GT ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206D617857616C6C657453697A652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1CAB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x1CCD JUMPI PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0x1CC0 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1CCA SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0x1CD7 ADDRESS PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1D01 JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1D16 JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1D23 JUMPI POP PUSH1 0x11 SLOAD DUP2 GT JUMPDEST DUP1 ISZERO PUSH2 0x1D32 JUMPI POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x1D4E JUMPI POP PUSH1 0xA SLOAD NUMBER PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1D78 JUMPI PUSH2 0x1D67 PUSH2 0x1D62 DUP3 PUSH1 0x12 SLOAD PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x1FF4 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x1D76 PUSH2 0x2183 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8B DUP5 ADDRESS DUP4 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x853 DUP5 DUP5 PUSH2 0x1D9A DUP5 DUP7 PUSH2 0x2DE5 JUMP JUMPDEST PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xA8D DUP3 PUSH0 DUP4 PUSH2 0x25D4 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1E59 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E4D PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2C PUSH2 0x17ED JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1ED9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1ED6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F01 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1F31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x182C DUP4 DUP4 PUSH2 0x270D JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NUMBER AND PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x2059 JUMPI PUSH2 0x2059 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20D4 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x20E7 JUMPI PUSH2 0x20E7 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x210D SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2145 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2E0F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x215C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x216E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2190 PUSH1 0x8 SELFBALANCE PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x21DB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x222D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x227F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x22D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2323 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2375 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x237A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x23C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2419 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x241E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xA8D PUSH0 DUP4 DUP4 PUSH2 0x25D4 JUMP JUMPDEST PUSH2 0x2461 PUSH2 0x2762 JUMP JUMPDEST PUSH2 0xA8D DUP3 DUP3 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x2473 PUSH2 0x2762 JUMP JUMPDEST PUSH2 0xC2C DUP2 PUSH2 0x27FB JUMP JUMPDEST PUSH2 0xEF5 PUSH2 0x2762 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x24BB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x24E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x241E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2558 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0x2575 JUMPI DUP3 PUSH2 0xAAF JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x182C DUP4 DUP4 DUP4 JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x260E JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2603 SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x267E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2660 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x269C JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x26FF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2716 DUP3 PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x275A JUMPI PUSH2 0x182C DUP3 DUP3 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0xA8D PUSH2 0x28D8 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27B3 PUSH2 0x2762 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x27EC DUP5 DUP3 PUSH2 0x2EC4 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x853 DUP4 DUP3 PUSH2 0x2EC4 JUMP JUMPDEST PUSH2 0x16D0 PUSH2 0x2762 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x2838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2882 SWAP2 SWAP1 PUSH2 0x2F80 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x28BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x28CF DUP6 DUP4 DUP4 PUSH2 0x28F7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x290C JUMPI PUSH2 0x2907 DUP3 PUSH2 0x2953 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2923 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x294C JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST POP DUP1 PUSH2 0xAAF JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2963 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x298D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x299E JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x29DC DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x299C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC2C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A15 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2A20 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A3D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A54 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2A6B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A7E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2A8C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2AA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP PUSH2 0x2AB6 SWAP2 DUP7 ADD SWAP1 POP PUSH2 0x2A2E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2ADC DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2AEC DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2B15 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2B20 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2B30 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2B40 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x2B50 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x2B60 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x2B70 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x2B80 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x2B90 DUP2 PUSH2 0x29F0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2BBD DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BCB PUSH1 0x20 DUP5 ADD PUSH2 0x2A2E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C10 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C1B DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C37 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C4A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2C5C JUMPI PUSH2 0x2C5C PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2C84 JUMPI PUSH2 0x2C84 PUSH2 0x2BEB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2C9C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAAF DUP2 PUSH2 0x29F0 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CF4 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2D04 DUP2 PUSH2 0x29F0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7E1 JUMPI PUSH2 0x7E1 PUSH2 0x2D0F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2D54 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2D6D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2575 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7E1 JUMPI PUSH2 0x7E1 PUSH2 0x2D0F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAAF DUP2 PUSH2 0x29F0 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2DDE JUMPI PUSH2 0x2DDE PUSH2 0x2D0F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7E1 JUMPI PUSH2 0x7E1 PUSH2 0x2D0F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP10 ADD SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E5F JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2E3A JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x182C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2EA5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x241E JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EB1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EDE JUMPI PUSH2 0x2EDE PUSH2 0x2BEB JUMP JUMPDEST PUSH2 0x2EF2 DUP2 PUSH2 0x2EEC DUP5 SLOAD PUSH2 0x2D59 JUMP JUMPDEST DUP5 PUSH2 0x2E80 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F25 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F0E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x15A4 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F53 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2F34 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2F70 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x2F91 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x299C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE0052C63247E1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02360894A13B LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA26469706673582212209F 0xD4 RETURN PUSH3 0xF3AB85 0xED PUSH0 DUP1 MULMOD 0x4F PUSH30 0xA9F337EFF7D7676E834759412712B6913122D464736F6C63430008180033 ",
							"sourceMap": "64963:13546:0:-:0;;;57077:4;57034:48;;65920:27;;;-1:-1:-1;;;;65993:30:0;-1:-1:-1;;;65993:30:0;;;67110:55;;;;;;;;;-1:-1:-1;67135:22:0;:20;:22::i;:::-;64963:13546;;11532:433;12724:21;11725:15;;;;;;;11721:78;;;11764:23;;-1:-1:-1;;;11764:23:0;;;;;;;;;;;11721:78;11813:14;;-1:-1:-1;;;;;11813:14:0;;;:34;11809:149;;11864:33;;-1:-1:-1;;;;;;11864:33:0;-1:-1:-1;;;;;11864:33:0;;;;;11917:29;;158:50:1;;;11917:29:0;;146:2:1;131:18;11917:29:0;;;;;;;11809:149;11581:384;11532:433::o;14:200:1:-;64963:13546:0;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_2020": {
									"entryPoint": null,
									"id": 2020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2749": {
									"entryPoint": null,
									"id": 2749,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_589": {
									"entryPoint": 9305,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_617": {
									"entryPoint": 10155,
									"id": 617,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_1188": {
									"entryPoint": 9323,
									"id": 1188,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_1215": {
									"entryPoint": 10235,
									"id": 1215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_2050": {
									"entryPoint": 9340,
									"id": 2050,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1021": {
									"entryPoint": 6175,
									"id": 1021,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1089": {
									"entryPoint": 9348,
									"id": 1089,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2745": {
									"entryPoint": 7799,
									"id": 2745,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1003": {
									"entryPoint": 7583,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_275": {
									"entryPoint": 10082,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_2002": {
									"entryPoint": 10456,
									"id": 2002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_2126": {
									"entryPoint": 7995,
									"id": 2126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_1256": {
									"entryPoint": 6125,
									"id": 1256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_2110": {
									"entryPoint": 7635,
									"id": 2110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_970": {
									"entryPoint": 9253,
									"id": 970,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1597": {
									"entryPoint": 10579,
									"id": 1597,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1788": {
									"entryPoint": 10243,
									"id": 1788,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1137": {
									"entryPoint": 6193,
									"id": 1137,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_1327": {
									"entryPoint": 8068,
									"id": 1327,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_3447": {
									"entryPoint": 6286,
									"id": 3447,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_845": {
									"entryPoint": 9595,
									"id": 845,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_937": {
									"entryPoint": 9684,
									"id": 937,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_2177": {
									"entryPoint": 7807,
									"id": 2177,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addAddress_3141": {
									"entryPoint": 2023,
									"id": 3141,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_742": {
									"entryPoint": 5561,
									"id": 742,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_766": {
									"entryPoint": 1998,
									"id": 766,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_694": {
									"entryPoint": 3774,
									"id": 694,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_3763": {
									"entryPoint": 3091,
									"id": 3763,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeTokenCap_3726": {
									"entryPoint": 5548,
									"id": 3726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_658": {
									"entryPoint": null,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@exemptFee_3162": {
									"entryPoint": 2994,
									"id": 3162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionDelegateCall_1517": {
									"entryPoint": 10342,
									"id": 1517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1629": {
									"entryPoint": null,
									"id": 1629,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1761": {
									"entryPoint": null,
									"id": 1761,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2736": {
									"entryPoint": 4196,
									"id": 2736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_3481": {
									"entryPoint": null,
									"id": 3481,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@min_3465": {
									"entryPoint": 9575,
									"id": 3465,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_3749": {
									"entryPoint": 4072,
									"id": 3749,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_633": {
									"entryPoint": 1689,
									"id": 633,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@open_2802": {
									"entryPoint": 5890,
									"id": 2802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1239": {
									"entryPoint": 3831,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_2068": {
									"entryPoint": 3146,
									"id": 2068,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeETH_3109": {
									"entryPoint": 2137,
									"id": 3109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_1270": {
									"entryPoint": 3812,
									"id": 1270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rmvLimits_3001": {
									"entryPoint": 3586,
									"id": 3001,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendETHToFee_3714": {
									"entryPoint": 8579,
									"id": 3714,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMode_2975": {
									"entryPoint": 1881,
									"id": 2975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setSwapback_2960": {
									"entryPoint": 1523,
									"id": 2960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTax_3038": {
									"entryPoint": 3367,
									"id": 3038,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTx_2896": {
									"entryPoint": 3173,
									"id": 2896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWalletLimit_2925": {
									"entryPoint": 5634,
									"id": 2925,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWallets_2867": {
									"entryPoint": 2742,
									"id": 2867,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@swapTokensForEth_3593": {
									"entryPoint": 8180,
									"id": 3593,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_649": {
									"entryPoint": 4010,
									"id": 649,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenCap_2403": {
									"entryPoint": null,
									"id": 2403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_674": {
									"entryPoint": null,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_798": {
									"entryPoint": 2705,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1298": {
									"entryPoint": 5832,
									"id": 1298,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_718": {
									"entryPoint": 4183,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@triggerSwap_3523": {
									"entryPoint": 3877,
									"id": 3523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1822": {
									"entryPoint": 9997,
									"id": 1822,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_2088": {
									"entryPoint": 3119,
									"id": 2088,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1557": {
									"entryPoint": 10487,
									"id": 1557,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@viewInfo_3186": {
									"entryPoint": null,
									"id": 3186,
									"parameterSlots": 0,
									"returnSlots": 6
								},
								"abi_decode_bool": {
									"entryPoint": 10798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 11698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payable": {
									"entryPoint": 11005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 11169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 11263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool": {
									"entryPoint": 10818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 11768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 11220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 10620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable__to_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0500c267170b18d75be8e7233421038dddb796794b8fcd4e203c684720ad20fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b48678a7f959c8227f181f7c2c299112f3184ec06c891164e6292e5cbfc1b57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47002782db0b64c7f6254f162a29b9ff9bff559944c7515beed7c163790fade6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_639231b681faef9b093cd01f96e56539124f8d5dd8170e82c6e8233e404e240f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6bce9b06e18a1ef35f2a7bc8c816f18e7cbfc76a37f65a98145d42a22d949fc2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aabbfe6abbf40fbd028cb9073ee8b15b6e2d99ec95313010eb7f235b1f2fe0a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0f002db592b5be6109b5b2d38d5808b6cb4f378d42702b7ab3603714a4191b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c31b5ed3f39966f1d9926012d999ae0f7f34d1ccb73b5ad58b2d8437d73e9a07__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c563e32fd325dd6083434381ad7ae564e6c211c512ec890aa906ea3486fb26c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc168bd2771777b2cdce369aa9bc412bad2d5af46ed939ba6a577a72c461f3ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11791,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 11904,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10652,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 11609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11659,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 10736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21179:1",
										"nodeType": "YulBlock",
										"src": "0:21179:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "101:161:1",
													"nodeType": "YulBlock",
													"src": "101:161:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "147:16:1",
																"nodeType": "YulBlock",
																"src": "147:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "156:1:1",
																					"nodeType": "YulLiteral",
																					"src": "156:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "159:1:1",
																					"nodeType": "YulLiteral",
																					"src": "159:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "149:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "149:6:1"
																			},
																			"nativeSrc": "149:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "149:12:1"
																		},
																		"nativeSrc": "149:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "149:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "122:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "122:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "131:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "131:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "118:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "118:3:1"
																		},
																		"nativeSrc": "118:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "118:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "143:2:1",
																		"nodeType": "YulLiteral",
																		"src": "143:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "114:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "114:3:1"
																},
																"nativeSrc": "114:32:1",
																"nodeType": "YulFunctionCall",
																"src": "114:32:1"
															},
															"nativeSrc": "111:52:1",
															"nodeType": "YulIf",
															"src": "111:52:1"
														},
														{
															"nativeSrc": "172:33:1",
															"nodeType": "YulAssignment",
															"src": "172:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "195:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "182:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "182:12:1"
																},
																"nativeSrc": "182:23:1",
																"nodeType": "YulFunctionCall",
																"src": "182:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																}
															]
														},
														{
															"nativeSrc": "214:42:1",
															"nodeType": "YulAssignment",
															"src": "214:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "241:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "241:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "252:2:1",
																				"nodeType": "YulLiteral",
																				"src": "252:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "237:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:1"
																		},
																		"nativeSrc": "237:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "237:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "224:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "224:12:1"
																},
																"nativeSrc": "224:32:1",
																"nodeType": "YulFunctionCall",
																"src": "224:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "214:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "214:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "14:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "59:9:1",
														"nodeType": "YulTypedName",
														"src": "59:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "70:7:1",
														"nodeType": "YulTypedName",
														"src": "70:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "82:6:1",
														"nodeType": "YulTypedName",
														"src": "82:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "90:6:1",
														"nodeType": "YulTypedName",
														"src": "90:6:1",
														"type": ""
													}
												],
												"src": "14:248:1"
											},
											{
												"body": {
													"nativeSrc": "333:184:1",
													"nodeType": "YulBlock",
													"src": "333:184:1",
													"statements": [
														{
															"nativeSrc": "343:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "343:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "352:1:1",
																"nodeType": "YulLiteral",
																"src": "352:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "347:1:1",
																	"nodeType": "YulTypedName",
																	"src": "347:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "412:63:1",
																"nodeType": "YulBlock",
																"src": "412:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "437:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "442:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "442:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "456:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "456:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "461:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "461:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "452:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "452:3:1"
																							},
																							"nativeSrc": "452:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "452:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "446:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "446:5:1"
																					},
																					"nativeSrc": "446:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "446:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "426:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "426:6:1"
																			},
																			"nativeSrc": "426:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "426:39:1"
																		},
																		"nativeSrc": "426:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "426:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "373:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "373:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "370:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "370:2:1"
																},
																"nativeSrc": "370:13:1",
																"nodeType": "YulFunctionCall",
																"src": "370:13:1"
															},
															"nativeSrc": "362:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "384:19:1",
																"nodeType": "YulBlock",
																"src": "384:19:1",
																"statements": [
																	{
																		"nativeSrc": "386:15:1",
																		"nodeType": "YulAssignment",
																		"src": "386:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "395:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "395:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "398:2:1",
																					"nodeType": "YulLiteral",
																					"src": "398:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "391:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "391:3:1"
																			},
																			"nativeSrc": "391:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "391:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "386:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "386:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "366:3:1",
																"nodeType": "YulBlock",
																"src": "366:3:1",
																"statements": []
															},
															"src": "362:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "495:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "500:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "500:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "491:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:1"
																		},
																		"nativeSrc": "491:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "491:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "509:1:1",
																		"nodeType": "YulLiteral",
																		"src": "509:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "484:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:1"
																},
																"nativeSrc": "484:27:1",
																"nodeType": "YulFunctionCall",
																"src": "484:27:1"
															},
															"nativeSrc": "484:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "484:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "267:250:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "311:3:1",
														"nodeType": "YulTypedName",
														"src": "311:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "316:3:1",
														"nodeType": "YulTypedName",
														"src": "316:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "321:6:1",
														"nodeType": "YulTypedName",
														"src": "321:6:1",
														"type": ""
													}
												],
												"src": "267:250:1"
											},
											{
												"body": {
													"nativeSrc": "643:275:1",
													"nodeType": "YulBlock",
													"src": "643:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "660:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "660:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "671:2:1",
																		"nodeType": "YulLiteral",
																		"src": "671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:1"
																},
																"nativeSrc": "653:21:1",
																"nodeType": "YulFunctionCall",
																"src": "653:21:1"
															},
															"nativeSrc": "653:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "653:21:1"
														},
														{
															"nativeSrc": "683:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "683:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "703:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "703:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "697:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "697:5:1"
																},
																"nativeSrc": "697:13:1",
																"nodeType": "YulFunctionCall",
																"src": "697:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "687:6:1",
																	"nodeType": "YulTypedName",
																	"src": "687:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "730:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "730:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:2:1",
																				"nodeType": "YulLiteral",
																				"src": "741:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "726:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:1"
																		},
																		"nativeSrc": "726:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "726:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "746:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "746:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "719:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:1"
																},
																"nativeSrc": "719:34:1",
																"nodeType": "YulFunctionCall",
																"src": "719:34:1"
															},
															"nativeSrc": "719:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "719:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "801:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "801:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:2:1",
																				"nodeType": "YulLiteral",
																				"src": "809:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "797:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:1"
																		},
																		"nativeSrc": "797:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "797:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "829:2:1",
																				"nodeType": "YulLiteral",
																				"src": "829:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "814:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:1"
																		},
																		"nativeSrc": "814:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "814:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "834:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "834:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "762:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "762:34:1"
																},
																"nativeSrc": "762:79:1",
																"nodeType": "YulFunctionCall",
																"src": "762:79:1"
															},
															"nativeSrc": "762:79:1",
															"nodeType": "YulExpressionStatement",
															"src": "762:79:1"
														},
														{
															"nativeSrc": "850:62:1",
															"nodeType": "YulAssignment",
															"src": "850:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "866:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "866:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "885:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "885:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "893:2:1",
																								"nodeType": "YulLiteral",
																								"src": "893:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "881:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "881:3:1"
																						},
																						"nativeSrc": "881:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "881:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "902:2:1",
																								"nodeType": "YulLiteral",
																								"src": "902:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "898:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "898:3:1"
																						},
																						"nativeSrc": "898:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "898:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "877:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "877:3:1"
																				},
																				"nativeSrc": "877:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "877:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "862:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:1"
																		},
																		"nativeSrc": "862:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "862:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "909:2:1",
																		"nodeType": "YulLiteral",
																		"src": "909:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "858:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:1"
																},
																"nativeSrc": "858:54:1",
																"nodeType": "YulFunctionCall",
																"src": "858:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "850:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "850:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "522:396:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "612:9:1",
														"nodeType": "YulTypedName",
														"src": "612:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "623:6:1",
														"nodeType": "YulTypedName",
														"src": "623:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "634:4:1",
														"nodeType": "YulTypedName",
														"src": "634:4:1",
														"type": ""
													}
												],
												"src": "522:396:1"
											},
											{
												"body": {
													"nativeSrc": "968:86:1",
													"nodeType": "YulBlock",
													"src": "968:86:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1032:16:1",
																"nodeType": "YulBlock",
																"src": "1032:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1041:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1041:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1044:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1044:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1034:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1034:6:1"
																			},
																			"nativeSrc": "1034:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1034:12:1"
																		},
																		"nativeSrc": "1034:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1034:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "991:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "991:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1002:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1002:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1017:3:1",
																										"nodeType": "YulLiteral",
																										"src": "1017:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1022:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1022:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1013:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1013:3:1"
																								},
																								"nativeSrc": "1013:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1013:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1026:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1026:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1009:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1009:3:1"
																						},
																						"nativeSrc": "1009:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1009:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "998:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "998:3:1"
																				},
																				"nativeSrc": "998:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "998:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "988:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "988:2:1"
																		},
																		"nativeSrc": "988:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "988:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "981:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:1"
																},
																"nativeSrc": "981:50:1",
																"nodeType": "YulFunctionCall",
																"src": "981:50:1"
															},
															"nativeSrc": "978:70:1",
															"nodeType": "YulIf",
															"src": "978:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "923:131:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "957:5:1",
														"nodeType": "YulTypedName",
														"src": "957:5:1",
														"type": ""
													}
												],
												"src": "923:131:1"
											},
											{
												"body": {
													"nativeSrc": "1146:228:1",
													"nodeType": "YulBlock",
													"src": "1146:228:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1192:16:1",
																"nodeType": "YulBlock",
																"src": "1192:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1201:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1201:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1204:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1194:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1194:6:1"
																			},
																			"nativeSrc": "1194:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1194:12:1"
																		},
																		"nativeSrc": "1194:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1194:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1167:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1167:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1176:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1176:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1163:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:1"
																		},
																		"nativeSrc": "1163:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1188:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1188:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1159:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:1"
																},
																"nativeSrc": "1159:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1159:32:1"
															},
															"nativeSrc": "1156:52:1",
															"nodeType": "YulIf",
															"src": "1156:52:1"
														},
														{
															"nativeSrc": "1217:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1217:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1243:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1243:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1230:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1230:12:1"
																},
																"nativeSrc": "1230:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1230:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1221:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1221:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1287:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1287:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1262:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "1262:24:1"
																},
																"nativeSrc": "1262:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1262:31:1"
															},
															"nativeSrc": "1262:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1262:31:1"
														},
														{
															"nativeSrc": "1302:15:1",
															"nodeType": "YulAssignment",
															"src": "1302:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1312:5:1",
																"nodeType": "YulIdentifier",
																"src": "1312:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1302:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:6:1"
																}
															]
														},
														{
															"nativeSrc": "1326:42:1",
															"nodeType": "YulAssignment",
															"src": "1326:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1353:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1353:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1364:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1364:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1349:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1349:3:1"
																		},
																		"nativeSrc": "1349:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1349:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1336:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1336:12:1"
																},
																"nativeSrc": "1336:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1336:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1326:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1059:315:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1104:9:1",
														"nodeType": "YulTypedName",
														"src": "1104:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1115:7:1",
														"nodeType": "YulTypedName",
														"src": "1115:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1127:6:1",
														"nodeType": "YulTypedName",
														"src": "1127:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1135:6:1",
														"nodeType": "YulTypedName",
														"src": "1135:6:1",
														"type": ""
													}
												],
												"src": "1059:315:1"
											},
											{
												"body": {
													"nativeSrc": "1474:92:1",
													"nodeType": "YulBlock",
													"src": "1474:92:1",
													"statements": [
														{
															"nativeSrc": "1484:26:1",
															"nodeType": "YulAssignment",
															"src": "1484:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1496:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1496:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1507:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1492:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1492:3:1"
																},
																"nativeSrc": "1492:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1492:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1484:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1484:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1526:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1526:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1551:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1551:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1544:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1544:6:1"
																				},
																				"nativeSrc": "1544:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1544:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1537:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1537:6:1"
																		},
																		"nativeSrc": "1537:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1537:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1519:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:1"
																},
																"nativeSrc": "1519:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1519:41:1"
															},
															"nativeSrc": "1519:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1519:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1379:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1443:9:1",
														"nodeType": "YulTypedName",
														"src": "1443:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1454:6:1",
														"nodeType": "YulTypedName",
														"src": "1454:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1465:4:1",
														"nodeType": "YulTypedName",
														"src": "1465:4:1",
														"type": ""
													}
												],
												"src": "1379:187:1"
											},
											{
												"body": {
													"nativeSrc": "1672:76:1",
													"nodeType": "YulBlock",
													"src": "1672:76:1",
													"statements": [
														{
															"nativeSrc": "1682:26:1",
															"nodeType": "YulAssignment",
															"src": "1682:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1694:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1694:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1705:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1705:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1690:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1690:3:1"
																},
																"nativeSrc": "1690:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1690:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1682:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1682:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1724:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1724:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1735:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1735:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1717:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:1"
																},
																"nativeSrc": "1717:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1717:25:1"
															},
															"nativeSrc": "1717:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1717:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1571:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1641:9:1",
														"nodeType": "YulTypedName",
														"src": "1641:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1652:6:1",
														"nodeType": "YulTypedName",
														"src": "1652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1663:4:1",
														"nodeType": "YulTypedName",
														"src": "1663:4:1",
														"type": ""
													}
												],
												"src": "1571:177:1"
											},
											{
												"body": {
													"nativeSrc": "1799:114:1",
													"nodeType": "YulBlock",
													"src": "1799:114:1",
													"statements": [
														{
															"nativeSrc": "1809:29:1",
															"nodeType": "YulAssignment",
															"src": "1809:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1831:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1831:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1818:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:12:1"
																},
																"nativeSrc": "1818:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1818:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1809:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1809:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1891:16:1",
																"nodeType": "YulBlock",
																"src": "1891:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1900:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1900:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1893:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1893:6:1"
																			},
																			"nativeSrc": "1893:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1893:12:1"
																		},
																		"nativeSrc": "1893:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1893:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1860:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1860:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1881:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1881:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1874:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1874:6:1"
																						},
																						"nativeSrc": "1874:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1874:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1867:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1867:6:1"
																				},
																				"nativeSrc": "1867:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1867:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1857:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1857:2:1"
																		},
																		"nativeSrc": "1857:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1857:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1850:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:1"
																},
																"nativeSrc": "1850:40:1",
																"nodeType": "YulFunctionCall",
																"src": "1850:40:1"
															},
															"nativeSrc": "1847:60:1",
															"nodeType": "YulIf",
															"src": "1847:60:1"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "1753:160:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1778:6:1",
														"nodeType": "YulTypedName",
														"src": "1778:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1789:5:1",
														"nodeType": "YulTypedName",
														"src": "1789:5:1",
														"type": ""
													}
												],
												"src": "1753:160:1"
											},
											{
												"body": {
													"nativeSrc": "2037:570:1",
													"nodeType": "YulBlock",
													"src": "2037:570:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2083:16:1",
																"nodeType": "YulBlock",
																"src": "2083:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2092:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2092:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2095:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2095:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2085:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2085:6:1"
																			},
																			"nativeSrc": "2085:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2085:12:1"
																		},
																		"nativeSrc": "2085:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2085:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2058:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2067:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2067:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2054:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2054:3:1"
																		},
																		"nativeSrc": "2054:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2054:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2079:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2079:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2050:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2050:3:1"
																},
																"nativeSrc": "2050:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2050:32:1"
															},
															"nativeSrc": "2047:52:1",
															"nodeType": "YulIf",
															"src": "2047:52:1"
														},
														{
															"nativeSrc": "2108:37:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2108:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2135:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2135:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2122:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2122:12:1"
																},
																"nativeSrc": "2122:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2122:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2112:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2112:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2154:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2154:28:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2164:18:1",
																"nodeType": "YulLiteral",
																"src": "2164:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2158:2:1",
																	"nodeType": "YulTypedName",
																	"src": "2158:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2209:16:1",
																"nodeType": "YulBlock",
																"src": "2209:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2218:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2218:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2221:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2221:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2211:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:1"
																			},
																			"nativeSrc": "2211:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2211:12:1"
																		},
																		"nativeSrc": "2211:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2211:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2197:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2197:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2205:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "2205:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2194:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2194:2:1"
																},
																"nativeSrc": "2194:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2194:14:1"
															},
															"nativeSrc": "2191:34:1",
															"nodeType": "YulIf",
															"src": "2191:34:1"
														},
														{
															"nativeSrc": "2234:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2234:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2248:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2248:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2259:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2259:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2244:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2244:3:1"
																},
																"nativeSrc": "2244:22:1",
																"nodeType": "YulFunctionCall",
																"src": "2244:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2238:2:1",
																	"nodeType": "YulTypedName",
																	"src": "2238:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2314:16:1",
																"nodeType": "YulBlock",
																"src": "2314:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2323:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2323:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2326:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2326:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2316:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2316:6:1"
																			},
																			"nativeSrc": "2316:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2316:12:1"
																		},
																		"nativeSrc": "2316:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2316:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "2293:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2293:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2297:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2297:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2289:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:1"
																				},
																				"nativeSrc": "2289:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2304:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2304:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2285:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2285:3:1"
																		},
																		"nativeSrc": "2285:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2285:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2278:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:1"
																},
																"nativeSrc": "2278:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2278:35:1"
															},
															"nativeSrc": "2275:55:1",
															"nodeType": "YulIf",
															"src": "2275:55:1"
														},
														{
															"nativeSrc": "2339:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2339:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "2366:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "2366:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2353:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2353:12:1"
																},
																"nativeSrc": "2353:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2353:16:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2343:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2343:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2396:16:1",
																"nodeType": "YulBlock",
																"src": "2396:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2405:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2405:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2408:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2408:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2398:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2398:6:1"
																			},
																			"nativeSrc": "2398:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2398:12:1"
																		},
																		"nativeSrc": "2398:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2398:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2384:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2384:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2392:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "2392:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2381:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2381:2:1"
																},
																"nativeSrc": "2381:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2381:14:1"
															},
															"nativeSrc": "2378:34:1",
															"nodeType": "YulIf",
															"src": "2378:34:1"
														},
														{
															"body": {
																"nativeSrc": "2472:16:1",
																"nodeType": "YulBlock",
																"src": "2472:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2481:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2481:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2484:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2484:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2474:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2474:6:1"
																			},
																			"nativeSrc": "2474:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2474:12:1"
																		},
																		"nativeSrc": "2474:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2474:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "2435:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2435:2:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2443:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2443:1:1",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2446:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "2446:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2439:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2439:3:1"
																						},
																						"nativeSrc": "2439:14:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2439:14:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2431:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2431:3:1"
																				},
																				"nativeSrc": "2431:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2431:23:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2456:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2456:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2427:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2427:3:1"
																		},
																		"nativeSrc": "2427:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2427:34:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2463:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2463:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2424:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2424:2:1"
																},
																"nativeSrc": "2424:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2424:47:1"
															},
															"nativeSrc": "2421:67:1",
															"nodeType": "YulIf",
															"src": "2421:67:1"
														},
														{
															"nativeSrc": "2497:23:1",
															"nodeType": "YulAssignment",
															"src": "2497:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "2511:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "2511:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2515:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2515:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2507:3:1"
																},
																"nativeSrc": "2507:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2507:13:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:1"
																}
															]
														},
														{
															"nativeSrc": "2529:16:1",
															"nodeType": "YulAssignment",
															"src": "2529:16:1",
															"value": {
																"name": "length",
																"nativeSrc": "2539:6:1",
																"nodeType": "YulIdentifier",
																"src": "2539:6:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:1"
																}
															]
														},
														{
															"nativeSrc": "2554:47:1",
															"nodeType": "YulAssignment",
															"src": "2554:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2584:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2595:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2595:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:1"
																		},
																		"nativeSrc": "2580:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:20:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "2564:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2564:15:1"
																},
																"nativeSrc": "2564:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2564:37:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2554:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool",
												"nativeSrc": "1918:689:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1987:9:1",
														"nodeType": "YulTypedName",
														"src": "1987:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1998:7:1",
														"nodeType": "YulTypedName",
														"src": "1998:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2010:6:1",
														"nodeType": "YulTypedName",
														"src": "2010:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2018:6:1",
														"nodeType": "YulTypedName",
														"src": "2018:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2026:6:1",
														"nodeType": "YulTypedName",
														"src": "2026:6:1",
														"type": ""
													}
												],
												"src": "1918:689:1"
											},
											{
												"body": {
													"nativeSrc": "2716:352:1",
													"nodeType": "YulBlock",
													"src": "2716:352:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2762:16:1",
																"nodeType": "YulBlock",
																"src": "2762:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2771:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2771:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2774:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2774:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2764:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2764:6:1"
																			},
																			"nativeSrc": "2764:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2764:12:1"
																		},
																		"nativeSrc": "2764:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2764:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2737:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2737:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2746:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2746:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2733:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:1"
																		},
																		"nativeSrc": "2733:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2733:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2758:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2758:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2729:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2729:3:1"
																},
																"nativeSrc": "2729:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2729:32:1"
															},
															"nativeSrc": "2726:52:1",
															"nodeType": "YulIf",
															"src": "2726:52:1"
														},
														{
															"nativeSrc": "2787:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2787:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2813:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2813:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2800:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2800:12:1"
																},
																"nativeSrc": "2800:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2800:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2791:5:1",
																	"nodeType": "YulTypedName",
																	"src": "2791:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2857:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2857:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2832:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "2832:24:1"
																},
																"nativeSrc": "2832:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2832:31:1"
															},
															"nativeSrc": "2832:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2832:31:1"
														},
														{
															"nativeSrc": "2872:15:1",
															"nodeType": "YulAssignment",
															"src": "2872:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "2882:5:1",
																"nodeType": "YulIdentifier",
																"src": "2882:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2872:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:1"
																}
															]
														},
														{
															"nativeSrc": "2896:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2896:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2928:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2939:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2939:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:1"
																		},
																		"nativeSrc": "2924:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2924:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2911:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2911:12:1"
																},
																"nativeSrc": "2911:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2911:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2900:7:1",
																	"nodeType": "YulTypedName",
																	"src": "2900:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2977:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2977:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2952:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "2952:24:1"
																},
																"nativeSrc": "2952:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2952:33:1"
															},
															"nativeSrc": "2952:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2952:33:1"
														},
														{
															"nativeSrc": "2994:17:1",
															"nodeType": "YulAssignment",
															"src": "2994:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "3004:7:1",
																"nodeType": "YulIdentifier",
																"src": "3004:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2994:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:1"
																}
															]
														},
														{
															"nativeSrc": "3020:42:1",
															"nodeType": "YulAssignment",
															"src": "3020:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3047:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3047:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3058:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3058:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3043:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:1"
																		},
																		"nativeSrc": "3043:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3030:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3030:12:1"
																},
																"nativeSrc": "3030:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3030:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3020:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3020:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2612:456:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2666:9:1",
														"nodeType": "YulTypedName",
														"src": "2666:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2677:7:1",
														"nodeType": "YulTypedName",
														"src": "2677:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2689:6:1",
														"nodeType": "YulTypedName",
														"src": "2689:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2697:6:1",
														"nodeType": "YulTypedName",
														"src": "2697:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2705:6:1",
														"nodeType": "YulTypedName",
														"src": "2705:6:1",
														"type": ""
													}
												],
												"src": "2612:456:1"
											},
											{
												"body": {
													"nativeSrc": "3326:1050:1",
													"nodeType": "YulBlock",
													"src": "3326:1050:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3373:16:1",
																"nodeType": "YulBlock",
																"src": "3373:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3382:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3382:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3385:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3385:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3375:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3375:6:1"
																			},
																			"nativeSrc": "3375:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3375:12:1"
																		},
																		"nativeSrc": "3375:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3375:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3347:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3347:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3356:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3356:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3343:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3343:3:1"
																		},
																		"nativeSrc": "3343:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3343:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3368:3:1",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:1"
																},
																"nativeSrc": "3339:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3339:33:1"
															},
															"nativeSrc": "3336:53:1",
															"nodeType": "YulIf",
															"src": "3336:53:1"
														},
														{
															"nativeSrc": "3398:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3398:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3424:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3424:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3411:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3411:12:1"
																},
																"nativeSrc": "3411:23:1",
																"nodeType": "YulFunctionCall",
																"src": "3411:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3402:5:1",
																	"nodeType": "YulTypedName",
																	"src": "3402:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3468:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3443:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "3443:24:1"
																},
																"nativeSrc": "3443:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3443:31:1"
															},
															"nativeSrc": "3443:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3443:31:1"
														},
														{
															"nativeSrc": "3483:15:1",
															"nodeType": "YulAssignment",
															"src": "3483:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3493:5:1",
																"nodeType": "YulIdentifier",
																"src": "3493:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3483:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:1"
																}
															]
														},
														{
															"nativeSrc": "3507:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3507:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3539:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3539:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3550:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3550:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3535:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3535:3:1"
																		},
																		"nativeSrc": "3535:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3522:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3522:12:1"
																},
																"nativeSrc": "3522:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3522:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3511:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3511:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3588:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3588:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3563:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "3563:24:1"
																},
																"nativeSrc": "3563:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3563:33:1"
															},
															"nativeSrc": "3563:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3563:33:1"
														},
														{
															"nativeSrc": "3605:17:1",
															"nodeType": "YulAssignment",
															"src": "3605:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "3615:7:1",
																"nodeType": "YulIdentifier",
																"src": "3615:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3605:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:1"
																}
															]
														},
														{
															"nativeSrc": "3631:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3631:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3663:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3663:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3674:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3674:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3659:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3659:3:1"
																		},
																		"nativeSrc": "3659:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3659:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3646:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3646:12:1"
																},
																"nativeSrc": "3646:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3646:32:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3635:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3635:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "3712:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3712:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3687:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "3687:24:1"
																},
																"nativeSrc": "3687:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3687:33:1"
															},
															"nativeSrc": "3687:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3687:33:1"
														},
														{
															"nativeSrc": "3729:17:1",
															"nodeType": "YulAssignment",
															"src": "3729:17:1",
															"value": {
																"name": "value_2",
																"nativeSrc": "3739:7:1",
																"nodeType": "YulIdentifier",
																"src": "3739:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:1"
																}
															]
														},
														{
															"nativeSrc": "3755:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3755:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3798:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3798:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3783:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3783:3:1"
																		},
																		"nativeSrc": "3783:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3783:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3770:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3770:12:1"
																},
																"nativeSrc": "3770:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:1"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3759:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3759:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "3836:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3836:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3811:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "3811:24:1"
																},
																"nativeSrc": "3811:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3811:33:1"
															},
															"nativeSrc": "3811:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3811:33:1"
														},
														{
															"nativeSrc": "3853:17:1",
															"nodeType": "YulAssignment",
															"src": "3853:17:1",
															"value": {
																"name": "value_3",
																"nativeSrc": "3863:7:1",
																"nodeType": "YulIdentifier",
																"src": "3863:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3853:6:1"
																}
															]
														},
														{
															"nativeSrc": "3879:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3879:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3911:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3911:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3922:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3922:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3907:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:1"
																		},
																		"nativeSrc": "3907:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3907:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3894:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3894:12:1"
																},
																"nativeSrc": "3894:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3894:33:1"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "3883:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3883:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nativeSrc": "3961:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3961:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3936:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "3936:24:1"
																},
																"nativeSrc": "3936:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3936:33:1"
															},
															"nativeSrc": "3936:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3936:33:1"
														},
														{
															"nativeSrc": "3978:17:1",
															"nodeType": "YulAssignment",
															"src": "3978:17:1",
															"value": {
																"name": "value_4",
																"nativeSrc": "3988:7:1",
																"nodeType": "YulIdentifier",
																"src": "3988:7:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3978:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3978:6:1"
																}
															]
														},
														{
															"nativeSrc": "4004:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4004:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4036:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4036:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4047:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4047:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4032:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4032:3:1"
																		},
																		"nativeSrc": "4032:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4032:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4019:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4019:12:1"
																},
																"nativeSrc": "4019:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4019:33:1"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "4008:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4008:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nativeSrc": "4086:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4086:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4061:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "4061:24:1"
																},
																"nativeSrc": "4061:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4061:33:1"
															},
															"nativeSrc": "4061:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4061:33:1"
														},
														{
															"nativeSrc": "4103:17:1",
															"nodeType": "YulAssignment",
															"src": "4103:17:1",
															"value": {
																"name": "value_5",
																"nativeSrc": "4113:7:1",
																"nodeType": "YulIdentifier",
																"src": "4113:7:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:1"
																}
															]
														},
														{
															"nativeSrc": "4129:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4129:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4161:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4161:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4172:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4172:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4157:3:1"
																		},
																		"nativeSrc": "4157:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4157:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4144:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4144:12:1"
																},
																"nativeSrc": "4144:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4144:33:1"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nativeSrc": "4133:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4133:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_6",
																		"nativeSrc": "4211:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4211:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4186:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "4186:24:1"
																},
																"nativeSrc": "4186:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4186:33:1"
															},
															"nativeSrc": "4186:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4186:33:1"
														},
														{
															"nativeSrc": "4228:17:1",
															"nodeType": "YulAssignment",
															"src": "4228:17:1",
															"value": {
																"name": "value_6",
																"nativeSrc": "4238:7:1",
																"nodeType": "YulIdentifier",
																"src": "4238:7:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4228:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4228:6:1"
																}
															]
														},
														{
															"nativeSrc": "4254:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4254:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4286:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4297:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4297:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4282:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:1"
																		},
																		"nativeSrc": "4282:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4282:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4269:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4269:12:1"
																},
																"nativeSrc": "4269:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4269:33:1"
															},
															"variables": [
																{
																	"name": "value_7",
																	"nativeSrc": "4258:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4258:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_7",
																		"nativeSrc": "4336:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4336:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4311:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "4311:24:1"
																},
																"nativeSrc": "4311:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4311:33:1"
															},
															"nativeSrc": "4311:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4311:33:1"
														},
														{
															"nativeSrc": "4353:17:1",
															"nodeType": "YulAssignment",
															"src": "4353:17:1",
															"value": {
																"name": "value_7",
																"nativeSrc": "4363:7:1",
																"nodeType": "YulIdentifier",
																"src": "4363:7:1"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "4353:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4353:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payable",
												"nativeSrc": "3073:1303:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3236:9:1",
														"nodeType": "YulTypedName",
														"src": "3236:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3247:7:1",
														"nodeType": "YulTypedName",
														"src": "3247:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3259:6:1",
														"nodeType": "YulTypedName",
														"src": "3259:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3267:6:1",
														"nodeType": "YulTypedName",
														"src": "3267:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3275:6:1",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3283:6:1",
														"nodeType": "YulTypedName",
														"src": "3283:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3291:6:1",
														"nodeType": "YulTypedName",
														"src": "3291:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3299:6:1",
														"nodeType": "YulTypedName",
														"src": "3299:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3307:6:1",
														"nodeType": "YulTypedName",
														"src": "3307:6:1",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "3315:6:1",
														"nodeType": "YulTypedName",
														"src": "3315:6:1",
														"type": ""
													}
												],
												"src": "3073:1303:1"
											},
											{
												"body": {
													"nativeSrc": "4465:231:1",
													"nodeType": "YulBlock",
													"src": "4465:231:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4511:16:1",
																"nodeType": "YulBlock",
																"src": "4511:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4520:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4520:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4523:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4523:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4513:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4513:6:1"
																			},
																			"nativeSrc": "4513:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4513:12:1"
																		},
																		"nativeSrc": "4513:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4513:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4486:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4486:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4495:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4495:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4482:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4482:3:1"
																		},
																		"nativeSrc": "4482:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4482:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4478:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4478:3:1"
																},
																"nativeSrc": "4478:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4478:32:1"
															},
															"nativeSrc": "4475:52:1",
															"nodeType": "YulIf",
															"src": "4475:52:1"
														},
														{
															"nativeSrc": "4536:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4536:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4562:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4562:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4549:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4549:12:1"
																},
																"nativeSrc": "4549:23:1",
																"nodeType": "YulFunctionCall",
																"src": "4549:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4540:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4540:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4606:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4606:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4581:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "4581:24:1"
																},
																"nativeSrc": "4581:31:1",
																"nodeType": "YulFunctionCall",
																"src": "4581:31:1"
															},
															"nativeSrc": "4581:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "4581:31:1"
														},
														{
															"nativeSrc": "4621:15:1",
															"nodeType": "YulAssignment",
															"src": "4621:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "4631:5:1",
																"nodeType": "YulIdentifier",
																"src": "4631:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4621:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:1"
																}
															]
														},
														{
															"nativeSrc": "4645:45:1",
															"nodeType": "YulAssignment",
															"src": "4645:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4675:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4675:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4686:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4686:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4671:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4671:3:1"
																		},
																		"nativeSrc": "4671:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4671:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "4655:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "4655:15:1"
																},
																"nativeSrc": "4655:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4655:35:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4645:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4381:315:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4423:9:1",
														"nodeType": "YulTypedName",
														"src": "4423:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4434:7:1",
														"nodeType": "YulTypedName",
														"src": "4434:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4446:6:1",
														"nodeType": "YulTypedName",
														"src": "4446:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4454:6:1",
														"nodeType": "YulTypedName",
														"src": "4454:6:1",
														"type": ""
													}
												],
												"src": "4381:315:1"
											},
											{
												"body": {
													"nativeSrc": "4798:87:1",
													"nodeType": "YulBlock",
													"src": "4798:87:1",
													"statements": [
														{
															"nativeSrc": "4808:26:1",
															"nodeType": "YulAssignment",
															"src": "4808:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4820:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4820:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4831:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4831:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4816:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4816:3:1"
																},
																"nativeSrc": "4816:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4816:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4808:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4808:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4850:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4850:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4865:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4865:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4873:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4873:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4861:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:1"
																		},
																		"nativeSrc": "4861:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4861:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4843:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:1"
																},
																"nativeSrc": "4843:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4843:36:1"
															},
															"nativeSrc": "4843:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4843:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4701:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4767:9:1",
														"nodeType": "YulTypedName",
														"src": "4767:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4778:6:1",
														"nodeType": "YulTypedName",
														"src": "4778:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4789:4:1",
														"nodeType": "YulTypedName",
														"src": "4789:4:1",
														"type": ""
													}
												],
												"src": "4701:184:1"
											},
											{
												"body": {
													"nativeSrc": "4960:110:1",
													"nodeType": "YulBlock",
													"src": "4960:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5006:16:1",
																"nodeType": "YulBlock",
																"src": "5006:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5015:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5015:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5018:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5018:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5008:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5008:6:1"
																			},
																			"nativeSrc": "5008:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5008:12:1"
																		},
																		"nativeSrc": "5008:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5008:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4981:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4981:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4990:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4990:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4977:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4977:3:1"
																		},
																		"nativeSrc": "4977:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4977:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5002:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5002:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4973:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:1"
																},
																"nativeSrc": "4973:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4973:32:1"
															},
															"nativeSrc": "4970:52:1",
															"nodeType": "YulIf",
															"src": "4970:52:1"
														},
														{
															"nativeSrc": "5031:33:1",
															"nodeType": "YulAssignment",
															"src": "5031:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5054:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5054:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5041:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5041:12:1"
																},
																"nativeSrc": "5041:23:1",
																"nodeType": "YulFunctionCall",
																"src": "5041:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5031:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4890:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4926:9:1",
														"nodeType": "YulTypedName",
														"src": "4926:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4937:7:1",
														"nodeType": "YulTypedName",
														"src": "4937:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4949:6:1",
														"nodeType": "YulTypedName",
														"src": "4949:6:1",
														"type": ""
													}
												],
												"src": "4890:180:1"
											},
											{
												"body": {
													"nativeSrc": "5107:95:1",
													"nodeType": "YulBlock",
													"src": "5107:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5124:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5124:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5131:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5131:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5136:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5136:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5127:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5127:3:1"
																		},
																		"nativeSrc": "5127:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5127:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5117:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:1"
																},
																"nativeSrc": "5117:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5117:31:1"
															},
															"nativeSrc": "5117:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5117:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5164:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5164:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5167:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5167:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5157:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5157:6:1"
																},
																"nativeSrc": "5157:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5157:15:1"
															},
															"nativeSrc": "5157:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5157:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5188:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5188:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5191:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5181:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5181:6:1"
																},
																"nativeSrc": "5181:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5181:15:1"
															},
															"nativeSrc": "5181:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5181:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5075:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5075:127:1"
											},
											{
												"body": {
													"nativeSrc": "5303:960:1",
													"nodeType": "YulBlock",
													"src": "5303:960:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5349:16:1",
																"nodeType": "YulBlock",
																"src": "5349:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5358:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5358:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5361:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5361:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5351:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5351:6:1"
																			},
																			"nativeSrc": "5351:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5351:12:1"
																		},
																		"nativeSrc": "5351:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5351:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5324:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5324:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5333:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5320:3:1"
																		},
																		"nativeSrc": "5320:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5320:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5345:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5316:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5316:3:1"
																},
																"nativeSrc": "5316:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5316:32:1"
															},
															"nativeSrc": "5313:52:1",
															"nodeType": "YulIf",
															"src": "5313:52:1"
														},
														{
															"nativeSrc": "5374:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5374:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5400:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5400:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5387:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5387:12:1"
																},
																"nativeSrc": "5387:23:1",
																"nodeType": "YulFunctionCall",
																"src": "5387:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5378:5:1",
																	"nodeType": "YulTypedName",
																	"src": "5378:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5444:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5419:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "5419:24:1"
																},
																"nativeSrc": "5419:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5419:31:1"
															},
															"nativeSrc": "5419:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5419:31:1"
														},
														{
															"nativeSrc": "5459:15:1",
															"nodeType": "YulAssignment",
															"src": "5459:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "5469:5:1",
																"nodeType": "YulIdentifier",
																"src": "5469:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5459:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:1"
																}
															]
														},
														{
															"nativeSrc": "5483:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5483:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5514:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5514:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5525:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5525:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5510:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5510:3:1"
																		},
																		"nativeSrc": "5510:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5510:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5497:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5497:12:1"
																},
																"nativeSrc": "5497:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5497:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5487:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5487:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5538:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5538:28:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5548:18:1",
																"nodeType": "YulLiteral",
																"src": "5548:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5542:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5542:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5593:16:1",
																"nodeType": "YulBlock",
																"src": "5593:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5602:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5602:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5605:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5605:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5595:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5595:6:1"
																			},
																			"nativeSrc": "5595:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5595:12:1"
																		},
																		"nativeSrc": "5595:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5595:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5581:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5581:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5589:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5589:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5578:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5578:2:1"
																},
																"nativeSrc": "5578:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5578:14:1"
															},
															"nativeSrc": "5575:34:1",
															"nodeType": "YulIf",
															"src": "5575:34:1"
														},
														{
															"nativeSrc": "5618:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5618:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5632:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5632:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5643:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5643:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5628:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5628:3:1"
																},
																"nativeSrc": "5628:22:1",
																"nodeType": "YulFunctionCall",
																"src": "5628:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "5622:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5622:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5698:16:1",
																"nodeType": "YulBlock",
																"src": "5698:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5707:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5710:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5700:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:1"
																			},
																			"nativeSrc": "5700:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:1"
																		},
																		"nativeSrc": "5700:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5677:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5677:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5681:4:1",
																						"nodeType": "YulLiteral",
																						"src": "5681:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5673:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5673:3:1"
																				},
																				"nativeSrc": "5673:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5673:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5688:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5688:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5669:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5669:3:1"
																		},
																		"nativeSrc": "5669:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5669:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5662:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:1"
																},
																"nativeSrc": "5662:35:1",
																"nodeType": "YulFunctionCall",
																"src": "5662:35:1"
															},
															"nativeSrc": "5659:55:1",
															"nodeType": "YulIf",
															"src": "5659:55:1"
														},
														{
															"nativeSrc": "5723:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5723:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5746:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5746:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5733:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5733:12:1"
																},
																"nativeSrc": "5733:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5733:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "5727:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5727:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5772:22:1",
																"nodeType": "YulBlock",
																"src": "5772:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5774:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5774:16:1"
																			},
																			"nativeSrc": "5774:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5774:18:1"
																		},
																		"nativeSrc": "5774:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5774:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "5764:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5764:2:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5768:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5768:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5761:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5761:2:1"
																},
																"nativeSrc": "5761:10:1",
																"nodeType": "YulFunctionCall",
																"src": "5761:10:1"
															},
															"nativeSrc": "5758:36:1",
															"nodeType": "YulIf",
															"src": "5758:36:1"
														},
														{
															"nativeSrc": "5803:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5803:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5817:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5817:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5813:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5813:3:1"
																},
																"nativeSrc": "5813:7:1",
																"nodeType": "YulFunctionCall",
																"src": "5813:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "5807:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5807:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5829:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5829:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5849:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5849:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5843:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5843:5:1"
																},
																"nativeSrc": "5843:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5843:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5833:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5833:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5861:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5861:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5883:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "5907:2:1",
																										"nodeType": "YulIdentifier",
																										"src": "5907:2:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5911:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5911:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5903:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5903:3:1"
																								},
																								"nativeSrc": "5903:13:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5903:13:1"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "5918:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "5918:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "5899:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5899:3:1"
																						},
																						"nativeSrc": "5899:22:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5899:22:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5923:2:1",
																						"nodeType": "YulLiteral",
																						"src": "5923:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5895:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5895:3:1"
																				},
																				"nativeSrc": "5895:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5895:31:1"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "5928:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5928:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5891:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5891:3:1"
																		},
																		"nativeSrc": "5891:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5891:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5879:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5879:3:1"
																},
																"nativeSrc": "5879:53:1",
																"nodeType": "YulFunctionCall",
																"src": "5879:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5865:10:1",
																	"nodeType": "YulTypedName",
																	"src": "5865:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5991:22:1",
																"nodeType": "YulBlock",
																"src": "5991:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5993:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5993:16:1"
																			},
																			"nativeSrc": "5993:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5993:18:1"
																		},
																		"nativeSrc": "5993:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5993:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5950:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "5950:10:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5962:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5962:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5947:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5947:2:1"
																		},
																		"nativeSrc": "5947:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5947:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5970:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "5970:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5982:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5982:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5967:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5967:2:1"
																		},
																		"nativeSrc": "5967:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5967:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5944:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5944:2:1"
																},
																"nativeSrc": "5944:46:1",
																"nodeType": "YulFunctionCall",
																"src": "5944:46:1"
															},
															"nativeSrc": "5941:72:1",
															"nodeType": "YulIf",
															"src": "5941:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6029:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6029:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6033:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "6033:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6022:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6022:6:1"
																},
																"nativeSrc": "6022:22:1",
																"nodeType": "YulFunctionCall",
																"src": "6022:22:1"
															},
															"nativeSrc": "6022:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "6022:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6060:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6060:6:1"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "6068:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "6068:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6053:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6053:6:1"
																},
																"nativeSrc": "6053:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6053:18:1"
															},
															"nativeSrc": "6053:18:1",
															"nodeType": "YulExpressionStatement",
															"src": "6053:18:1"
														},
														{
															"body": {
																"nativeSrc": "6117:16:1",
																"nodeType": "YulBlock",
																"src": "6117:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6126:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6126:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6129:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6129:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6119:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6119:6:1"
																			},
																			"nativeSrc": "6119:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6119:12:1"
																		},
																		"nativeSrc": "6119:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6119:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "6094:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6094:2:1"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "6098:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6098:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6090:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6090:3:1"
																				},
																				"nativeSrc": "6090:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6090:11:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6103:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6103:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6086:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6086:3:1"
																		},
																		"nativeSrc": "6086:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6086:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6108:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "6108:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6083:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6083:2:1"
																},
																"nativeSrc": "6083:33:1",
																"nodeType": "YulFunctionCall",
																"src": "6083:33:1"
															},
															"nativeSrc": "6080:53:1",
															"nodeType": "YulIf",
															"src": "6080:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6159:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6159:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6167:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6167:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6155:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6155:3:1"
																		},
																		"nativeSrc": "6155:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "6176:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6176:2:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6180:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6180:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6172:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:1"
																		},
																		"nativeSrc": "6172:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:11:1"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "6185:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "6185:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6142:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6142:12:1"
																},
																"nativeSrc": "6142:46:1",
																"nodeType": "YulFunctionCall",
																"src": "6142:46:1"
															},
															"nativeSrc": "6142:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "6142:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "6212:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6212:6:1"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "6220:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6220:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6208:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6208:3:1"
																				},
																				"nativeSrc": "6208:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6208:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6225:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6204:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6204:3:1"
																		},
																		"nativeSrc": "6204:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6204:24:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6230:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6230:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6197:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6197:6:1"
																},
																"nativeSrc": "6197:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6197:35:1"
															},
															"nativeSrc": "6197:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6197:35:1"
														},
														{
															"nativeSrc": "6241:16:1",
															"nodeType": "YulAssignment",
															"src": "6241:16:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "6251:6:1",
																"nodeType": "YulIdentifier",
																"src": "6251:6:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6241:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "5207:1056:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5261:9:1",
														"nodeType": "YulTypedName",
														"src": "5261:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5272:7:1",
														"nodeType": "YulTypedName",
														"src": "5272:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5284:6:1",
														"nodeType": "YulTypedName",
														"src": "5284:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5292:6:1",
														"nodeType": "YulTypedName",
														"src": "5292:6:1",
														"type": ""
													}
												],
												"src": "5207:1056:1"
											},
											{
												"body": {
													"nativeSrc": "6369:76:1",
													"nodeType": "YulBlock",
													"src": "6369:76:1",
													"statements": [
														{
															"nativeSrc": "6379:26:1",
															"nodeType": "YulAssignment",
															"src": "6379:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6391:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6391:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6402:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6402:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6387:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6387:3:1"
																},
																"nativeSrc": "6387:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6387:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6379:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6379:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6421:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6421:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6432:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6432:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:1"
																},
																"nativeSrc": "6414:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6414:25:1"
															},
															"nativeSrc": "6414:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "6414:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6268:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6338:9:1",
														"nodeType": "YulTypedName",
														"src": "6338:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6349:6:1",
														"nodeType": "YulTypedName",
														"src": "6349:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6360:4:1",
														"nodeType": "YulTypedName",
														"src": "6360:4:1",
														"type": ""
													}
												],
												"src": "6268:177:1"
											},
											{
												"body": {
													"nativeSrc": "6520:177:1",
													"nodeType": "YulBlock",
													"src": "6520:177:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6566:16:1",
																"nodeType": "YulBlock",
																"src": "6566:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6575:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6575:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6578:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6578:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6568:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6568:6:1"
																			},
																			"nativeSrc": "6568:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6568:12:1"
																		},
																		"nativeSrc": "6568:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6568:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6541:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6541:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6550:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6550:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6537:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:1"
																		},
																		"nativeSrc": "6537:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6537:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6562:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6533:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6533:3:1"
																},
																"nativeSrc": "6533:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6533:32:1"
															},
															"nativeSrc": "6530:52:1",
															"nodeType": "YulIf",
															"src": "6530:52:1"
														},
														{
															"nativeSrc": "6591:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6591:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6617:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6617:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6604:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6604:12:1"
																},
																"nativeSrc": "6604:23:1",
																"nodeType": "YulFunctionCall",
																"src": "6604:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6595:5:1",
																	"nodeType": "YulTypedName",
																	"src": "6595:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6661:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6661:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6636:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "6636:24:1"
																},
																"nativeSrc": "6636:31:1",
																"nodeType": "YulFunctionCall",
																"src": "6636:31:1"
															},
															"nativeSrc": "6636:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "6636:31:1"
														},
														{
															"nativeSrc": "6676:15:1",
															"nodeType": "YulAssignment",
															"src": "6676:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "6686:5:1",
																"nodeType": "YulIdentifier",
																"src": "6686:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6676:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6676:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6450:247:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6486:9:1",
														"nodeType": "YulTypedName",
														"src": "6486:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6497:7:1",
														"nodeType": "YulTypedName",
														"src": "6497:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6509:6:1",
														"nodeType": "YulTypedName",
														"src": "6509:6:1",
														"type": ""
													}
												],
												"src": "6450:247:1"
											},
											{
												"body": {
													"nativeSrc": "6803:102:1",
													"nodeType": "YulBlock",
													"src": "6803:102:1",
													"statements": [
														{
															"nativeSrc": "6813:26:1",
															"nodeType": "YulAssignment",
															"src": "6813:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6825:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6825:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6836:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6836:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6821:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6821:3:1"
																},
																"nativeSrc": "6821:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6821:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6813:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6813:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6855:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6855:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6870:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6870:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6886:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6886:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6891:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6891:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6882:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6882:3:1"
																						},
																						"nativeSrc": "6882:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6882:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6895:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6895:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6878:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6878:3:1"
																				},
																				"nativeSrc": "6878:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6878:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:1"
																		},
																		"nativeSrc": "6866:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6848:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6848:6:1"
																},
																"nativeSrc": "6848:51:1",
																"nodeType": "YulFunctionCall",
																"src": "6848:51:1"
															},
															"nativeSrc": "6848:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "6848:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6702:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6772:9:1",
														"nodeType": "YulTypedName",
														"src": "6772:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6783:6:1",
														"nodeType": "YulTypedName",
														"src": "6783:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6794:4:1",
														"nodeType": "YulTypedName",
														"src": "6794:4:1",
														"type": ""
													}
												],
												"src": "6702:203:1"
											},
											{
												"body": {
													"nativeSrc": "7151:294:1",
													"nodeType": "YulBlock",
													"src": "7151:294:1",
													"statements": [
														{
															"nativeSrc": "7161:27:1",
															"nodeType": "YulAssignment",
															"src": "7161:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7173:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7184:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7184:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7169:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7169:3:1"
																},
																"nativeSrc": "7169:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7169:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7161:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7161:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7204:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7204:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7215:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7197:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7197:6:1"
																},
																"nativeSrc": "7197:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7197:25:1"
															},
															"nativeSrc": "7197:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7197:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7242:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7242:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7253:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7253:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7238:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7238:3:1"
																		},
																		"nativeSrc": "7238:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7238:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7258:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7258:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7231:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7231:6:1"
																},
																"nativeSrc": "7231:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7231:34:1"
															},
															"nativeSrc": "7231:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7231:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7285:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7285:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7296:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7296:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7281:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7281:3:1"
																		},
																		"nativeSrc": "7281:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7281:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7301:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7301:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7274:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:1"
																},
																"nativeSrc": "7274:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7274:34:1"
															},
															"nativeSrc": "7274:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7274:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7328:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7328:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7339:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7339:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7324:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7324:3:1"
																		},
																		"nativeSrc": "7324:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7324:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7344:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7344:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7317:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7317:6:1"
																},
																"nativeSrc": "7317:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7317:34:1"
															},
															"nativeSrc": "7317:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7317:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7371:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7371:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7382:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7382:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7367:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7367:3:1"
																		},
																		"nativeSrc": "7367:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7367:19:1"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "7388:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7388:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7360:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7360:6:1"
																},
																"nativeSrc": "7360:35:1",
																"nodeType": "YulFunctionCall",
																"src": "7360:35:1"
															},
															"nativeSrc": "7360:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "7360:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7426:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7426:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7411:3:1"
																		},
																		"nativeSrc": "7411:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7411:19:1"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "7432:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7432:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7404:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7404:6:1"
																},
																"nativeSrc": "7404:35:1",
																"nodeType": "YulFunctionCall",
																"src": "7404:35:1"
															},
															"nativeSrc": "7404:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "7404:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6910:535:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7080:9:1",
														"nodeType": "YulTypedName",
														"src": "7080:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7091:6:1",
														"nodeType": "YulTypedName",
														"src": "7091:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7099:6:1",
														"nodeType": "YulTypedName",
														"src": "7099:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7107:6:1",
														"nodeType": "YulTypedName",
														"src": "7107:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7115:6:1",
														"nodeType": "YulTypedName",
														"src": "7115:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7123:6:1",
														"nodeType": "YulTypedName",
														"src": "7123:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7131:6:1",
														"nodeType": "YulTypedName",
														"src": "7131:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7142:4:1",
														"nodeType": "YulTypedName",
														"src": "7142:4:1",
														"type": ""
													}
												],
												"src": "6910:535:1"
											},
											{
												"body": {
													"nativeSrc": "7537:301:1",
													"nodeType": "YulBlock",
													"src": "7537:301:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7583:16:1",
																"nodeType": "YulBlock",
																"src": "7583:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7592:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7592:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7595:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7595:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7585:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7585:6:1"
																			},
																			"nativeSrc": "7585:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7585:12:1"
																		},
																		"nativeSrc": "7585:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7585:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7558:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7558:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7567:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7567:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7554:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:1"
																		},
																		"nativeSrc": "7554:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7554:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7579:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7550:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7550:3:1"
																},
																"nativeSrc": "7550:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7550:32:1"
															},
															"nativeSrc": "7547:52:1",
															"nodeType": "YulIf",
															"src": "7547:52:1"
														},
														{
															"nativeSrc": "7608:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7608:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7634:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7634:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7621:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "7621:12:1"
																},
																"nativeSrc": "7621:23:1",
																"nodeType": "YulFunctionCall",
																"src": "7621:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7612:5:1",
																	"nodeType": "YulTypedName",
																	"src": "7612:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7678:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7678:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7653:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "7653:24:1"
																},
																"nativeSrc": "7653:31:1",
																"nodeType": "YulFunctionCall",
																"src": "7653:31:1"
															},
															"nativeSrc": "7653:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "7653:31:1"
														},
														{
															"nativeSrc": "7693:15:1",
															"nodeType": "YulAssignment",
															"src": "7693:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "7703:5:1",
																"nodeType": "YulIdentifier",
																"src": "7703:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7693:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7693:6:1"
																}
															]
														},
														{
															"nativeSrc": "7717:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7717:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7749:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7749:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7760:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7760:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7745:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7745:3:1"
																		},
																		"nativeSrc": "7745:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7745:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7732:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "7732:12:1"
																},
																"nativeSrc": "7732:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7732:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "7721:7:1",
																	"nodeType": "YulTypedName",
																	"src": "7721:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "7798:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "7798:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7773:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "7773:24:1"
																},
																"nativeSrc": "7773:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7773:33:1"
															},
															"nativeSrc": "7773:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "7773:33:1"
														},
														{
															"nativeSrc": "7815:17:1",
															"nodeType": "YulAssignment",
															"src": "7815:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "7825:7:1",
																"nodeType": "YulIdentifier",
																"src": "7825:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7815:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7450:388:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7495:9:1",
														"nodeType": "YulTypedName",
														"src": "7495:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7506:7:1",
														"nodeType": "YulTypedName",
														"src": "7506:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7518:6:1",
														"nodeType": "YulTypedName",
														"src": "7518:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7526:6:1",
														"nodeType": "YulTypedName",
														"src": "7526:6:1",
														"type": ""
													}
												],
												"src": "7450:388:1"
											},
											{
												"body": {
													"nativeSrc": "7875:95:1",
													"nodeType": "YulBlock",
													"src": "7875:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7892:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7892:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7899:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7899:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7904:10:1",
																				"nodeType": "YulLiteral",
																				"src": "7904:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:1"
																		},
																		"nativeSrc": "7895:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7895:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7885:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:1"
																},
																"nativeSrc": "7885:31:1",
																"nodeType": "YulFunctionCall",
																"src": "7885:31:1"
															},
															"nativeSrc": "7885:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "7885:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7932:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7932:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7935:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7935:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7925:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7925:6:1"
																},
																"nativeSrc": "7925:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7925:15:1"
															},
															"nativeSrc": "7925:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7925:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7956:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7956:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7959:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7959:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7949:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:1"
																},
																"nativeSrc": "7949:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7949:15:1"
															},
															"nativeSrc": "7949:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7949:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7843:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7843:127:1"
											},
											{
												"body": {
													"nativeSrc": "8027:116:1",
													"nodeType": "YulBlock",
													"src": "8027:116:1",
													"statements": [
														{
															"nativeSrc": "8037:20:1",
															"nodeType": "YulAssignment",
															"src": "8037:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8052:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8052:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8055:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8055:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8048:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:1"
																},
																"nativeSrc": "8048:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8048:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8037:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "8037:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8115:22:1",
																"nodeType": "YulBlock",
																"src": "8115:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8117:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8117:16:1"
																			},
																			"nativeSrc": "8117:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8117:18:1"
																		},
																		"nativeSrc": "8117:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8117:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8086:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8086:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8079:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8079:6:1"
																				},
																				"nativeSrc": "8079:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8079:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8093:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "8093:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8100:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "8100:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8109:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "8109:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8096:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8096:3:1"
																						},
																						"nativeSrc": "8096:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8096:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8090:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8090:2:1"
																				},
																				"nativeSrc": "8090:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8090:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8076:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8076:2:1"
																		},
																		"nativeSrc": "8076:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8076:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8069:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8069:6:1"
																},
																"nativeSrc": "8069:45:1",
																"nodeType": "YulFunctionCall",
																"src": "8069:45:1"
															},
															"nativeSrc": "8066:71:1",
															"nodeType": "YulIf",
															"src": "8066:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7975:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8006:1:1",
														"nodeType": "YulTypedName",
														"src": "8006:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8009:1:1",
														"nodeType": "YulTypedName",
														"src": "8009:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8015:7:1",
														"nodeType": "YulTypedName",
														"src": "8015:7:1",
														"type": ""
													}
												],
												"src": "7975:168:1"
											},
											{
												"body": {
													"nativeSrc": "8194:171:1",
													"nodeType": "YulBlock",
													"src": "8194:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8225:111:1",
																"nodeType": "YulBlock",
																"src": "8225:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8246:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8253:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8253:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8258:10:1",
																							"nodeType": "YulLiteral",
																							"src": "8258:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8249:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8249:3:1"
																					},
																					"nativeSrc": "8249:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8249:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8239:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8239:6:1"
																			},
																			"nativeSrc": "8239:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8239:31:1"
																		},
																		"nativeSrc": "8239:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8239:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8290:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8290:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8293:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8293:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8283:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8283:6:1"
																			},
																			"nativeSrc": "8283:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8283:15:1"
																		},
																		"nativeSrc": "8283:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8283:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8318:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8318:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8321:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8321:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8311:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8311:6:1"
																			},
																			"nativeSrc": "8311:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8311:15:1"
																		},
																		"nativeSrc": "8311:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8311:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8214:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8214:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8207:6:1"
																},
																"nativeSrc": "8207:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8207:9:1"
															},
															"nativeSrc": "8204:132:1",
															"nodeType": "YulIf",
															"src": "8204:132:1"
														},
														{
															"nativeSrc": "8345:14:1",
															"nodeType": "YulAssignment",
															"src": "8345:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8354:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8354:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8357:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8357:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8350:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8350:3:1"
																},
																"nativeSrc": "8350:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8350:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8345:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8345:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8148:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8179:1:1",
														"nodeType": "YulTypedName",
														"src": "8179:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8182:1:1",
														"nodeType": "YulTypedName",
														"src": "8182:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8188:1:1",
														"nodeType": "YulTypedName",
														"src": "8188:1:1",
														"type": ""
													}
												],
												"src": "8148:217:1"
											},
											{
												"body": {
													"nativeSrc": "8499:119:1",
													"nodeType": "YulBlock",
													"src": "8499:119:1",
													"statements": [
														{
															"nativeSrc": "8509:26:1",
															"nodeType": "YulAssignment",
															"src": "8509:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8521:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8521:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8532:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8532:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8517:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8517:3:1"
																},
																"nativeSrc": "8517:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8517:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8509:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8509:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8551:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8551:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8562:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8562:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:1"
																},
																"nativeSrc": "8544:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8544:25:1"
															},
															"nativeSrc": "8544:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "8544:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8589:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8589:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8600:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8600:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8585:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8585:3:1"
																		},
																		"nativeSrc": "8585:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8585:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8605:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8605:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8578:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8578:6:1"
																},
																"nativeSrc": "8578:34:1",
																"nodeType": "YulFunctionCall",
																"src": "8578:34:1"
															},
															"nativeSrc": "8578:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "8578:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8370:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8460:9:1",
														"nodeType": "YulTypedName",
														"src": "8460:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8471:6:1",
														"nodeType": "YulTypedName",
														"src": "8471:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8479:6:1",
														"nodeType": "YulTypedName",
														"src": "8479:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8490:4:1",
														"nodeType": "YulTypedName",
														"src": "8490:4:1",
														"type": ""
													}
												],
												"src": "8370:248:1"
											},
											{
												"body": {
													"nativeSrc": "8678:325:1",
													"nodeType": "YulBlock",
													"src": "8678:325:1",
													"statements": [
														{
															"nativeSrc": "8688:22:1",
															"nodeType": "YulAssignment",
															"src": "8688:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8702:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8702:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "8705:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8705:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8698:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8698:3:1"
																},
																"nativeSrc": "8698:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8698:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8688:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8688:6:1"
																}
															]
														},
														{
															"nativeSrc": "8719:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8719:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8749:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8749:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8755:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8755:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8745:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8745:3:1"
																},
																"nativeSrc": "8745:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8745:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8723:18:1",
																	"nodeType": "YulTypedName",
																	"src": "8723:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8796:31:1",
																"nodeType": "YulBlock",
																"src": "8796:31:1",
																"statements": [
																	{
																		"nativeSrc": "8798:27:1",
																		"nodeType": "YulAssignment",
																		"src": "8798:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8812:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8812:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8820:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8820:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8808:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8808:3:1"
																			},
																			"nativeSrc": "8808:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8808:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8798:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8798:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8776:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8776:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8769:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8769:6:1"
																},
																"nativeSrc": "8769:26:1",
																"nodeType": "YulFunctionCall",
																"src": "8769:26:1"
															},
															"nativeSrc": "8766:61:1",
															"nodeType": "YulIf",
															"src": "8766:61:1"
														},
														{
															"body": {
																"nativeSrc": "8886:111:1",
																"nodeType": "YulBlock",
																"src": "8886:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8907:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8907:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8914:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8914:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8919:10:1",
																							"nodeType": "YulLiteral",
																							"src": "8919:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8910:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8910:3:1"
																					},
																					"nativeSrc": "8910:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8910:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8900:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8900:6:1"
																			},
																			"nativeSrc": "8900:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8900:31:1"
																		},
																		"nativeSrc": "8900:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8900:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8951:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8951:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8954:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8954:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8944:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8944:6:1"
																			},
																			"nativeSrc": "8944:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8944:15:1"
																		},
																		"nativeSrc": "8944:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8944:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8979:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8979:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8982:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8982:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8972:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8972:6:1"
																			},
																			"nativeSrc": "8972:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8972:15:1"
																		},
																		"nativeSrc": "8972:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8972:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8842:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8842:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8865:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8865:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8873:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8873:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8862:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8862:2:1"
																		},
																		"nativeSrc": "8862:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8862:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8839:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8839:2:1"
																},
																"nativeSrc": "8839:38:1",
																"nodeType": "YulFunctionCall",
																"src": "8839:38:1"
															},
															"nativeSrc": "8836:161:1",
															"nodeType": "YulIf",
															"src": "8836:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8623:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8658:4:1",
														"nodeType": "YulTypedName",
														"src": "8658:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8667:6:1",
														"nodeType": "YulTypedName",
														"src": "8667:6:1",
														"type": ""
													}
												],
												"src": "8623:380:1"
											},
											{
												"body": {
													"nativeSrc": "9182:181:1",
													"nodeType": "YulBlock",
													"src": "9182:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9199:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9199:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9210:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9192:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:1"
																},
																"nativeSrc": "9192:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9192:21:1"
															},
															"nativeSrc": "9192:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9192:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9233:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9233:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9244:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9244:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9229:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9229:3:1"
																		},
																		"nativeSrc": "9229:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9229:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9249:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9249:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9222:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9222:6:1"
																},
																"nativeSrc": "9222:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9222:30:1"
															},
															"nativeSrc": "9222:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9222:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9272:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9272:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9283:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9283:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9268:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:1"
																		},
																		"nativeSrc": "9268:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9268:18:1"
																	},
																	{
																		"hexValue": "4c61756e6368206d6f646520697320616c72656164792064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "9288:33:1",
																		"nodeType": "YulLiteral",
																		"src": "9288:33:1",
																		"type": "",
																		"value": "Launch mode is already disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9261:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:1"
																},
																"nativeSrc": "9261:61:1",
																"nodeType": "YulFunctionCall",
																"src": "9261:61:1"
															},
															"nativeSrc": "9261:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "9261:61:1"
														},
														{
															"nativeSrc": "9331:26:1",
															"nodeType": "YulAssignment",
															"src": "9331:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9343:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9343:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9354:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9354:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9339:3:1"
																},
																"nativeSrc": "9339:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9339:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9331:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9331:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0f002db592b5be6109b5b2d38d5808b6cb4f378d42702b7ab3603714a4191b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9008:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9159:9:1",
														"nodeType": "YulTypedName",
														"src": "9159:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9173:4:1",
														"nodeType": "YulTypedName",
														"src": "9173:4:1",
														"type": ""
													}
												],
												"src": "9008:355:1"
											},
											{
												"body": {
													"nativeSrc": "9400:95:1",
													"nodeType": "YulBlock",
													"src": "9400:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9417:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9424:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9424:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9429:10:1",
																				"nodeType": "YulLiteral",
																				"src": "9429:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9420:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:1"
																		},
																		"nativeSrc": "9420:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9420:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9410:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9410:6:1"
																},
																"nativeSrc": "9410:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9410:31:1"
															},
															"nativeSrc": "9410:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9410:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9457:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9457:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9460:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9460:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9450:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9450:6:1"
																},
																"nativeSrc": "9450:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9450:15:1"
															},
															"nativeSrc": "9450:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9450:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9481:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9481:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9484:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9484:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9474:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9474:6:1"
																},
																"nativeSrc": "9474:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9474:15:1"
															},
															"nativeSrc": "9474:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9474:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9368:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9368:127:1"
											},
											{
												"body": {
													"nativeSrc": "9674:179:1",
													"nodeType": "YulBlock",
													"src": "9674:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9691:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9691:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9702:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9702:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9684:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:1"
																},
																"nativeSrc": "9684:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9684:21:1"
															},
															"nativeSrc": "9684:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9684:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9725:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9725:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9736:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9736:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9721:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9721:3:1"
																		},
																		"nativeSrc": "9721:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9721:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9741:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9741:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9714:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9714:6:1"
																},
																"nativeSrc": "9714:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9714:30:1"
															},
															"nativeSrc": "9714:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9714:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9764:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9764:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9775:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9775:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9760:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9760:3:1"
																		},
																		"nativeSrc": "9760:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9760:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206665652072656365697665722063616e2074726967676572",
																		"kind": "string",
																		"nativeSrc": "9780:31:1",
																		"nodeType": "YulLiteral",
																		"src": "9780:31:1",
																		"type": "",
																		"value": "Only fee receiver can trigger"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9753:6:1"
																},
																"nativeSrc": "9753:59:1",
																"nodeType": "YulFunctionCall",
																"src": "9753:59:1"
															},
															"nativeSrc": "9753:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "9753:59:1"
														},
														{
															"nativeSrc": "9821:26:1",
															"nodeType": "YulAssignment",
															"src": "9821:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9833:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9833:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9844:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9844:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9829:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9829:3:1"
																},
																"nativeSrc": "9829:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9829:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9821:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9821:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_639231b681faef9b093cd01f96e56539124f8d5dd8170e82c6e8233e404e240f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9500:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9651:9:1",
														"nodeType": "YulTypedName",
														"src": "9651:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9665:4:1",
														"nodeType": "YulTypedName",
														"src": "9665:4:1",
														"type": ""
													}
												],
												"src": "9500:353:1"
											},
											{
												"body": {
													"nativeSrc": "10283:492:1",
													"nodeType": "YulBlock",
													"src": "10283:492:1",
													"statements": [
														{
															"nativeSrc": "10293:27:1",
															"nodeType": "YulAssignment",
															"src": "10293:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10305:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10305:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10316:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10316:3:1",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10301:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10301:3:1"
																},
																"nativeSrc": "10301:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10301:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10293:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10293:4:1"
																}
															]
														},
														{
															"nativeSrc": "10329:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10329:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10347:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10347:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10352:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10352:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10343:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10343:3:1"
																		},
																		"nativeSrc": "10343:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10343:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10356:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10356:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10339:3:1"
																},
																"nativeSrc": "10339:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10339:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10333:2:1",
																	"nodeType": "YulTypedName",
																	"src": "10333:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10374:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10374:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10389:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10389:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10397:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10397:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10385:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:3:1"
																		},
																		"nativeSrc": "10385:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10385:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10367:6:1"
																},
																"nativeSrc": "10367:34:1",
																"nodeType": "YulFunctionCall",
																"src": "10367:34:1"
															},
															"nativeSrc": "10367:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "10367:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10421:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10432:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10417:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:1"
																		},
																		"nativeSrc": "10417:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10441:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10441:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10449:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10449:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10437:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10437:3:1"
																		},
																		"nativeSrc": "10437:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10437:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10410:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:1"
																},
																"nativeSrc": "10410:43:1",
																"nodeType": "YulFunctionCall",
																"src": "10410:43:1"
															},
															"nativeSrc": "10410:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "10410:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10473:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10473:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10484:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10484:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10469:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10469:3:1"
																		},
																		"nativeSrc": "10469:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10469:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "10493:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10493:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10501:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10501:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10489:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10489:3:1"
																		},
																		"nativeSrc": "10489:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10489:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10462:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10462:6:1"
																},
																"nativeSrc": "10462:43:1",
																"nodeType": "YulFunctionCall",
																"src": "10462:43:1"
															},
															"nativeSrc": "10462:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "10462:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10525:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10525:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10536:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10536:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10521:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10521:3:1"
																		},
																		"nativeSrc": "10521:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10521:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "10545:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10545:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10553:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10553:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10541:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10541:3:1"
																		},
																		"nativeSrc": "10541:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10541:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10514:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10514:6:1"
																},
																"nativeSrc": "10514:43:1",
																"nodeType": "YulFunctionCall",
																"src": "10514:43:1"
															},
															"nativeSrc": "10514:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "10514:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10577:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10577:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10588:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10588:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10573:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10573:3:1"
																		},
																		"nativeSrc": "10573:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10573:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "10598:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10598:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10606:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10606:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10594:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10594:3:1"
																		},
																		"nativeSrc": "10594:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10594:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10566:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10566:6:1"
																},
																"nativeSrc": "10566:44:1",
																"nodeType": "YulFunctionCall",
																"src": "10566:44:1"
															},
															"nativeSrc": "10566:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "10566:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10630:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10630:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10641:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10641:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10626:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10626:3:1"
																		},
																		"nativeSrc": "10626:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10626:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nativeSrc": "10651:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10651:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10659:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10659:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10647:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10647:3:1"
																		},
																		"nativeSrc": "10647:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10647:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10619:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10619:6:1"
																},
																"nativeSrc": "10619:44:1",
																"nodeType": "YulFunctionCall",
																"src": "10619:44:1"
															},
															"nativeSrc": "10619:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "10619:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10683:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10683:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10694:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10694:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10679:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10679:3:1"
																		},
																		"nativeSrc": "10679:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10679:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value6",
																				"nativeSrc": "10704:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10704:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10712:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10712:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10700:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10700:3:1"
																		},
																		"nativeSrc": "10700:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10700:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10672:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10672:6:1"
																},
																"nativeSrc": "10672:44:1",
																"nodeType": "YulFunctionCall",
																"src": "10672:44:1"
															},
															"nativeSrc": "10672:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "10672:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10736:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10736:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10747:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10747:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10732:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10732:3:1"
																		},
																		"nativeSrc": "10732:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10732:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value7",
																				"nativeSrc": "10757:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10757:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10765:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10765:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10753:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10753:3:1"
																		},
																		"nativeSrc": "10753:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10753:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10725:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:1"
																},
																"nativeSrc": "10725:44:1",
																"nodeType": "YulFunctionCall",
																"src": "10725:44:1"
															},
															"nativeSrc": "10725:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "10725:44:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable__to_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable__fromStack_reversed",
												"nativeSrc": "9858:917:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10196:9:1",
														"nodeType": "YulTypedName",
														"src": "10196:9:1",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "10207:6:1",
														"nodeType": "YulTypedName",
														"src": "10207:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "10215:6:1",
														"nodeType": "YulTypedName",
														"src": "10215:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "10223:6:1",
														"nodeType": "YulTypedName",
														"src": "10223:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10231:6:1",
														"nodeType": "YulTypedName",
														"src": "10231:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10239:6:1",
														"nodeType": "YulTypedName",
														"src": "10239:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10247:6:1",
														"nodeType": "YulTypedName",
														"src": "10247:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10255:6:1",
														"nodeType": "YulTypedName",
														"src": "10255:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10263:6:1",
														"nodeType": "YulTypedName",
														"src": "10263:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10274:4:1",
														"nodeType": "YulTypedName",
														"src": "10274:4:1",
														"type": ""
													}
												],
												"src": "9858:917:1"
											},
											{
												"body": {
													"nativeSrc": "10903:161:1",
													"nodeType": "YulBlock",
													"src": "10903:161:1",
													"statements": [
														{
															"nativeSrc": "10913:26:1",
															"nodeType": "YulAssignment",
															"src": "10913:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10925:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10925:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10936:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10936:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10921:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10921:3:1"
																},
																"nativeSrc": "10921:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10921:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10913:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10913:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10955:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10955:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10970:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10970:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10986:3:1",
																								"nodeType": "YulLiteral",
																								"src": "10986:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10991:1:1",
																								"nodeType": "YulLiteral",
																								"src": "10991:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10982:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10982:3:1"
																						},
																						"nativeSrc": "10982:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10982:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10995:1:1",
																						"nodeType": "YulLiteral",
																						"src": "10995:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10978:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10978:3:1"
																				},
																				"nativeSrc": "10978:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10978:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10966:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10966:3:1"
																		},
																		"nativeSrc": "10966:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10966:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10948:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10948:6:1"
																},
																"nativeSrc": "10948:51:1",
																"nodeType": "YulFunctionCall",
																"src": "10948:51:1"
															},
															"nativeSrc": "10948:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "10948:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11019:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11019:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11030:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11030:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11015:3:1"
																		},
																		"nativeSrc": "11015:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11015:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nativeSrc": "11049:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11049:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11042:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11042:6:1"
																				},
																				"nativeSrc": "11042:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11042:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "11035:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11035:6:1"
																		},
																		"nativeSrc": "11035:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11035:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11008:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11008:6:1"
																},
																"nativeSrc": "11008:50:1",
																"nodeType": "YulFunctionCall",
																"src": "11008:50:1"
															},
															"nativeSrc": "11008:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "11008:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "10780:284:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10864:9:1",
														"nodeType": "YulTypedName",
														"src": "10864:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10875:6:1",
														"nodeType": "YulTypedName",
														"src": "10875:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10883:6:1",
														"nodeType": "YulTypedName",
														"src": "10883:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10894:4:1",
														"nodeType": "YulTypedName",
														"src": "10894:4:1",
														"type": ""
													}
												],
												"src": "10780:284:1"
											},
											{
												"body": {
													"nativeSrc": "11243:180:1",
													"nodeType": "YulBlock",
													"src": "11243:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11260:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11260:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11271:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11271:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11253:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11253:6:1"
																},
																"nativeSrc": "11253:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11253:21:1"
															},
															"nativeSrc": "11253:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11253:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11294:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11294:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11305:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11305:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11290:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11290:3:1"
																		},
																		"nativeSrc": "11290:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11290:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11310:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11310:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11283:6:1"
																},
																"nativeSrc": "11283:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11283:30:1"
															},
															"nativeSrc": "11283:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11283:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11333:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11333:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11344:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11344:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11329:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11329:3:1"
																		},
																		"nativeSrc": "11329:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11329:18:1"
																	},
																	{
																		"hexValue": "4d61782074782063616e74206265206c6f776572207468616e20302e3125",
																		"kind": "string",
																		"nativeSrc": "11349:32:1",
																		"nodeType": "YulLiteral",
																		"src": "11349:32:1",
																		"type": "",
																		"value": "Max tx cant be lower than 0.1%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11322:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11322:6:1"
																},
																"nativeSrc": "11322:60:1",
																"nodeType": "YulFunctionCall",
																"src": "11322:60:1"
															},
															"nativeSrc": "11322:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "11322:60:1"
														},
														{
															"nativeSrc": "11391:26:1",
															"nodeType": "YulAssignment",
															"src": "11391:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11403:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11403:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11414:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11414:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11399:3:1"
																},
																"nativeSrc": "11399:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11399:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11391:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11391:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b48678a7f959c8227f181f7c2c299112f3184ec06c891164e6292e5cbfc1b57__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11069:354:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11220:9:1",
														"nodeType": "YulTypedName",
														"src": "11220:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11234:4:1",
														"nodeType": "YulTypedName",
														"src": "11234:4:1",
														"type": ""
													}
												],
												"src": "11069:354:1"
											},
											{
												"body": {
													"nativeSrc": "11602:171:1",
													"nodeType": "YulBlock",
													"src": "11602:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11619:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11619:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11630:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11630:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11612:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11612:6:1"
																},
																"nativeSrc": "11612:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11612:21:1"
															},
															"nativeSrc": "11612:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11612:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11653:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11653:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11664:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11664:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11649:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11649:3:1"
																		},
																		"nativeSrc": "11649:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11649:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11669:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11669:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11642:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11642:6:1"
																},
																"nativeSrc": "11642:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11642:30:1"
															},
															"nativeSrc": "11642:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11642:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11692:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11692:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11703:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11703:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11688:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11688:3:1"
																		},
																		"nativeSrc": "11688:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11688:18:1"
																	},
																	{
																		"hexValue": "496e76616c696420627579207461782076616c7565",
																		"kind": "string",
																		"nativeSrc": "11708:23:1",
																		"nodeType": "YulLiteral",
																		"src": "11708:23:1",
																		"type": "",
																		"value": "Invalid buy tax value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11681:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11681:6:1"
																},
																"nativeSrc": "11681:51:1",
																"nodeType": "YulFunctionCall",
																"src": "11681:51:1"
															},
															"nativeSrc": "11681:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "11681:51:1"
														},
														{
															"nativeSrc": "11741:26:1",
															"nodeType": "YulAssignment",
															"src": "11741:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11753:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11753:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11764:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11764:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11749:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11749:3:1"
																},
																"nativeSrc": "11749:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11749:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11741:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11741:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0500c267170b18d75be8e7233421038dddb796794b8fcd4e203c684720ad20fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11428:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11579:9:1",
														"nodeType": "YulTypedName",
														"src": "11579:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11593:4:1",
														"nodeType": "YulTypedName",
														"src": "11593:4:1",
														"type": ""
													}
												],
												"src": "11428:345:1"
											},
											{
												"body": {
													"nativeSrc": "11952:172:1",
													"nodeType": "YulBlock",
													"src": "11952:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11969:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11969:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11980:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11980:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11962:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11962:6:1"
																},
																"nativeSrc": "11962:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11962:21:1"
															},
															"nativeSrc": "11962:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11962:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12003:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12003:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12014:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12014:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11999:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11999:3:1"
																		},
																		"nativeSrc": "11999:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11999:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12019:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12019:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11992:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11992:6:1"
																},
																"nativeSrc": "11992:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11992:30:1"
															},
															"nativeSrc": "11992:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11992:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12042:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12042:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12053:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12053:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12038:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12038:3:1"
																		},
																		"nativeSrc": "12038:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12038:18:1"
																	},
																	{
																		"hexValue": "496e76616c69642073656c6c207461782076616c7565",
																		"kind": "string",
																		"nativeSrc": "12058:24:1",
																		"nodeType": "YulLiteral",
																		"src": "12058:24:1",
																		"type": "",
																		"value": "Invalid sell tax value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12031:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12031:6:1"
																},
																"nativeSrc": "12031:52:1",
																"nodeType": "YulFunctionCall",
																"src": "12031:52:1"
															},
															"nativeSrc": "12031:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "12031:52:1"
														},
														{
															"nativeSrc": "12092:26:1",
															"nodeType": "YulAssignment",
															"src": "12092:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12104:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12104:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12115:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12115:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12100:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12100:3:1"
																},
																"nativeSrc": "12100:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12100:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12092:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12092:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6bce9b06e18a1ef35f2a7bc8c816f18e7cbfc76a37f65a98145d42a22d949fc2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11778:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11929:9:1",
														"nodeType": "YulTypedName",
														"src": "11929:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11943:4:1",
														"nodeType": "YulTypedName",
														"src": "11943:4:1",
														"type": ""
													}
												],
												"src": "11778:346:1"
											},
											{
												"body": {
													"nativeSrc": "12303:172:1",
													"nodeType": "YulBlock",
													"src": "12303:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12320:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12320:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12331:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12331:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12313:6:1"
																},
																"nativeSrc": "12313:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12313:21:1"
															},
															"nativeSrc": "12313:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12313:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12354:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12354:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12365:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12365:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12350:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12350:3:1"
																		},
																		"nativeSrc": "12350:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12350:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12370:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12370:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12343:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12343:6:1"
																},
																"nativeSrc": "12343:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12343:30:1"
															},
															"nativeSrc": "12343:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12343:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12393:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12393:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12404:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12404:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12389:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12389:3:1"
																		},
																		"nativeSrc": "12389:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12389:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2074726967676572",
																		"kind": "string",
																		"nativeSrc": "12409:24:1",
																		"nodeType": "YulLiteral",
																		"src": "12409:24:1",
																		"type": "",
																		"value": "Only owner can trigger"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12382:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12382:6:1"
																},
																"nativeSrc": "12382:52:1",
																"nodeType": "YulFunctionCall",
																"src": "12382:52:1"
															},
															"nativeSrc": "12382:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "12382:52:1"
														},
														{
															"nativeSrc": "12443:26:1",
															"nodeType": "YulAssignment",
															"src": "12443:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12455:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12455:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12466:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12466:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12451:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12451:3:1"
																},
																"nativeSrc": "12451:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12451:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12443:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12443:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47002782db0b64c7f6254f162a29b9ff9bff559944c7515beed7c163790fade6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12129:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12280:9:1",
														"nodeType": "YulTypedName",
														"src": "12280:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12294:4:1",
														"nodeType": "YulTypedName",
														"src": "12294:4:1",
														"type": ""
													}
												],
												"src": "12129:346:1"
											},
											{
												"body": {
													"nativeSrc": "12528:77:1",
													"nodeType": "YulBlock",
													"src": "12528:77:1",
													"statements": [
														{
															"nativeSrc": "12538:16:1",
															"nodeType": "YulAssignment",
															"src": "12538:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12549:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12549:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12552:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12552:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12545:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12545:3:1"
																},
																"nativeSrc": "12545:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12545:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12538:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12538:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12577:22:1",
																"nodeType": "YulBlock",
																"src": "12577:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12579:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12579:16:1"
																			},
																			"nativeSrc": "12579:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12579:18:1"
																		},
																		"nativeSrc": "12579:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12579:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12569:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12569:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12572:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12566:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12566:2:1"
																},
																"nativeSrc": "12566:10:1",
																"nodeType": "YulFunctionCall",
																"src": "12566:10:1"
															},
															"nativeSrc": "12563:36:1",
															"nodeType": "YulIf",
															"src": "12563:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12480:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12511:1:1",
														"nodeType": "YulTypedName",
														"src": "12511:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12514:1:1",
														"nodeType": "YulTypedName",
														"src": "12514:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12520:3:1",
														"nodeType": "YulTypedName",
														"src": "12520:3:1",
														"type": ""
													}
												],
												"src": "12480:125:1"
											},
											{
												"body": {
													"nativeSrc": "12784:170:1",
													"nodeType": "YulBlock",
													"src": "12784:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12801:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12801:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12812:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12812:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12794:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12794:6:1"
																},
																"nativeSrc": "12794:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12794:21:1"
															},
															"nativeSrc": "12794:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12794:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12835:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12835:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12846:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12846:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12831:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12831:3:1"
																		},
																		"nativeSrc": "12831:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12831:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12851:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12851:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12824:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12824:6:1"
																},
																"nativeSrc": "12824:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12824:30:1"
															},
															"nativeSrc": "12824:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12824:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12874:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12874:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12885:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12885:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12870:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12870:3:1"
																		},
																		"nativeSrc": "12870:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12870:18:1"
																	},
																	{
																		"hexValue": "537570706c79204c696d69742052656163686564",
																		"kind": "string",
																		"nativeSrc": "12890:22:1",
																		"nodeType": "YulLiteral",
																		"src": "12890:22:1",
																		"type": "",
																		"value": "Supply Limit Reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12863:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12863:6:1"
																},
																"nativeSrc": "12863:50:1",
																"nodeType": "YulFunctionCall",
																"src": "12863:50:1"
															},
															"nativeSrc": "12863:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "12863:50:1"
														},
														{
															"nativeSrc": "12922:26:1",
															"nodeType": "YulAssignment",
															"src": "12922:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12934:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12934:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12945:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12945:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12930:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12930:3:1"
																},
																"nativeSrc": "12930:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12930:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12922:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12922:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c31b5ed3f39966f1d9926012d999ae0f7f34d1ccb73b5ad58b2d8437d73e9a07__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12610:344:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12761:9:1",
														"nodeType": "YulTypedName",
														"src": "12761:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12775:4:1",
														"nodeType": "YulTypedName",
														"src": "12775:4:1",
														"type": ""
													}
												],
												"src": "12610:344:1"
											},
											{
												"body": {
													"nativeSrc": "13040:170:1",
													"nodeType": "YulBlock",
													"src": "13040:170:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "13086:16:1",
																"nodeType": "YulBlock",
																"src": "13086:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13095:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13095:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13098:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13098:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13088:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13088:6:1"
																			},
																			"nativeSrc": "13088:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13088:12:1"
																		},
																		"nativeSrc": "13088:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13088:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13061:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13061:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13070:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13070:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13057:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13057:3:1"
																		},
																		"nativeSrc": "13057:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13057:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13082:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13082:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13053:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13053:3:1"
																},
																"nativeSrc": "13053:32:1",
																"nodeType": "YulFunctionCall",
																"src": "13053:32:1"
															},
															"nativeSrc": "13050:52:1",
															"nodeType": "YulIf",
															"src": "13050:52:1"
														},
														{
															"nativeSrc": "13111:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13111:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13130:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13130:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13124:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13124:5:1"
																},
																"nativeSrc": "13124:16:1",
																"nodeType": "YulFunctionCall",
																"src": "13124:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "13115:5:1",
																	"nodeType": "YulTypedName",
																	"src": "13115:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13174:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13174:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "13149:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "13149:24:1"
																},
																"nativeSrc": "13149:31:1",
																"nodeType": "YulFunctionCall",
																"src": "13149:31:1"
															},
															"nativeSrc": "13149:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "13149:31:1"
														},
														{
															"nativeSrc": "13189:15:1",
															"nodeType": "YulAssignment",
															"src": "13189:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "13199:5:1",
																"nodeType": "YulIdentifier",
																"src": "13199:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13189:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13189:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "12959:251:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13006:9:1",
														"nodeType": "YulTypedName",
														"src": "13006:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13017:7:1",
														"nodeType": "YulTypedName",
														"src": "13017:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13029:6:1",
														"nodeType": "YulTypedName",
														"src": "13029:6:1",
														"type": ""
													}
												],
												"src": "12959:251:1"
											},
											{
												"body": {
													"nativeSrc": "13344:175:1",
													"nodeType": "YulBlock",
													"src": "13344:175:1",
													"statements": [
														{
															"nativeSrc": "13354:26:1",
															"nodeType": "YulAssignment",
															"src": "13354:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13366:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13366:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13377:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13377:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13362:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13362:3:1"
																},
																"nativeSrc": "13362:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13362:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13354:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13354:4:1"
																}
															]
														},
														{
															"nativeSrc": "13389:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13389:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13407:3:1",
																				"nodeType": "YulLiteral",
																				"src": "13407:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13412:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13412:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13403:3:1"
																		},
																		"nativeSrc": "13403:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13403:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13416:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13416:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13399:3:1"
																},
																"nativeSrc": "13399:19:1",
																"nodeType": "YulFunctionCall",
																"src": "13399:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13393:2:1",
																	"nodeType": "YulTypedName",
																	"src": "13393:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13434:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13434:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13449:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13449:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13457:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "13457:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13445:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13445:3:1"
																		},
																		"nativeSrc": "13445:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13445:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13427:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13427:6:1"
																},
																"nativeSrc": "13427:34:1",
																"nodeType": "YulFunctionCall",
																"src": "13427:34:1"
															},
															"nativeSrc": "13427:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "13427:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13481:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13481:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13492:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13492:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13477:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13477:3:1"
																		},
																		"nativeSrc": "13477:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13477:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "13501:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13501:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13509:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "13509:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13497:3:1"
																		},
																		"nativeSrc": "13497:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13497:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13470:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13470:6:1"
																},
																"nativeSrc": "13470:43:1",
																"nodeType": "YulFunctionCall",
																"src": "13470:43:1"
															},
															"nativeSrc": "13470:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "13470:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "13215:304:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13305:9:1",
														"nodeType": "YulTypedName",
														"src": "13305:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13316:6:1",
														"nodeType": "YulTypedName",
														"src": "13316:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13324:6:1",
														"nodeType": "YulTypedName",
														"src": "13324:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13335:4:1",
														"nodeType": "YulTypedName",
														"src": "13335:4:1",
														"type": ""
													}
												],
												"src": "13215:304:1"
											},
											{
												"body": {
													"nativeSrc": "13632:101:1",
													"nodeType": "YulBlock",
													"src": "13632:101:1",
													"statements": [
														{
															"nativeSrc": "13642:26:1",
															"nodeType": "YulAssignment",
															"src": "13642:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13654:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13654:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13665:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13665:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13650:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13650:3:1"
																},
																"nativeSrc": "13650:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13650:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13642:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13642:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13684:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13684:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13699:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13699:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13707:18:1",
																				"nodeType": "YulLiteral",
																				"src": "13707:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13695:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13695:3:1"
																		},
																		"nativeSrc": "13695:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13695:31:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13677:6:1"
																},
																"nativeSrc": "13677:50:1",
																"nodeType": "YulFunctionCall",
																"src": "13677:50:1"
															},
															"nativeSrc": "13677:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "13677:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "13524:209:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13601:9:1",
														"nodeType": "YulTypedName",
														"src": "13601:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13612:6:1",
														"nodeType": "YulTypedName",
														"src": "13612:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13623:4:1",
														"nodeType": "YulTypedName",
														"src": "13623:4:1",
														"type": ""
													}
												],
												"src": "13524:209:1"
											},
											{
												"body": {
													"nativeSrc": "13912:224:1",
													"nodeType": "YulBlock",
													"src": "13912:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13929:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13929:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13940:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13940:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13922:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13922:6:1"
																},
																"nativeSrc": "13922:21:1",
																"nodeType": "YulFunctionCall",
																"src": "13922:21:1"
															},
															"nativeSrc": "13922:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "13922:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13963:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13963:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13974:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13974:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13959:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13959:3:1"
																		},
																		"nativeSrc": "13959:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13959:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13979:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13979:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13952:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13952:6:1"
																},
																"nativeSrc": "13952:30:1",
																"nodeType": "YulFunctionCall",
																"src": "13952:30:1"
															},
															"nativeSrc": "13952:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "13952:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14002:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14002:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14013:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14013:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13998:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13998:3:1"
																		},
																		"nativeSrc": "13998:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13998:18:1"
																	},
																	{
																		"hexValue": "4d61782077616c6c65742063616e74206265206c6f776572207468616e20302e",
																		"kind": "string",
																		"nativeSrc": "14018:34:1",
																		"nodeType": "YulLiteral",
																		"src": "14018:34:1",
																		"type": "",
																		"value": "Max wallet cant be lower than 0."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13991:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13991:6:1"
																},
																"nativeSrc": "13991:62:1",
																"nodeType": "YulFunctionCall",
																"src": "13991:62:1"
															},
															"nativeSrc": "13991:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "13991:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14073:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14073:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14084:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14084:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14069:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14069:3:1"
																		},
																		"nativeSrc": "14069:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14069:18:1"
																	},
																	{
																		"hexValue": "3125",
																		"kind": "string",
																		"nativeSrc": "14089:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14089:4:1",
																		"type": "",
																		"value": "1%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14062:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14062:6:1"
																},
																"nativeSrc": "14062:32:1",
																"nodeType": "YulFunctionCall",
																"src": "14062:32:1"
															},
															"nativeSrc": "14062:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "14062:32:1"
														},
														{
															"nativeSrc": "14103:27:1",
															"nodeType": "YulAssignment",
															"src": "14103:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14115:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14115:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14126:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14126:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14111:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14111:3:1"
																},
																"nativeSrc": "14111:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14111:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14103:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14103:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aabbfe6abbf40fbd028cb9073ee8b15b6e2d99ec95313010eb7f235b1f2fe0a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13738:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13889:9:1",
														"nodeType": "YulTypedName",
														"src": "13889:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13903:4:1",
														"nodeType": "YulTypedName",
														"src": "13903:4:1",
														"type": ""
													}
												],
												"src": "13738:398:1"
											},
											{
												"body": {
													"nativeSrc": "14315:173:1",
													"nodeType": "YulBlock",
													"src": "14315:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14325:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14325:6:1"
																},
																"nativeSrc": "14325:21:1",
																"nodeType": "YulFunctionCall",
																"src": "14325:21:1"
															},
															"nativeSrc": "14325:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "14325:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14366:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14366:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14377:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14377:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14362:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14362:3:1"
																		},
																		"nativeSrc": "14362:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14362:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14382:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14382:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14355:6:1"
																},
																"nativeSrc": "14355:30:1",
																"nodeType": "YulFunctionCall",
																"src": "14355:30:1"
															},
															"nativeSrc": "14355:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "14355:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14405:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14405:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14416:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14416:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14401:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14401:3:1"
																		},
																		"nativeSrc": "14401:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14401:18:1"
																	},
																	{
																		"hexValue": "74726164696e6720697320616c7265616479206f70656e",
																		"kind": "string",
																		"nativeSrc": "14421:25:1",
																		"nodeType": "YulLiteral",
																		"src": "14421:25:1",
																		"type": "",
																		"value": "trading is already open"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14394:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14394:6:1"
																},
																"nativeSrc": "14394:53:1",
																"nodeType": "YulFunctionCall",
																"src": "14394:53:1"
															},
															"nativeSrc": "14394:53:1",
															"nodeType": "YulExpressionStatement",
															"src": "14394:53:1"
														},
														{
															"nativeSrc": "14456:26:1",
															"nodeType": "YulAssignment",
															"src": "14456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14468:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14468:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14479:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14479:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14464:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14464:3:1"
																},
																"nativeSrc": "14464:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14464:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14456:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14456:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14141:347:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14292:9:1",
														"nodeType": "YulTypedName",
														"src": "14292:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14306:4:1",
														"nodeType": "YulTypedName",
														"src": "14306:4:1",
														"type": ""
													}
												],
												"src": "14141:347:1"
											},
											{
												"body": {
													"nativeSrc": "14650:188:1",
													"nodeType": "YulBlock",
													"src": "14650:188:1",
													"statements": [
														{
															"nativeSrc": "14660:26:1",
															"nodeType": "YulAssignment",
															"src": "14660:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14672:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14672:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14683:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14683:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14668:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14668:3:1"
																},
																"nativeSrc": "14668:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14668:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14660:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14660:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14702:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14702:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14717:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "14717:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14733:3:1",
																								"nodeType": "YulLiteral",
																								"src": "14733:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14738:1:1",
																								"nodeType": "YulLiteral",
																								"src": "14738:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14729:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "14729:3:1"
																						},
																						"nativeSrc": "14729:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "14729:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14742:1:1",
																						"nodeType": "YulLiteral",
																						"src": "14742:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14725:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "14725:3:1"
																				},
																				"nativeSrc": "14725:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "14725:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14713:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14713:3:1"
																		},
																		"nativeSrc": "14713:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14713:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14695:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14695:6:1"
																},
																"nativeSrc": "14695:51:1",
																"nodeType": "YulFunctionCall",
																"src": "14695:51:1"
															},
															"nativeSrc": "14695:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "14695:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14766:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14766:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14777:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14777:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14762:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:1"
																		},
																		"nativeSrc": "14762:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14762:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14782:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14782:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14755:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14755:6:1"
																},
																"nativeSrc": "14755:34:1",
																"nodeType": "YulFunctionCall",
																"src": "14755:34:1"
															},
															"nativeSrc": "14755:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "14755:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14809:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14809:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14820:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14820:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14805:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14805:3:1"
																		},
																		"nativeSrc": "14805:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14805:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "14825:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14825:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14798:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14798:6:1"
																},
																"nativeSrc": "14798:34:1",
																"nodeType": "YulFunctionCall",
																"src": "14798:34:1"
															},
															"nativeSrc": "14798:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "14798:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14493:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14603:9:1",
														"nodeType": "YulTypedName",
														"src": "14603:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14614:6:1",
														"nodeType": "YulTypedName",
														"src": "14614:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14622:6:1",
														"nodeType": "YulTypedName",
														"src": "14622:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14630:6:1",
														"nodeType": "YulTypedName",
														"src": "14630:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14641:4:1",
														"nodeType": "YulTypedName",
														"src": "14641:4:1",
														"type": ""
													}
												],
												"src": "14493:345:1"
											},
											{
												"body": {
													"nativeSrc": "15017:227:1",
													"nodeType": "YulBlock",
													"src": "15017:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15034:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15034:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15045:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15045:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15027:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15027:6:1"
																},
																"nativeSrc": "15027:21:1",
																"nodeType": "YulFunctionCall",
																"src": "15027:21:1"
															},
															"nativeSrc": "15027:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "15027:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15068:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15068:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15079:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15079:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15064:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15064:3:1"
																		},
																		"nativeSrc": "15064:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15064:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15084:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15084:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15057:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15057:6:1"
																},
																"nativeSrc": "15057:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15057:30:1"
															},
															"nativeSrc": "15057:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "15057:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15107:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15107:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15118:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15118:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15103:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15103:3:1"
																		},
																		"nativeSrc": "15103:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15103:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "15123:34:1",
																		"nodeType": "YulLiteral",
																		"src": "15123:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15096:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15096:6:1"
																},
																"nativeSrc": "15096:62:1",
																"nodeType": "YulFunctionCall",
																"src": "15096:62:1"
															},
															"nativeSrc": "15096:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "15096:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15178:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15178:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15189:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15189:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15174:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15174:3:1"
																		},
																		"nativeSrc": "15174:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15174:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "15194:7:1",
																		"nodeType": "YulLiteral",
																		"src": "15194:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15167:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15167:6:1"
																},
																"nativeSrc": "15167:35:1",
																"nodeType": "YulFunctionCall",
																"src": "15167:35:1"
															},
															"nativeSrc": "15167:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "15167:35:1"
														},
														{
															"nativeSrc": "15211:27:1",
															"nodeType": "YulAssignment",
															"src": "15211:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15223:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15223:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15234:3:1",
																		"nodeType": "YulLiteral",
																		"src": "15234:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15219:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15219:3:1"
																},
																"nativeSrc": "15219:19:1",
																"nodeType": "YulFunctionCall",
																"src": "15219:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15211:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15211:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14843:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14994:9:1",
														"nodeType": "YulTypedName",
														"src": "14994:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15008:4:1",
														"nodeType": "YulTypedName",
														"src": "15008:4:1",
														"type": ""
													}
												],
												"src": "14843:401:1"
											},
											{
												"body": {
													"nativeSrc": "15423:225:1",
													"nodeType": "YulBlock",
													"src": "15423:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15440:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15440:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15451:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15451:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15433:6:1"
																},
																"nativeSrc": "15433:21:1",
																"nodeType": "YulFunctionCall",
																"src": "15433:21:1"
															},
															"nativeSrc": "15433:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "15433:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15474:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15474:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15485:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15485:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15470:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15470:3:1"
																		},
																		"nativeSrc": "15470:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15470:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15490:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15490:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15463:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15463:6:1"
																},
																"nativeSrc": "15463:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15463:30:1"
															},
															"nativeSrc": "15463:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "15463:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15513:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15513:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15524:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15509:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15509:3:1"
																		},
																		"nativeSrc": "15509:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15509:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "15529:34:1",
																		"nodeType": "YulLiteral",
																		"src": "15529:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15502:6:1"
																},
																"nativeSrc": "15502:62:1",
																"nodeType": "YulFunctionCall",
																"src": "15502:62:1"
															},
															"nativeSrc": "15502:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "15502:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15584:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15595:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15595:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15580:3:1"
																		},
																		"nativeSrc": "15580:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15580:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "15600:5:1",
																		"nodeType": "YulLiteral",
																		"src": "15600:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15573:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15573:6:1"
																},
																"nativeSrc": "15573:33:1",
																"nodeType": "YulFunctionCall",
																"src": "15573:33:1"
															},
															"nativeSrc": "15573:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "15573:33:1"
														},
														{
															"nativeSrc": "15615:27:1",
															"nodeType": "YulAssignment",
															"src": "15615:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15627:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15627:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15638:3:1",
																		"nodeType": "YulLiteral",
																		"src": "15638:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15623:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15623:3:1"
																},
																"nativeSrc": "15623:19:1",
																"nodeType": "YulFunctionCall",
																"src": "15623:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15615:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15615:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15249:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15400:9:1",
														"nodeType": "YulTypedName",
														"src": "15400:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15414:4:1",
														"nodeType": "YulTypedName",
														"src": "15414:4:1",
														"type": ""
													}
												],
												"src": "15249:399:1"
											},
											{
												"body": {
													"nativeSrc": "15827:231:1",
													"nodeType": "YulBlock",
													"src": "15827:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15844:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15844:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15855:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15855:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15837:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15837:6:1"
																},
																"nativeSrc": "15837:21:1",
																"nodeType": "YulFunctionCall",
																"src": "15837:21:1"
															},
															"nativeSrc": "15837:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "15837:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15878:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15878:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15889:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15889:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15874:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15874:3:1"
																		},
																		"nativeSrc": "15874:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15874:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15894:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15894:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15867:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15867:6:1"
																},
																"nativeSrc": "15867:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15867:30:1"
															},
															"nativeSrc": "15867:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "15867:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15917:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15917:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15928:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15928:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15913:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15913:3:1"
																		},
																		"nativeSrc": "15913:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15913:18:1"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nativeSrc": "15933:34:1",
																		"nodeType": "YulLiteral",
																		"src": "15933:34:1",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15906:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15906:6:1"
																},
																"nativeSrc": "15906:62:1",
																"nodeType": "YulFunctionCall",
																"src": "15906:62:1"
															},
															"nativeSrc": "15906:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "15906:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15988:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15988:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15999:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15999:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15984:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15984:3:1"
																		},
																		"nativeSrc": "15984:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15984:18:1"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "16004:11:1",
																		"nodeType": "YulLiteral",
																		"src": "16004:11:1",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15977:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15977:6:1"
																},
																"nativeSrc": "15977:39:1",
																"nodeType": "YulFunctionCall",
																"src": "15977:39:1"
															},
															"nativeSrc": "15977:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "15977:39:1"
														},
														{
															"nativeSrc": "16025:27:1",
															"nodeType": "YulAssignment",
															"src": "16025:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16048:3:1",
																		"nodeType": "YulLiteral",
																		"src": "16048:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16033:3:1"
																},
																"nativeSrc": "16033:19:1",
																"nodeType": "YulFunctionCall",
																"src": "16033:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16025:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15653:405:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15804:9:1",
														"nodeType": "YulTypedName",
														"src": "15804:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15818:4:1",
														"nodeType": "YulTypedName",
														"src": "15818:4:1",
														"type": ""
													}
												],
												"src": "15653:405:1"
											},
											{
												"body": {
													"nativeSrc": "16237:110:1",
													"nodeType": "YulBlock",
													"src": "16237:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16254:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16254:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16265:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16265:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16247:6:1"
																},
																"nativeSrc": "16247:21:1",
																"nodeType": "YulFunctionCall",
																"src": "16247:21:1"
															},
															"nativeSrc": "16247:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "16247:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16288:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16288:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16299:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16299:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16284:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16284:3:1"
																		},
																		"nativeSrc": "16284:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16284:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16304:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16304:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16277:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16277:6:1"
																},
																"nativeSrc": "16277:29:1",
																"nodeType": "YulFunctionCall",
																"src": "16277:29:1"
															},
															"nativeSrc": "16277:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "16277:29:1"
														},
														{
															"nativeSrc": "16315:26:1",
															"nodeType": "YulAssignment",
															"src": "16315:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16327:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16327:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16338:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16338:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16323:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16323:3:1"
																},
																"nativeSrc": "16323:18:1",
																"nodeType": "YulFunctionCall",
																"src": "16323:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16315:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16315:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16063:284:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16214:9:1",
														"nodeType": "YulTypedName",
														"src": "16214:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16228:4:1",
														"nodeType": "YulTypedName",
														"src": "16228:4:1",
														"type": ""
													}
												],
												"src": "16063:284:1"
											},
											{
												"body": {
													"nativeSrc": "16526:177:1",
													"nodeType": "YulBlock",
													"src": "16526:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16543:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16543:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16554:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16554:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16536:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16536:6:1"
																},
																"nativeSrc": "16536:21:1",
																"nodeType": "YulFunctionCall",
																"src": "16536:21:1"
															},
															"nativeSrc": "16536:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "16536:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16577:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16577:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16588:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16588:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16573:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16573:3:1"
																		},
																		"nativeSrc": "16573:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16573:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16593:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16593:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16566:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16566:6:1"
																},
																"nativeSrc": "16566:30:1",
																"nodeType": "YulFunctionCall",
																"src": "16566:30:1"
															},
															"nativeSrc": "16566:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "16566:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16616:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16616:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16627:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16627:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16612:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16612:3:1"
																		},
																		"nativeSrc": "16612:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16612:18:1"
																	},
																	{
																		"hexValue": "4578636565647320746865205f7478416d6f756e744c696d69742e",
																		"kind": "string",
																		"nativeSrc": "16632:29:1",
																		"nodeType": "YulLiteral",
																		"src": "16632:29:1",
																		"type": "",
																		"value": "Exceeds the _txAmountLimit."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16605:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16605:6:1"
																},
																"nativeSrc": "16605:57:1",
																"nodeType": "YulFunctionCall",
																"src": "16605:57:1"
															},
															"nativeSrc": "16605:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "16605:57:1"
														},
														{
															"nativeSrc": "16671:26:1",
															"nodeType": "YulAssignment",
															"src": "16671:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16683:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16683:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16694:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16694:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16679:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16679:3:1"
																},
																"nativeSrc": "16679:18:1",
																"nodeType": "YulFunctionCall",
																"src": "16679:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16671:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16671:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc168bd2771777b2cdce369aa9bc412bad2d5af46ed939ba6a577a72c461f3ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16352:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16503:9:1",
														"nodeType": "YulTypedName",
														"src": "16503:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16517:4:1",
														"nodeType": "YulTypedName",
														"src": "16517:4:1",
														"type": ""
													}
												],
												"src": "16352:351:1"
											},
											{
												"body": {
													"nativeSrc": "16882:176:1",
													"nodeType": "YulBlock",
													"src": "16882:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16899:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16899:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16910:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16910:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16892:6:1"
																},
																"nativeSrc": "16892:21:1",
																"nodeType": "YulFunctionCall",
																"src": "16892:21:1"
															},
															"nativeSrc": "16892:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "16892:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16933:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16933:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16944:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16944:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16929:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16929:3:1"
																		},
																		"nativeSrc": "16929:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16929:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16949:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16922:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16922:6:1"
																},
																"nativeSrc": "16922:30:1",
																"nodeType": "YulFunctionCall",
																"src": "16922:30:1"
															},
															"nativeSrc": "16922:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "16922:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16972:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16972:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16983:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16983:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16968:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16968:3:1"
																		},
																		"nativeSrc": "16968:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16968:18:1"
																	},
																	{
																		"hexValue": "4578636565647320746865206d617857616c6c657453697a652e",
																		"kind": "string",
																		"nativeSrc": "16988:28:1",
																		"nodeType": "YulLiteral",
																		"src": "16988:28:1",
																		"type": "",
																		"value": "Exceeds the maxWalletSize."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16961:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16961:6:1"
																},
																"nativeSrc": "16961:56:1",
																"nodeType": "YulFunctionCall",
																"src": "16961:56:1"
															},
															"nativeSrc": "16961:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "16961:56:1"
														},
														{
															"nativeSrc": "17026:26:1",
															"nodeType": "YulAssignment",
															"src": "17026:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17038:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "17038:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17049:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17049:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17034:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17034:3:1"
																},
																"nativeSrc": "17034:18:1",
																"nodeType": "YulFunctionCall",
																"src": "17034:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17026:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17026:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c563e32fd325dd6083434381ad7ae564e6c211c512ec890aa906ea3486fb26c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16708:350:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16859:9:1",
														"nodeType": "YulTypedName",
														"src": "16859:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16873:4:1",
														"nodeType": "YulTypedName",
														"src": "16873:4:1",
														"type": ""
													}
												],
												"src": "16708:350:1"
											},
											{
												"body": {
													"nativeSrc": "17110:88:1",
													"nodeType": "YulBlock",
													"src": "17110:88:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "17141:22:1",
																"nodeType": "YulBlock",
																"src": "17141:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17143:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "17143:16:1"
																			},
																			"nativeSrc": "17143:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17143:18:1"
																		},
																		"nativeSrc": "17143:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17143:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17126:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17126:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17137:1:1",
																				"nodeType": "YulLiteral",
																				"src": "17137:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "17133:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17133:3:1"
																		},
																		"nativeSrc": "17133:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17133:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17123:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "17123:2:1"
																},
																"nativeSrc": "17123:17:1",
																"nodeType": "YulFunctionCall",
																"src": "17123:17:1"
															},
															"nativeSrc": "17120:43:1",
															"nodeType": "YulIf",
															"src": "17120:43:1"
														},
														{
															"nativeSrc": "17172:20:1",
															"nodeType": "YulAssignment",
															"src": "17172:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17183:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17183:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17190:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17190:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17179:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17179:3:1"
																},
																"nativeSrc": "17179:13:1",
																"nodeType": "YulFunctionCall",
																"src": "17179:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17172:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17172:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "17063:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17092:5:1",
														"nodeType": "YulTypedName",
														"src": "17092:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17102:3:1",
														"nodeType": "YulTypedName",
														"src": "17102:3:1",
														"type": ""
													}
												],
												"src": "17063:135:1"
											},
											{
												"body": {
													"nativeSrc": "17252:79:1",
													"nodeType": "YulBlock",
													"src": "17252:79:1",
													"statements": [
														{
															"nativeSrc": "17262:17:1",
															"nodeType": "YulAssignment",
															"src": "17262:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17274:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17274:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17277:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17277:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17270:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17270:3:1"
																},
																"nativeSrc": "17270:9:1",
																"nodeType": "YulFunctionCall",
																"src": "17270:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "17262:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17262:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17303:22:1",
																"nodeType": "YulBlock",
																"src": "17303:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17305:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "17305:16:1"
																			},
																			"nativeSrc": "17305:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17305:18:1"
																		},
																		"nativeSrc": "17305:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17305:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17294:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17294:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "17300:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17300:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17291:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "17291:2:1"
																},
																"nativeSrc": "17291:11:1",
																"nodeType": "YulFunctionCall",
																"src": "17291:11:1"
															},
															"nativeSrc": "17288:37:1",
															"nodeType": "YulIf",
															"src": "17288:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17203:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17234:1:1",
														"nodeType": "YulTypedName",
														"src": "17234:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17237:1:1",
														"nodeType": "YulTypedName",
														"src": "17237:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17243:4:1",
														"nodeType": "YulTypedName",
														"src": "17243:4:1",
														"type": ""
													}
												],
												"src": "17203:128:1"
											},
											{
												"body": {
													"nativeSrc": "17417:103:1",
													"nodeType": "YulBlock",
													"src": "17417:103:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "17463:16:1",
																"nodeType": "YulBlock",
																"src": "17463:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17472:1:1",
																					"nodeType": "YulLiteral",
																					"src": "17472:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17475:1:1",
																					"nodeType": "YulLiteral",
																					"src": "17475:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17465:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "17465:6:1"
																			},
																			"nativeSrc": "17465:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17465:12:1"
																		},
																		"nativeSrc": "17465:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17465:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17438:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17438:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17447:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17447:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17434:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17434:3:1"
																		},
																		"nativeSrc": "17434:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17434:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17459:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17459:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17430:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17430:3:1"
																},
																"nativeSrc": "17430:32:1",
																"nodeType": "YulFunctionCall",
																"src": "17430:32:1"
															},
															"nativeSrc": "17427:52:1",
															"nodeType": "YulIf",
															"src": "17427:52:1"
														},
														{
															"nativeSrc": "17488:26:1",
															"nodeType": "YulAssignment",
															"src": "17488:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17504:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "17504:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17498:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "17498:5:1"
																},
																"nativeSrc": "17498:16:1",
																"nodeType": "YulFunctionCall",
																"src": "17498:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "17488:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17488:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "17336:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17383:9:1",
														"nodeType": "YulTypedName",
														"src": "17383:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17394:7:1",
														"nodeType": "YulTypedName",
														"src": "17394:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17406:6:1",
														"nodeType": "YulTypedName",
														"src": "17406:6:1",
														"type": ""
													}
												],
												"src": "17336:184:1"
											},
											{
												"body": {
													"nativeSrc": "17796:709:1",
													"nodeType": "YulBlock",
													"src": "17796:709:1",
													"statements": [
														{
															"nativeSrc": "17806:33:1",
															"nodeType": "YulVariableDeclaration",
															"src": "17806:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17824:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "17824:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17835:3:1",
																		"nodeType": "YulLiteral",
																		"src": "17835:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17820:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17820:3:1"
																},
																"nativeSrc": "17820:19:1",
																"nodeType": "YulFunctionCall",
																"src": "17820:19:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "17810:6:1",
																	"nodeType": "YulTypedName",
																	"src": "17810:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17855:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "17855:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "17866:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17866:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17848:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17848:6:1"
																},
																"nativeSrc": "17848:25:1",
																"nodeType": "YulFunctionCall",
																"src": "17848:25:1"
															},
															"nativeSrc": "17848:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "17848:25:1"
														},
														{
															"nativeSrc": "17882:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "17882:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "17892:2:1",
																"nodeType": "YulLiteral",
																"src": "17892:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "17886:2:1",
																	"nodeType": "YulTypedName",
																	"src": "17886:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17914:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17914:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17925:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17925:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17910:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17910:3:1"
																		},
																		"nativeSrc": "17910:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17910:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17930:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17930:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17903:6:1"
																},
																"nativeSrc": "17903:34:1",
																"nodeType": "YulFunctionCall",
																"src": "17903:34:1"
															},
															"nativeSrc": "17903:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "17903:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17957:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17957:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17968:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17968:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17953:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17953:3:1"
																		},
																		"nativeSrc": "17953:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17953:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17973:3:1",
																		"nodeType": "YulLiteral",
																		"src": "17973:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17946:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17946:6:1"
																},
																"nativeSrc": "17946:31:1",
																"nodeType": "YulFunctionCall",
																"src": "17946:31:1"
															},
															"nativeSrc": "17946:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "17946:31:1"
														},
														{
															"nativeSrc": "17986:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "17986:17:1",
															"value": {
																"name": "tail_1",
																"nativeSrc": "17997:6:1",
																"nodeType": "YulIdentifier",
																"src": "17997:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "17990:3:1",
																	"nodeType": "YulTypedName",
																	"src": "17990:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18012:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18012:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18032:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18032:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18026:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "18026:5:1"
																},
																"nativeSrc": "18026:13:1",
																"nodeType": "YulFunctionCall",
																"src": "18026:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18016:6:1",
																	"nodeType": "YulTypedName",
																	"src": "18016:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "18055:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18055:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18063:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18063:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18048:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18048:6:1"
																},
																"nativeSrc": "18048:22:1",
																"nodeType": "YulFunctionCall",
																"src": "18048:22:1"
															},
															"nativeSrc": "18048:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "18048:22:1"
														},
														{
															"nativeSrc": "18079:26:1",
															"nodeType": "YulAssignment",
															"src": "18079:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18090:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "18090:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18101:3:1",
																		"nodeType": "YulLiteral",
																		"src": "18101:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18086:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18086:3:1"
																},
																"nativeSrc": "18086:19:1",
																"nodeType": "YulFunctionCall",
																"src": "18086:19:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18079:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18079:3:1"
																}
															]
														},
														{
															"nativeSrc": "18114:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18114:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18132:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18132:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18140:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18140:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18128:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18128:3:1"
																},
																"nativeSrc": "18128:15:1",
																"nodeType": "YulFunctionCall",
																"src": "18128:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "18118:6:1",
																	"nodeType": "YulTypedName",
																	"src": "18118:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18152:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18152:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "18161:1:1",
																"nodeType": "YulLiteral",
																"src": "18161:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "18156:1:1",
																	"nodeType": "YulTypedName",
																	"src": "18156:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18220:146:1",
																"nodeType": "YulBlock",
																"src": "18220:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "18241:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18241:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "18256:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "18256:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "18250:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "18250:5:1"
																							},
																							"nativeSrc": "18250:13:1",
																							"nodeType": "YulFunctionCall",
																							"src": "18250:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "18273:3:1",
																											"nodeType": "YulLiteral",
																											"src": "18273:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18278:1:1",
																											"nodeType": "YulLiteral",
																											"src": "18278:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "18269:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "18269:3:1"
																									},
																									"nativeSrc": "18269:11:1",
																									"nodeType": "YulFunctionCall",
																									"src": "18269:11:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18282:1:1",
																									"nodeType": "YulLiteral",
																									"src": "18282:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "18265:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "18265:3:1"
																							},
																							"nativeSrc": "18265:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "18265:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "18246:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "18246:3:1"
																					},
																					"nativeSrc": "18246:39:1",
																					"nodeType": "YulFunctionCall",
																					"src": "18246:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "18234:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "18234:6:1"
																			},
																			"nativeSrc": "18234:52:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18234:52:1"
																		},
																		"nativeSrc": "18234:52:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "18234:52:1"
																	},
																	{
																		"nativeSrc": "18299:19:1",
																		"nodeType": "YulAssignment",
																		"src": "18299:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "18310:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18310:3:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "18315:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "18315:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18306:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "18306:3:1"
																			},
																			"nativeSrc": "18306:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18306:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "18299:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "18299:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18331:25:1",
																		"nodeType": "YulAssignment",
																		"src": "18331:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "18345:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "18345:6:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "18353:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "18353:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18341:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "18341:3:1"
																			},
																			"nativeSrc": "18341:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18341:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "18331:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "18331:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "18182:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "18182:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18185:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18185:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18179:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "18179:2:1"
																},
																"nativeSrc": "18179:13:1",
																"nodeType": "YulFunctionCall",
																"src": "18179:13:1"
															},
															"nativeSrc": "18171:195:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18193:18:1",
																"nodeType": "YulBlock",
																"src": "18193:18:1",
																"statements": [
																	{
																		"nativeSrc": "18195:14:1",
																		"nodeType": "YulAssignment",
																		"src": "18195:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "18204:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "18204:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18207:1:1",
																					"nodeType": "YulLiteral",
																					"src": "18207:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18200:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "18200:3:1"
																			},
																			"nativeSrc": "18200:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18200:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "18195:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "18195:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18175:3:1",
																"nodeType": "YulBlock",
																"src": "18175:3:1",
																"statements": []
															},
															"src": "18171:195:1"
														},
														{
															"nativeSrc": "18375:11:1",
															"nodeType": "YulAssignment",
															"src": "18375:11:1",
															"value": {
																"name": "pos",
																"nativeSrc": "18383:3:1",
																"nodeType": "YulIdentifier",
																"src": "18383:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18375:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18375:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18406:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18406:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18417:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18417:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18402:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18402:3:1"
																		},
																		"nativeSrc": "18402:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18402:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "18426:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "18426:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18442:3:1",
																								"nodeType": "YulLiteral",
																								"src": "18442:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "18447:1:1",
																								"nodeType": "YulLiteral",
																								"src": "18447:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "18438:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "18438:3:1"
																						},
																						"nativeSrc": "18438:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "18438:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18451:1:1",
																						"nodeType": "YulLiteral",
																						"src": "18451:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "18434:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18434:3:1"
																				},
																				"nativeSrc": "18434:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "18434:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18422:3:1"
																		},
																		"nativeSrc": "18422:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18422:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18395:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18395:6:1"
																},
																"nativeSrc": "18395:60:1",
																"nodeType": "YulFunctionCall",
																"src": "18395:60:1"
															},
															"nativeSrc": "18395:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "18395:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18475:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18475:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18486:3:1",
																				"nodeType": "YulLiteral",
																				"src": "18486:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18471:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18471:3:1"
																		},
																		"nativeSrc": "18471:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18471:19:1"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "18492:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18492:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18464:6:1"
																},
																"nativeSrc": "18464:35:1",
																"nodeType": "YulFunctionCall",
																"src": "18464:35:1"
															},
															"nativeSrc": "18464:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "18464:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17525:980:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17733:9:1",
														"nodeType": "YulTypedName",
														"src": "17733:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "17744:6:1",
														"nodeType": "YulTypedName",
														"src": "17744:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17752:6:1",
														"nodeType": "YulTypedName",
														"src": "17752:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17760:6:1",
														"nodeType": "YulTypedName",
														"src": "17760:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17768:6:1",
														"nodeType": "YulTypedName",
														"src": "17768:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17776:6:1",
														"nodeType": "YulTypedName",
														"src": "17776:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17787:4:1",
														"nodeType": "YulTypedName",
														"src": "17787:4:1",
														"type": ""
													}
												],
												"src": "17525:980:1"
											},
											{
												"body": {
													"nativeSrc": "18701:14:1",
													"nodeType": "YulBlock",
													"src": "18701:14:1",
													"statements": [
														{
															"nativeSrc": "18703:10:1",
															"nodeType": "YulAssignment",
															"src": "18703:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "18710:3:1",
																"nodeType": "YulIdentifier",
																"src": "18710:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18703:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18703:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18510:205:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18685:3:1",
														"nodeType": "YulTypedName",
														"src": "18685:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18693:3:1",
														"nodeType": "YulTypedName",
														"src": "18693:3:1",
														"type": ""
													}
												],
												"src": "18510:205:1"
											},
											{
												"body": {
													"nativeSrc": "18776:65:1",
													"nodeType": "YulBlock",
													"src": "18776:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18793:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18793:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18796:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18796:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18786:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18786:6:1"
																},
																"nativeSrc": "18786:14:1",
																"nodeType": "YulFunctionCall",
																"src": "18786:14:1"
															},
															"nativeSrc": "18786:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "18786:14:1"
														},
														{
															"nativeSrc": "18809:26:1",
															"nodeType": "YulAssignment",
															"src": "18809:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18827:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18827:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18830:4:1",
																		"nodeType": "YulLiteral",
																		"src": "18830:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "18817:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "18817:9:1"
																},
																"nativeSrc": "18817:18:1",
																"nodeType": "YulFunctionCall",
																"src": "18817:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18809:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18809:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "18720:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "18759:3:1",
														"nodeType": "YulTypedName",
														"src": "18759:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "18767:4:1",
														"nodeType": "YulTypedName",
														"src": "18767:4:1",
														"type": ""
													}
												],
												"src": "18720:121:1"
											},
											{
												"body": {
													"nativeSrc": "18927:437:1",
													"nodeType": "YulBlock",
													"src": "18927:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "18960:398:1",
																"nodeType": "YulBlock",
																"src": "18960:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18981:1:1",
																					"nodeType": "YulLiteral",
																					"src": "18981:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "18984:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "18984:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "18974:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "18974:6:1"
																			},
																			"nativeSrc": "18974:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18974:16:1"
																		},
																		"nativeSrc": "18974:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "18974:16:1"
																	},
																	{
																		"nativeSrc": "19003:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19003:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19025:1:1",
																					"nodeType": "YulLiteral",
																					"src": "19025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19028:4:1",
																					"nodeType": "YulLiteral",
																					"src": "19028:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "19015:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19015:9:1"
																			},
																			"nativeSrc": "19015:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19015:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "19007:4:1",
																				"nodeType": "YulTypedName",
																				"src": "19007:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "19046:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19046:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "19069:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "19069:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "19079:1:1",
																							"nodeType": "YulLiteral",
																							"src": "19079:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "19086:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "19086:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "19098:2:1",
																									"nodeType": "YulLiteral",
																									"src": "19098:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19082:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "19082:3:1"
																							},
																							"nativeSrc": "19082:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "19082:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "19075:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "19075:3:1"
																					},
																					"nativeSrc": "19075:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "19075:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19065:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "19065:3:1"
																			},
																			"nativeSrc": "19065:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19065:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "19050:11:1",
																				"nodeType": "YulTypedName",
																				"src": "19050:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "19140:23:1",
																			"nodeType": "YulBlock",
																			"src": "19140:23:1",
																			"statements": [
																				{
																					"nativeSrc": "19142:19:1",
																					"nodeType": "YulAssignment",
																					"src": "19142:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "19157:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "19157:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "19142:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "19142:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "19122:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "19122:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19134:4:1",
																					"nodeType": "YulLiteral",
																					"src": "19134:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "19119:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "19119:2:1"
																			},
																			"nativeSrc": "19119:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19119:20:1"
																		},
																		"nativeSrc": "19116:47:1",
																		"nodeType": "YulIf",
																		"src": "19116:47:1"
																	},
																	{
																		"nativeSrc": "19176:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19176:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "19190:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "19190:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "19200:1:1",
																							"nodeType": "YulLiteral",
																							"src": "19200:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "19207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "19207:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "19212:2:1",
																									"nodeType": "YulLiteral",
																									"src": "19212:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19203:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "19203:3:1"
																							},
																							"nativeSrc": "19203:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "19203:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "19196:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "19196:3:1"
																					},
																					"nativeSrc": "19196:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "19196:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19186:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "19186:3:1"
																			},
																			"nativeSrc": "19186:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19186:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "19180:2:1",
																				"nodeType": "YulTypedName",
																				"src": "19180:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "19230:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19230:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "19243:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "19243:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "19234:5:1",
																				"nodeType": "YulTypedName",
																				"src": "19234:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "19328:20:1",
																			"nodeType": "YulBlock",
																			"src": "19328:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "19337:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "19337:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "19344:1:1",
																								"nodeType": "YulLiteral",
																								"src": "19344:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "19330:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "19330:6:1"
																						},
																						"nativeSrc": "19330:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "19330:16:1"
																					},
																					"nativeSrc": "19330:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "19330:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "19278:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "19278:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "19285:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "19285:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "19275:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "19275:2:1"
																			},
																			"nativeSrc": "19275:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19275:13:1"
																		},
																		"nativeSrc": "19267:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "19289:26:1",
																			"nodeType": "YulBlock",
																			"src": "19289:26:1",
																			"statements": [
																				{
																					"nativeSrc": "19291:22:1",
																					"nodeType": "YulAssignment",
																					"src": "19291:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "19304:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "19304:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "19311:1:1",
																								"nodeType": "YulLiteral",
																								"src": "19311:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "19300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "19300:3:1"
																						},
																						"nativeSrc": "19300:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "19300:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "19291:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "19291:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "19271:3:1",
																			"nodeType": "YulBlock",
																			"src": "19271:3:1",
																			"statements": []
																		},
																		"src": "19267:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "18943:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18943:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18948:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18948:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18940:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "18940:2:1"
																},
																"nativeSrc": "18940:11:1",
																"nodeType": "YulFunctionCall",
																"src": "18940:11:1"
															},
															"nativeSrc": "18937:421:1",
															"nodeType": "YulIf",
															"src": "18937:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "18846:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "18899:5:1",
														"nodeType": "YulTypedName",
														"src": "18899:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18906:3:1",
														"nodeType": "YulTypedName",
														"src": "18906:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "18911:10:1",
														"nodeType": "YulTypedName",
														"src": "18911:10:1",
														"type": ""
													}
												],
												"src": "18846:518:1"
											},
											{
												"body": {
													"nativeSrc": "19454:81:1",
													"nodeType": "YulBlock",
													"src": "19454:81:1",
													"statements": [
														{
															"nativeSrc": "19464:65:1",
															"nodeType": "YulAssignment",
															"src": "19464:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "19479:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "19479:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "19497:1:1",
																										"nodeType": "YulLiteral",
																										"src": "19497:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "19500:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "19500:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "19493:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "19493:3:1"
																								},
																								"nativeSrc": "19493:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "19493:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "19510:1:1",
																										"nodeType": "YulLiteral",
																										"src": "19510:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "19506:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "19506:3:1"
																								},
																								"nativeSrc": "19506:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "19506:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "19489:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "19489:3:1"
																						},
																						"nativeSrc": "19489:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "19489:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19485:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "19485:3:1"
																				},
																				"nativeSrc": "19485:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19485:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19475:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19475:3:1"
																		},
																		"nativeSrc": "19475:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19475:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19521:1:1",
																				"nodeType": "YulLiteral",
																				"src": "19521:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "19524:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "19524:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "19517:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19517:3:1"
																		},
																		"nativeSrc": "19517:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19517:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19472:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "19472:2:1"
																},
																"nativeSrc": "19472:57:1",
																"nodeType": "YulFunctionCall",
																"src": "19472:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "19464:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "19464:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "19369:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19431:4:1",
														"nodeType": "YulTypedName",
														"src": "19431:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19437:3:1",
														"nodeType": "YulTypedName",
														"src": "19437:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "19445:4:1",
														"nodeType": "YulTypedName",
														"src": "19445:4:1",
														"type": ""
													}
												],
												"src": "19369:166:1"
											},
											{
												"body": {
													"nativeSrc": "19636:1249:1",
													"nodeType": "YulBlock",
													"src": "19636:1249:1",
													"statements": [
														{
															"nativeSrc": "19646:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "19646:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19666:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "19666:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19660:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "19660:5:1"
																},
																"nativeSrc": "19660:10:1",
																"nodeType": "YulFunctionCall",
																"src": "19660:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19650:6:1",
																	"nodeType": "YulTypedName",
																	"src": "19650:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19713:22:1",
																"nodeType": "YulBlock",
																"src": "19713:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19715:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "19715:16:1"
																			},
																			"nativeSrc": "19715:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19715:18:1"
																		},
																		"nativeSrc": "19715:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "19715:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19685:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19685:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19693:18:1",
																		"nodeType": "YulLiteral",
																		"src": "19693:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19682:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "19682:2:1"
																},
																"nativeSrc": "19682:30:1",
																"nodeType": "YulFunctionCall",
																"src": "19682:30:1"
															},
															"nativeSrc": "19679:56:1",
															"nodeType": "YulIf",
															"src": "19679:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19788:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "19788:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "19826:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "19826:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "19820:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "19820:5:1"
																				},
																				"nativeSrc": "19820:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19820:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "19794:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "19794:25:1"
																		},
																		"nativeSrc": "19794:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19794:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19834:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19834:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "19744:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "19744:43:1"
																},
																"nativeSrc": "19744:97:1",
																"nodeType": "YulFunctionCall",
																"src": "19744:97:1"
															},
															"nativeSrc": "19744:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "19744:97:1"
														},
														{
															"nativeSrc": "19850:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "19850:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "19867:1:1",
																"nodeType": "YulLiteral",
																"src": "19867:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19854:9:1",
																	"nodeType": "YulTypedName",
																	"src": "19854:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19877:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "19877:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "19896:4:1",
																"nodeType": "YulLiteral",
																"src": "19896:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "19881:11:1",
																	"nodeType": "YulTypedName",
																	"src": "19881:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19909:17:1",
															"nodeType": "YulAssignment",
															"src": "19909:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "19922:4:1",
																"nodeType": "YulLiteral",
																"src": "19922:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19909:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "19909:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19972:656:1",
																		"nodeType": "YulBlock",
																		"src": "19972:656:1",
																		"statements": [
																			{
																				"nativeSrc": "19986:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19986:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "20005:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "20005:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "20017:2:1",
																									"nodeType": "YulLiteral",
																									"src": "20017:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "20013:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "20013:3:1"
																							},
																							"nativeSrc": "20013:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "20013:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "20001:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "20001:3:1"
																					},
																					"nativeSrc": "20001:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "20001:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19990:7:1",
																						"nodeType": "YulTypedName",
																						"src": "19990:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20034:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20034:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20078:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "20078:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "20048:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "20048:29:1"
																					},
																					"nativeSrc": "20048:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "20048:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "20038:6:1",
																						"nodeType": "YulTypedName",
																						"src": "20038:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20096:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20096:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20105:1:1",
																					"nodeType": "YulLiteral",
																					"src": "20105:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "20100:1:1",
																						"nodeType": "YulTypedName",
																						"src": "20100:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20183:172:1",
																					"nodeType": "YulBlock",
																					"src": "20183:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20208:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "20208:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "20226:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "20226:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "20231:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "20231:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "20222:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "20222:3:1"
																												},
																												"nativeSrc": "20222:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "20222:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "20216:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "20216:5:1"
																										},
																										"nativeSrc": "20216:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "20216:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20201:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "20201:6:1"
																								},
																								"nativeSrc": "20201:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "20201:42:1"
																							},
																							"nativeSrc": "20201:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "20201:42:1"
																						},
																						{
																							"nativeSrc": "20260:24:1",
																							"nodeType": "YulAssignment",
																							"src": "20260:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20274:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "20274:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20282:1:1",
																										"nodeType": "YulLiteral",
																										"src": "20282:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20270:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "20270:3:1"
																								},
																								"nativeSrc": "20270:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "20270:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "20260:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "20260:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "20301:40:1",
																							"nodeType": "YulAssignment",
																							"src": "20301:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "20318:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "20318:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "20329:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "20329:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20314:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "20314:3:1"
																								},
																								"nativeSrc": "20314:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "20314:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "20301:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "20301:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "20130:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "20130:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20133:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "20133:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20127:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "20127:2:1"
																					},
																					"nativeSrc": "20127:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "20127:14:1"
																				},
																				"nativeSrc": "20119:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "20142:28:1",
																					"nodeType": "YulBlock",
																					"src": "20142:28:1",
																					"statements": [
																						{
																							"nativeSrc": "20144:24:1",
																							"nodeType": "YulAssignment",
																							"src": "20144:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "20153:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "20153:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "20156:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "20156:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20149:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "20149:3:1"
																								},
																								"nativeSrc": "20149:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "20149:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "20144:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "20144:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "20123:3:1",
																					"nodeType": "YulBlock",
																					"src": "20123:3:1",
																					"statements": []
																				},
																				"src": "20119:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "20403:166:1",
																					"nodeType": "YulBlock",
																					"src": "20403:166:1",
																					"statements": [
																						{
																							"nativeSrc": "20421:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "20421:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20448:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "20448:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20453:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "20453:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20444:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "20444:3:1"
																										},
																										"nativeSrc": "20444:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "20444:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20438:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "20438:5:1"
																								},
																								"nativeSrc": "20438:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "20438:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "20425:9:1",
																									"nodeType": "YulTypedName",
																									"src": "20425:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20488:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "20488:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20500:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "20500:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "20527:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "20527:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "20530:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "20530:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "20523:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "20523:3:1"
																																		},
																																		"nativeSrc": "20523:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "20523:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "20539:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "20539:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "20519:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "20519:3:1"
																																},
																																"nativeSrc": "20519:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "20519:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "20549:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "20549:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "20545:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "20545:3:1"
																																},
																																"nativeSrc": "20545:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "20545:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "20515:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "20515:3:1"
																														},
																														"nativeSrc": "20515:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "20515:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "20511:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "20511:3:1"
																												},
																												"nativeSrc": "20511:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "20511:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "20496:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "20496:3:1"
																										},
																										"nativeSrc": "20496:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "20496:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20481:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "20481:6:1"
																								},
																								"nativeSrc": "20481:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "20481:74:1"
																							},
																							"nativeSrc": "20481:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "20481:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20374:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "20374:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "20383:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "20383:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20371:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "20371:2:1"
																					},
																					"nativeSrc": "20371:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "20371:19:1"
																				},
																				"nativeSrc": "20368:201:1",
																				"nodeType": "YulIf",
																				"src": "20368:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20589:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "20589:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "20603:1:1",
																											"nodeType": "YulLiteral",
																											"src": "20603:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "20606:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "20606:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "20599:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "20599:3:1"
																									},
																									"nativeSrc": "20599:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "20599:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20615:1:1",
																									"nodeType": "YulLiteral",
																									"src": "20615:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20595:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "20595:3:1"
																							},
																							"nativeSrc": "20595:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "20595:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20582:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "20582:6:1"
																					},
																					"nativeSrc": "20582:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "20582:36:1"
																				},
																				"nativeSrc": "20582:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "20582:36:1"
																			}
																		]
																	},
																	"nativeSrc": "19965:663:1",
																	"nodeType": "YulCase",
																	"src": "19965:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19970:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19970:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20645:234:1",
																		"nodeType": "YulBlock",
																		"src": "20645:234:1",
																		"statements": [
																			{
																				"nativeSrc": "20659:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20659:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20672:1:1",
																					"nodeType": "YulLiteral",
																					"src": "20672:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20663:5:1",
																						"nodeType": "YulTypedName",
																						"src": "20663:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20708:67:1",
																					"nodeType": "YulBlock",
																					"src": "20708:67:1",
																					"statements": [
																						{
																							"nativeSrc": "20726:35:1",
																							"nodeType": "YulAssignment",
																							"src": "20726:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20745:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "20745:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20750:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "20750:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20741:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "20741:3:1"
																										},
																										"nativeSrc": "20741:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "20741:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20735:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "20735:5:1"
																								},
																								"nativeSrc": "20735:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "20735:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20726:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "20726:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20689:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "20689:6:1"
																				},
																				"nativeSrc": "20686:89:1",
																				"nodeType": "YulIf",
																				"src": "20686:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20795:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "20795:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20854:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "20854:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20861:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "20861:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20801:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "20801:52:1"
																							},
																							"nativeSrc": "20801:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "20801:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20788:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "20788:6:1"
																					},
																					"nativeSrc": "20788:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "20788:81:1"
																				},
																				"nativeSrc": "20788:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "20788:81:1"
																			}
																		]
																	},
																	"nativeSrc": "20637:242:1",
																	"nodeType": "YulCase",
																	"src": "20637:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19945:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19945:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19953:2:1",
																		"nodeType": "YulLiteral",
																		"src": "19953:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19942:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "19942:2:1"
																},
																"nativeSrc": "19942:14:1",
																"nodeType": "YulFunctionCall",
																"src": "19942:14:1"
															},
															"nativeSrc": "19935:944:1",
															"nodeType": "YulSwitch",
															"src": "19935:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "19540:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19621:4:1",
														"nodeType": "YulTypedName",
														"src": "19621:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19627:3:1",
														"nodeType": "YulTypedName",
														"src": "19627:3:1",
														"type": ""
													}
												],
												"src": "19540:1345:1"
											},
											{
												"body": {
													"nativeSrc": "21027:150:1",
													"nodeType": "YulBlock",
													"src": "21027:150:1",
													"statements": [
														{
															"nativeSrc": "21037:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "21037:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21057:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21057:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21051:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "21051:5:1"
																},
																"nativeSrc": "21051:13:1",
																"nodeType": "YulFunctionCall",
																"src": "21051:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21041:6:1",
																	"nodeType": "YulTypedName",
																	"src": "21041:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "21112:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "21112:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21120:4:1",
																				"nodeType": "YulLiteral",
																				"src": "21120:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21108:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21108:3:1"
																		},
																		"nativeSrc": "21108:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21108:17:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21127:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21127:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21132:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21132:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21073:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "21073:34:1"
																},
																"nativeSrc": "21073:66:1",
																"nodeType": "YulFunctionCall",
																"src": "21073:66:1"
															},
															"nativeSrc": "21073:66:1",
															"nodeType": "YulExpressionStatement",
															"src": "21073:66:1"
														},
														{
															"nativeSrc": "21148:23:1",
															"nodeType": "YulAssignment",
															"src": "21148:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21159:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21159:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21164:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21164:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21155:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21155:3:1"
																},
																"nativeSrc": "21155:16:1",
																"nodeType": "YulFunctionCall",
																"src": "21155:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21148:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21148:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "20890:287:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21003:3:1",
														"nodeType": "YulTypedName",
														"src": "21003:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21008:6:1",
														"nodeType": "YulTypedName",
														"src": "21008:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21019:3:1",
														"nodeType": "YulTypedName",
														"src": "21019:3:1",
														"type": ""
													}
												],
												"src": "20890:287:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := abi_decode_bool(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payablet_address_payable(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_address(value_4)\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_address(value_5)\n        value5 := value_5\n        let value_6 := calldataload(add(headStart, 192))\n        validator_revert_address(value_6)\n        value6 := value_6\n        let value_7 := calldataload(add(headStart, 224))\n        validator_revert_address(value_7)\n        value7 := value_7\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b0f002db592b5be6109b5b2d38d5808b6cb4f378d42702b7ab3603714a4191b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Launch mode is already disabled\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_639231b681faef9b093cd01f96e56539124f8d5dd8170e82c6e8233e404e240f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only fee receiver can trigger\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable__to_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable_t_address_payable__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), and(value7, _1))\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1b48678a7f959c8227f181f7c2c299112f3184ec06c891164e6292e5cbfc1b57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Max tx cant be lower than 0.1%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0500c267170b18d75be8e7233421038dddb796794b8fcd4e203c684720ad20fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid buy tax value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6bce9b06e18a1ef35f2a7bc8c816f18e7cbfc76a37f65a98145d42a22d949fc2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid sell tax value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47002782db0b64c7f6254f162a29b9ff9bff559944c7515beed7c163790fade6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only owner can trigger\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c31b5ed3f39966f1d9926012d999ae0f7f34d1ccb73b5ad58b2d8437d73e9a07__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Supply Limit Reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_aabbfe6abbf40fbd028cb9073ee8b15b6e2d99ec95313010eb7f235b1f2fe0a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Max wallet cant be lower than 0.\")\n        mstore(add(headStart, 96), \"1%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"trading is already open\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 0)\n        tail := add(headStart, 64)\n    }\n    function abi_encode_tuple_t_stringliteral_fc168bd2771777b2cdce369aa9bc412bad2d5af46ed939ba6a577a72c461f3ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Exceeds the _txAmountLimit.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c563e32fd325dd6083434381ad7ae564e6c211c512ec890aa906ea3486fb26c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Exceeds the maxWalletSize.\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2016": [
									{
										"length": 32,
										"start": 7646
									},
									{
										"length": 32,
										"start": 7687
									},
									{
										"length": 32,
										"start": 8006
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101e9575f3560e01c80636ed6a48d11610108578063ad3cb1cc1161009d578063dd54291b1161006d578063dd54291b1461056d578063dd62ed3e14610582578063f1d5f517146105a1578063f2fde38b146105c0578063fcfff16f146105df575f80fd5b8063ad3cb1cc146104b4578063ae601480146104e4578063c4d66de81461052f578063da7fe6521461054e575f80fd5b80638f937cc4116100d85780638f937cc41461044e57806395d89b4114610462578063a0712d6814610476578063a9059cbb14610495575f80fd5b80636ed6a48d146103db57806370a08231146103ef578063715018a61461040e5780638da5cb5b14610422575f80fd5b806323bc25ed1161017e5780634f1ef2861161014e5780634f1ef2861461037657806352d1902d14610389578063620cc86c1461039d578063667f6526146103bc575f80fd5b806323bc25ed146102fe5780632dc4f5e61461031d578063313ce5671461033c57806342966c6814610357575f80fd5b806318160ddd116101b957806318160ddd146102825780631c537de5146102ac578063217b6da6146102cb57806323b872dd146102df575f80fd5b80630313fc4b146101f457806306fdde031461021557806308ade0c91461023f578063095ea7b314610253575f80fd5b366101f057005b5f80fd5b3480156101ff575f80fd5b5061021361020e36600461297c565b6105f3565b005b348015610220575f80fd5b50610229610699565b60405161023691906129be565b60405180910390f35b34801561024a575f80fd5b50610213610759565b34801561025e575f80fd5b5061027261026d366004612a04565b6107ce565b6040519015158152602001610236565b34801561028d575f80fd5b505f80516020612fbc833981519152545b604051908152602001610236565b3480156102b7575f80fd5b506102136102c6366004612a42565b6107e7565b3480156102d6575f80fd5b50610213610859565b3480156102ea575f80fd5b506102726102f9366004612abf565b610a91565b348015610309575f80fd5b50610213610318366004612afd565b610ab6565b348015610328575f80fd5b50610213610337366004612ba1565b610bb2565b348015610347575f80fd5b5060405160128152602001610236565b348015610362575f80fd5b50610213610371366004612bd4565b610c13565b610213610384366004612bff565b610c2f565b348015610394575f80fd5b5061029e610c4a565b3480156103a8575f80fd5b506102136103b7366004612bd4565b610c65565b3480156103c7575f80fd5b506102136103d636600461297c565b610d27565b3480156103e6575f80fd5b50610213610e02565b3480156103fa575f80fd5b5061029e610409366004612cbd565b610ebe565b348015610419575f80fd5b50610213610ee4565b34801561042d575f80fd5b50610436610ef7565b6040516001600160a01b039091168152602001610236565b348015610459575f80fd5b50610213610f25565b34801561046d575f80fd5b50610229610faa565b348015610481575f80fd5b50610213610490366004612bd4565b610fe8565b3480156104a0575f80fd5b506102726104af366004612a04565b611057565b3480156104bf575f80fd5b50610229604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156104ef575f80fd5b50600b54600c54600f54601054601154601254604080519687526020870195909552938501929092526060840152608083015260a082015260c001610236565b34801561053a575f80fd5b50610213610549366004612cbd565b611064565b348015610559575f80fd5b50610213610568366004612bd4565b6115ac565b348015610578575f80fd5b5061029e60155481565b34801561058d575f80fd5b5061029e61059c366004612cd8565b6115b9565b3480156105ac575f80fd5b506102136105bb366004612bd4565b611602565b3480156105cb575f80fd5b506102136105da366004612cbd565b6116c8565b3480156105ea575f80fd5b50610213611702565b6105fb6117ed565b612710826106145f80516020612fbc8339815191525490565b61061e9190612d23565b6106289190612d3a565b601155612710816106445f80516020612fbc8339815191525490565b61064e9190612d23565b6106589190612d3a565b60125560408051838152602081018390527f2b3f4c022d9943b151090e389857495bb9d8493714259cc19a540f5a11475fb191015b60405180910390a15050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f80516020612f9c833981519152916106d790612d59565b80601f016020809104026020016040519081016040528092919081815260200182805461070390612d59565b801561074e5780601f106107255761010080835404028352916020019161074e565b820191905f5260205f20905b81548152906001019060200180831161073157829003601f168201915b505050505091505090565b6107616117ed565b601454600160b81b900460ff166107bf5760405162461bcd60e51b815260206004820152601f60248201527f4c61756e6368206d6f646520697320616c72656164792064697361626c65640060448201526064015b60405180910390fd5b6014805460ff60b81b19169055565b5f336107db81858561181f565b60019150505b92915050565b6107ef6117ed565b5f5b82811015610853578160165f86868581811061080f5761080f612d8b565b90506020020160208101906108249190612cbd565b6001600160a01b0316815260208101919091526040015f20805460ff19169115159190911790556001016107f1565b50505050565b610861610ef7565b6001600160a01b0316336001600160a01b0316146108c15760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206665652072656365697665722063616e207472696767657200000060448201526064016107b6565b5f6108cd600847612d3a565b6001546040519192506001600160a01b03169082156108fc029083905f818181858888f19350505050158015610905573d5f803e3d5ffd5b506002546040516001600160a01b039091169082156108fc029083905f818181858888f1935050505015801561093d573d5f803e3d5ffd5b506003546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610975573d5f803e3d5ffd5b506004546040516001600160a01b039091169082156108fc029083905f818181858888f193505050501580156109ad573d5f803e3d5ffd5b506005546040516001600160a01b039091169082156108fc029083905f818181858888f193505050501580156109e5573d5f803e3d5ffd5b506006546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610a1d573d5f803e3d5ffd5b506007546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610a55573d5f803e3d5ffd5b506008546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610a8d573d5f803e3d5ffd5b5050565b5f33610a9e858285611831565b610aa985858561188e565b60019150505b9392505050565b610abe6117ed565b600180546001600160a01b038a81166001600160a01b03199283168117909355600280548b83169084168117909155600380548b84169085168117909155600480548b85169086168117909155600580548b86169087168117909155600680548b87169088168117909155600780548b8816908916811790915560088054978b16979098168717909755604080519889526020890195909552938701929092526060860152608085015260a084015260c083019190915260e08201527f52e6e0e286d372f9e966ef36de088520ff74564d54d64ad119477262ca461e7b906101000160405180910390a15050505050505050565b610bba6117ed565b6001600160a01b0382165f8181526020818152604091829020805460ff19168515159081179091558251938452908301527f2d43abd87b27cee7b0aa8c6f7e0b4a3247b683262a83cbc2318b0df398a49aa9910161068d565b610c1b6117ed565b610c2c610c26610ef7565b82611d9f565b50565b610c37611dd3565b610c4082611e77565b610a8d8282611e7f565b5f610c53611f3b565b505f80516020612fdc83398151915290565b610c6d6117ed565b6001811015610cbe5760405162461bcd60e51b815260206004820152601e60248201527f4d61782074782063616e74206265206c6f776572207468616e20302e3125000060448201526064016107b6565b6103e881610cd75f80516020612fbc8339815191525490565b610ce19190612d23565b610ceb9190612d3a565b600f8190556040519081527f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf906020015b60405180910390a150565b610d2f6117ed565b6063821115610d785760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420627579207461782076616c756560581b60448201526064016107b6565b6063811115610dc25760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073656c6c207461782076616c756560501b60448201526064016107b6565b600b829055600c81905560408051838152602081018390527f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1910161068d565b610e0a6117ed565b5f80516020612fbc83398151915254600f555f80516020612fbc833981519152546010557f947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf610e645f80516020612fbc8339815191525490565b60405190815260200160405180910390a17f4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e001610eab5f80516020612fbc8339815191525490565b60405190815260200160405180910390a1565b6001600160a01b03165f9081525f80516020612f9c833981519152602052604090205490565b610eec6117ed565b610ef55f611f84565b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b610f2d610ef7565b6001600160a01b0316336001600160a01b031614610f865760405162461bcd60e51b815260206004820152601660248201527527b7363c9037bbb732b91031b0b7103a3934b3b3b2b960511b60448201526064016107b6565b5f610f9030610ebe565b9050610f9b81611ff4565b478015610a8d57610a8d612183565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020612f9c833981519152916106d790612d59565b610ff06117ed565b601554816017546110019190612d9f565b11156110465760405162461bcd60e51b815260206004820152601460248201527314dd5c1c1b1e48131a5b5a5d0814995858da195960621b60448201526064016107b6565b610c2c611051610ef7565b82612425565b5f336107db81858561188e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156110a95750825b90505f8267ffffffffffffffff1660011480156110c55750303b155b9050811580156110d3575080155b156110f15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561111b57845460ff60401b1916600160401b1785555b61115f6040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250612459565b6111688661246b565b61117061247c565b6d04ee2d6d415b85acef810000000060178190556d314dc6448d9338c15b0a000000006015556103e8906111a590600a612d23565b6111af9190612d3a565b600f556017546103e8906111c490600a612d23565b6111ce9190612d3a565b601055601754612710906111e3906005612d23565b6111ed9190612d3a565b6011556017546127109061120390610190612d23565b61120d9190612d3a565b601255600f600b556028600c556001600d8190555f600e8190553080825260166020526040909120805460ff1916909217909155601380546001600160a01b031916739ac64cc6e4415144c455bd8e4837fea55603e5c390811790915561128991906112845f80516020612fbc8339815191525490565b61181f565b60135f9054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fd9190612db2565b6001600160a01b031663c9c653963060135f9054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561135c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113809190612db2565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303815f875af11580156113ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113ee9190612db2565b601480546001600160a01b03929092166001600160a01b0319928316179055600180548216732f8d1ddd0f3ccf0fe21c505a4ebc56f6f4626c0d908117825560028054841682179055600380548416821790556004805484168217905560058054841682179055600680548416821790556007805484168217905560088054909316179091555f8061147e610ef7565b6001600160a01b03908116825260208083019390935260409182015f908120805495151560ff1996871617905530815292839052818320805485166001908117909155805482168452828420805486168217905560025482168452828420805486168217905560035482168452828420805486168217905560045482168452828420805486168217905560055482168452828420805486168217905560065482168452828420805486168217905560075482168452828420805486168217905560085490911683529120805490921617905560175461155e903390612425565b83156115a457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6115b46117ed565b601555565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61160a6117ed565b60018110156116665760405162461bcd60e51b815260206004820152602260248201527f4d61782077616c6c65742063616e74206265206c6f776572207468616e20302e604482015261312560f01b60648201526084016107b6565b6103e88161167f5f80516020612fbc8339815191525490565b6116899190612d23565b6116939190612d3a565b60108190556040519081527f4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e00190602001610d1c565b6116d06117ed565b6001600160a01b0381166116f957604051631e4fbdf760e01b81525f60048201526024016107b6565b610c2c81611f84565b61170a6117ed565b601454600160a01b900460ff16156117645760405162461bcd60e51b815260206004820152601760248201527f74726164696e6720697320616c7265616479206f70656e00000000000000000060448201526064016107b6565b6014805462ff00ff60a01b19166201000160a01b179055436009819055600a805467ffffffffffffffff191667ffffffffffffffff909216919091179055305f90815260208190526040808220805460ff191660011790556019600b556028600c55517fea4359d5c4b8f0945a64ab9c37fe830b3407d45e0e6e6f84275977a570457d6f9190a1565b336117f6610ef7565b6001600160a01b031614610ef55760405163118cdaa760e01b81523360048201526024016107b6565b61182c8383836001612484565b505050565b5f61183c84846115b9565b90505f198114610853578181101561188057604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107b6565b61085384848484035f612484565b6001600160a01b0383166118f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107b6565b6001600160a01b0382166119545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107b6565b5f81116119b55760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016107b6565b5f6119be610ef7565b6001600160a01b0316846001600160a01b0316141580156119f857506119e2610ef7565b6001600160a01b0316836001600160a01b031614155b8015611a0e5750601454600160a81b900460ff16155b15611d7a57601454600160b81b900460ff1615611a87576001600160a01b0384165f9081526016602052604090205460ff1680611a6257506001600160a01b0383165f9081526016602052604090205460ff165b611a875760405162461bcd60e51b8152602060048201525f60248201526044016107b6565b6064600b5483611a979190612d23565b611aa19190612d3a565b6014549091506001600160a01b038581169116148015611acf57506013546001600160a01b03848116911614155b8015611af357506001600160a01b0383165f9081526020819052604090205460ff16155b15611be557600f54821115611b4a5760405162461bcd60e51b815260206004820152601b60248201527f4578636565647320746865205f7478416d6f756e744c696d69742e000000000060448201526064016107b6565b60105482611b5785610ebe565b611b619190612d9f565b1115611baf5760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016107b6565b436009546003611bbf9190612d9f565b1115611bd057823b15611bd0575f80fd5b600e8054905f611bdf83612dcd565b91905055505b6014546001600160a01b03848116911614801590611c1b57506001600160a01b0383165f9081526020819052604090205460ff16155b15611c855760105482611c2d85610ebe565b611c379190612d9f565b1115611c855760405162461bcd60e51b815260206004820152601a60248201527f4578636565647320746865206d617857616c6c657453697a652e00000000000060448201526064016107b6565b6014546001600160a01b038481169116148015611cab57506001600160a01b0384163014155b15611ccd576064600c5483611cc09190612d23565b611cca9190612d3a565b90505b5f611cd730610ebe565b601454909150600160a81b900460ff16158015611d0157506014546001600160a01b038581169116145b8015611d165750601454600160b01b900460ff165b8015611d23575060115481115b8015611d325750600d54600e54115b8015611d4e5750600a544367ffffffffffffffff908116911614155b15611d7857611d67611d6282601254612567565b611ff4565b478015611d7657611d76612183565b505b505b8015611d8b57611d8b84308361257b565b6108538484611d9a8486612de5565b61257b565b6001600160a01b038216611dc857604051634b637e8f60e11b81525f60048201526024016107b6565b610a8d825f836125d4565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611e5957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611e4d5f80516020612fdc833981519152546001600160a01b031690565b6001600160a01b031614155b15610ef55760405163703e46dd60e11b815260040160405180910390fd5b610c2c6117ed565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611ed9575060408051601f3d908101601f19168201909252611ed691810190612df8565b60015b611f0157604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107b6565b5f80516020612fdc8339815191528114611f3157604051632a87526960e21b8152600481018290526024016107b6565b61182c838361270d565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ef55760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6014805460ff60a81b1916600160a81b179055600a805467ffffffffffffffff431667ffffffffffffffff199091161790556040805160028082526060820183525f9260208301908036833701905050905030815f8151811061205957612059612d8b565b6001600160a01b03928316602091820292909201810191909152601354604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156120b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120d49190612db2565b816001815181106120e7576120e7612d8b565b6001600160a01b03928316602091820292909201015260135461210d913091168461181f565b60135460405163791ac94760e01b81526001600160a01b039091169063791ac947906121459085905f90869030904290600401612e0f565b5f604051808303815f87803b15801561215c575f80fd5b505af115801561216e573d5f803e3d5ffd5b50506014805460ff60a81b1916905550505050565b5f80612190600847612d3a565b6001546040519192506001600160a01b03169082905f81818185875af1925050503d805f81146121db576040519150601f19603f3d011682016040523d82523d5f602084013e6121e0565b606091505b50506002546040519193506001600160a01b03169082905f81818185875af1925050503d805f811461222d576040519150601f19603f3d011682016040523d82523d5f602084013e612232565b606091505b50506003546040519193506001600160a01b03169082905f81818185875af1925050503d805f811461227f576040519150601f19603f3d011682016040523d82523d5f602084013e612284565b606091505b50506004546040519193506001600160a01b03169082905f81818185875af1925050503d805f81146122d1576040519150601f19603f3d011682016040523d82523d5f602084013e6122d6565b606091505b50506005546040519193506001600160a01b03169082905f81818185875af1925050503d805f8114612323576040519150601f19603f3d011682016040523d82523d5f602084013e612328565b606091505b50506006546040519193506001600160a01b03169082905f81818185875af1925050503d805f8114612375576040519150601f19603f3d011682016040523d82523d5f602084013e61237a565b606091505b50506007546040519193506001600160a01b03169082905f81818185875af1925050503d805f81146123c7576040519150601f19603f3d011682016040523d82523d5f602084013e6123cc565b606091505b50506008546040519193506001600160a01b03169082905f81818185875af1925050503d805f8114612419576040519150601f19603f3d011682016040523d82523d5f602084013e61241e565b606091505b5050505050565b6001600160a01b03821661244e5760405163ec442f0560e01b81525f60048201526024016107b6565b610a8d5f83836125d4565b612461612762565b610a8d82826127ab565b612473612762565b610c2c816127fb565b610ef5612762565b5f80516020612f9c8339815191526001600160a01b0385166124bb5760405163e602df0560e01b81525f60048201526024016107b6565b6001600160a01b0384166124e457604051634a1406b160e11b81525f60048201526024016107b6565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561241e57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161255891815260200190565b60405180910390a35050505050565b5f8183116125755782610aaf565b50919050565b6001600160a01b0383166125a457604051634b637e8f60e11b81525f60048201526024016107b6565b6001600160a01b0382166125cd5760405163ec442f0560e01b81525f60048201526024016107b6565b61182c8383835b5f80516020612f9c8339815191526001600160a01b03841661260e5781816002015f8282546126039190612d9f565b9091555061267e9050565b6001600160a01b0384165f90815260208290526040902054828110156126605760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016107b6565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b03831661269c5760028101805483900390556126ba565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516126ff91815260200190565b60405180910390a350505050565b61271682612803565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561275a5761182c8282612866565b610a8d6128d8565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610ef557604051631afcd79f60e31b815260040160405180910390fd5b6127b3612762565b5f80516020612f9c8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036127ec8482612ec4565b50600481016108538382612ec4565b6116d0612762565b806001600160a01b03163b5f0361283857604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107b6565b5f80516020612fdc83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516128829190612f80565b5f60405180830381855af49150503d805f81146128ba576040519150601f19603f3d011682016040523d82523d5f602084013e6128bf565b606091505b50915091506128cf8583836128f7565b95945050505050565b3415610ef55760405163b398979f60e01b815260040160405180910390fd5b60608261290c5761290782612953565b610aaf565b815115801561292357506001600160a01b0384163b155b1561294c57604051639996b31560e01b81526001600160a01b03851660048201526024016107b6565b5080610aaf565b8051156129635780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f806040838503121561298d575f80fd5b50508035926020909101359150565b5f5b838110156129b657818101518382015260200161299e565b50505f910152565b602081525f82518060208401526129dc81604085016020870161299c565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610c2c575f80fd5b5f8060408385031215612a15575f80fd5b8235612a20816129f0565b946020939093013593505050565b80358015158114612a3d575f80fd5b919050565b5f805f60408486031215612a54575f80fd5b833567ffffffffffffffff80821115612a6b575f80fd5b818601915086601f830112612a7e575f80fd5b813581811115612a8c575f80fd5b8760208260051b8501011115612aa0575f80fd5b602092830195509350612ab69186019050612a2e565b90509250925092565b5f805f60608486031215612ad1575f80fd5b8335612adc816129f0565b92506020840135612aec816129f0565b929592945050506040919091013590565b5f805f805f805f80610100898b031215612b15575f80fd5b8835612b20816129f0565b97506020890135612b30816129f0565b96506040890135612b40816129f0565b95506060890135612b50816129f0565b94506080890135612b60816129f0565b935060a0890135612b70816129f0565b925060c0890135612b80816129f0565b915060e0890135612b90816129f0565b809150509295985092959890939650565b5f8060408385031215612bb2575f80fd5b8235612bbd816129f0565b9150612bcb60208401612a2e565b90509250929050565b5f60208284031215612be4575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215612c10575f80fd5b8235612c1b816129f0565b9150602083013567ffffffffffffffff80821115612c37575f80fd5b818501915085601f830112612c4a575f80fd5b813581811115612c5c57612c5c612beb565b604051601f8201601f19908116603f01168101908382118183101715612c8457612c84612beb565b81604052828152886020848701011115612c9c575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f60208284031215612ccd575f80fd5b8135610aaf816129f0565b5f8060408385031215612ce9575f80fd5b8235612cf4816129f0565b91506020830135612d04816129f0565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176107e1576107e1612d0f565b5f82612d5457634e487b7160e01b5f52601260045260245ffd5b500490565b600181811c90821680612d6d57607f821691505b60208210810361257557634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b808201808211156107e1576107e1612d0f565b5f60208284031215612dc2575f80fd5b8151610aaf816129f0565b5f60018201612dde57612dde612d0f565b5060010190565b818103818111156107e1576107e1612d0f565b5f60208284031215612e08575f80fd5b5051919050565b5f60a08201878352602087602085015260a0604085015281875180845260c0860191506020890193505f5b81811015612e5f5784516001600160a01b031683529383019391830191600101612e3a565b50506001600160a01b03969096166060850152505050608001529392505050565b601f82111561182c57805f5260205f20601f840160051c81016020851015612ea55750805b601f840160051c820191505b8181101561241e575f8155600101612eb1565b815167ffffffffffffffff811115612ede57612ede612beb565b612ef281612eec8454612d59565b84612e80565b602080601f831160018114612f25575f8415612f0e5750858301515b5f19600386901b1c1916600185901b1785556115a4565b5f85815260208120601f198616915b82811015612f5357888601518255948401946001909101908401612f34565b5085821015612f7057878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f8251612f9181846020870161299c565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212209fd4f362f3ab85ed5f80094f7da9f337eff7d7676e834759412712b6913122d464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6ED6A48D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xDD54291B GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xDD54291B EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xF1D5F517 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xFCFFF16F EQ PUSH2 0x5DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xAE601480 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xDA7FE652 EQ PUSH2 0x54E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8F937CC4 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x8F937CC4 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6ED6A48D EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23BC25ED GT PUSH2 0x17E JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x14E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x620CC86C EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x667F6526 EQ PUSH2 0x3BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23BC25ED EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x2DC4F5E6 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x357 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x1C537DE5 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x217B6DA6 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313FC4B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x8ADE0C9 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1F0 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x759 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A04 JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A42 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x859 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ABF JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AFD JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA1 JUMP JUMPDEST PUSH2 0xBB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BFF JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0xC4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x297C JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CBD JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xEE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0xF25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0xFAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0xFE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2A04 JUMP JUMPDEST PUSH2 0x1057 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CBD JUMP JUMPDEST PUSH2 0x1064 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x2CD8 JUMP JUMPDEST PUSH2 0x15B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD4 JUMP JUMPDEST PUSH2 0x1602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CBD JUMP JUMPDEST PUSH2 0x16C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x2710 DUP3 PUSH2 0x614 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x11 SSTORE PUSH2 0x2710 DUP2 PUSH2 0x644 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x2B3F4C022D9943B151090E389857495BB9D8493714259CC19A540F5A11475FB1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x6D7 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x703 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x725 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x74E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x731 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x761 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756E6368206D6F646520697320616C72656164792064697361626C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xB8 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7DB DUP2 DUP6 DUP6 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x17ED JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x853 JUMPI DUP2 PUSH1 0x16 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x80F JUMPI PUSH2 0x80F PUSH2 0x2D8B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x7F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x861 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206665652072656365697665722063616E2074726967676572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0x8CD PUSH1 0x8 SELFBALANCE PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x905 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x975 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA1D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA8D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA9E DUP6 DUP3 DUP6 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0xAA9 DUP6 DUP6 DUP6 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xABE PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD DUP12 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP6 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP12 DUP6 AND SWAP1 DUP7 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP12 DUP7 AND SWAP1 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD DUP12 DUP8 AND SWAP1 DUP9 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD DUP12 DUP9 AND SWAP1 DUP10 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP8 DUP12 AND SWAP8 SWAP1 SWAP9 AND DUP8 OR SWAP1 SWAP8 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH32 0x52E6E0E286D372F9E966EF36DE088520FF74564D54D64AD119477262CA461E7B SWAP1 PUSH2 0x100 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBBA PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x2D43ABD87B27CEE7B0AA8C6F7E0B4A3247B683262A83CBC2318B0DF398A49AA9 SWAP2 ADD PUSH2 0x68D JUMP JUMPDEST PUSH2 0xC1B PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xC2C PUSH2 0xC26 PUSH2 0xEF7 JUMP JUMPDEST DUP3 PUSH2 0x1D9F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC37 PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0xC40 DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH2 0xA8D DUP3 DUP3 PUSH2 0x1E7F JUMP JUMPDEST PUSH0 PUSH2 0xC53 PUSH2 0x1F3B JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xC6D PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782074782063616E74206265206C6F776572207468616E20302E31250000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x3E8 DUP2 PUSH2 0xCD7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xD2F PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x63 DUP3 GT ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420627579207461782076616C7565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x63 DUP2 GT ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642073656C6C207461782076616C7565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x5C6323BF1C2D7AAEA2C091A4751C1C87AF7F2864650C336507A77D0557AF37A1 SWAP2 ADD PUSH2 0x68D JUMP JUMPDEST PUSH2 0xE0A PUSH2 0x17ED JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xF SSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x10 SSTORE PUSH32 0x947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF PUSH2 0xE64 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x4B39C36D20C57D220F61FD25C4349D4435CC03EF6C2A680942F15333C3C3E001 PUSH2 0xEAB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xEF5 PUSH0 PUSH2 0x1F84 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF2D PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9037BBB732B91031B0B7103A3934B3B3B2B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0xF90 ADDRESS PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP PUSH2 0xF9B DUP2 PUSH2 0x1FF4 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0xA8D JUMPI PUSH2 0xA8D PUSH2 0x2183 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x6D7 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH2 0xFF0 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 PUSH1 0x17 SLOAD PUSH2 0x1001 SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST GT ISZERO PUSH2 0x1046 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD5C1C1B1E48131A5B5A5D0814995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xC2C PUSH2 0x1051 PUSH2 0xEF7 JUMP JUMPDEST DUP3 PUSH2 0x2425 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7DB DUP2 DUP6 DUP6 PUSH2 0x188E JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x10A9 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x10C5 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x111B JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x115F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH2 0x2459 JUMP JUMPDEST PUSH2 0x1168 DUP7 PUSH2 0x246B JUMP JUMPDEST PUSH2 0x1170 PUSH2 0x247C JUMP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0x17 DUP2 SWAP1 SSTORE PUSH14 0x314DC6448D9338C15B0A00000000 PUSH1 0x15 SSTORE PUSH2 0x3E8 SWAP1 PUSH2 0x11A5 SWAP1 PUSH1 0xA PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x11AF SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x17 SLOAD PUSH2 0x3E8 SWAP1 PUSH2 0x11C4 SWAP1 PUSH1 0xA PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x11CE SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x17 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x11E3 SWAP1 PUSH1 0x5 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x11 SSTORE PUSH1 0x17 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x1203 SWAP1 PUSH2 0x190 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x120D SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH1 0xF PUSH1 0xB SSTORE PUSH1 0x28 PUSH1 0xC SSTORE PUSH1 0x1 PUSH1 0xD DUP2 SWAP1 SSTORE PUSH0 PUSH1 0xE DUP2 SWAP1 SSTORE ADDRESS DUP1 DUP3 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x9AC64CC6E4415144C455BD8E4837FEA55603E5C3 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x1284 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x181F JUMP JUMPDEST PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FD SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x13 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x135C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1380 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13EE SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND PUSH20 0x2F8D1DDD0F3CCF0FE21C505A4EBC56F6F4626C0D SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE PUSH0 DUP1 PUSH2 0x147E PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE ADDRESS DUP2 MSTORE SWAP3 DUP4 SWAP1 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD DUP6 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x2 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x3 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x4 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x5 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x6 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x7 SLOAD DUP3 AND DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP1 SLOAD DUP7 AND DUP3 OR SWAP1 SSTORE PUSH1 0x8 SLOAD SWAP1 SWAP2 AND DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x17 SLOAD PUSH2 0x155E SWAP1 CALLER SWAP1 PUSH2 0x2425 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x15A4 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15B4 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x160A PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x1666 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61782077616C6C65742063616E74206265206C6F776572207468616E20302E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3125 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x3E8 DUP2 PUSH2 0x167F PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FBC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1689 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1693 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x4B39C36D20C57D220F61FD25C4349D4435CC03EF6C2A680942F15333C3C3E001 SWAP1 PUSH1 0x20 ADD PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x16D0 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xC2C DUP2 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x170A PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1764 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696E6720697320616C7265616479206F70656E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH3 0xFF00FF PUSH1 0xA0 SHL NOT AND PUSH3 0x10001 PUSH1 0xA0 SHL OR SWAP1 SSTORE NUMBER PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x19 PUSH1 0xB SSTORE PUSH1 0x28 PUSH1 0xC SSTORE MLOAD PUSH32 0xEA4359D5C4B8F0945A64AB9C37FE830B3407D45E0E6E6F84275977A570457D6F SWAP2 SWAP1 LOG1 JUMP JUMPDEST CALLER PUSH2 0x17F6 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x182C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2484 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x183C DUP5 DUP5 PUSH2 0x15B9 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x853 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1880 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x853 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x2484 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x18F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x19B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0x19BE PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x19F8 JUMPI POP PUSH2 0x19E2 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1A0E JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A87 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1A62 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1A87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x64 PUSH1 0xB SLOAD DUP4 PUSH2 0x1A97 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1ACF JUMPI POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1AF3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1BE5 JUMPI PUSH1 0xF SLOAD DUP3 GT ISZERO PUSH2 0x1B4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205F7478416D6F756E744C696D69742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 PUSH2 0x1B57 DUP6 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x1B61 SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST GT ISZERO PUSH2 0x1BAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206D617857616C6C657453697A652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST NUMBER PUSH1 0x9 SLOAD PUSH1 0x3 PUSH2 0x1BBF SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST GT ISZERO PUSH2 0x1BD0 JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0x1BD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x1BDF DUP4 PUSH2 0x2DCD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x1C1B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x10 SLOAD DUP3 PUSH2 0x1C2D DUP6 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x1C37 SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST GT ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206D617857616C6C657453697A652E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x1CAB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x1CCD JUMPI PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0x1CC0 SWAP2 SWAP1 PUSH2 0x2D23 JUMP JUMPDEST PUSH2 0x1CCA SWAP2 SWAP1 PUSH2 0x2D3A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0x1CD7 ADDRESS PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1D01 JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1D16 JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x1D23 JUMPI POP PUSH1 0x11 SLOAD DUP2 GT JUMPDEST DUP1 ISZERO PUSH2 0x1D32 JUMPI POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x1D4E JUMPI POP PUSH1 0xA SLOAD NUMBER PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1D78 JUMPI PUSH2 0x1D67 PUSH2 0x1D62 DUP3 PUSH1 0x12 SLOAD PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x1FF4 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x1D76 PUSH2 0x2183 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8B DUP5 ADDRESS DUP4 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x853 DUP5 DUP5 PUSH2 0x1D9A DUP5 DUP7 PUSH2 0x2DE5 JUMP JUMPDEST PUSH2 0x257B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DC8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xA8D DUP3 PUSH0 DUP4 PUSH2 0x25D4 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1E59 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E4D PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2C PUSH2 0x17ED JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1ED9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1ED6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F01 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1F31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x182C DUP4 DUP4 PUSH2 0x270D JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NUMBER AND PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x2059 JUMPI PUSH2 0x2059 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20D4 SWAP2 SWAP1 PUSH2 0x2DB2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x20E7 JUMPI PUSH2 0x20E7 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x210D SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2145 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2E0F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x215C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x216E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2190 PUSH1 0x8 SELFBALANCE PUSH2 0x2D3A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x21DB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x222D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x227F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x22D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2323 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2375 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x237A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x23C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2419 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x241E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xA8D PUSH0 DUP4 DUP4 PUSH2 0x25D4 JUMP JUMPDEST PUSH2 0x2461 PUSH2 0x2762 JUMP JUMPDEST PUSH2 0xA8D DUP3 DUP3 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x2473 PUSH2 0x2762 JUMP JUMPDEST PUSH2 0xC2C DUP2 PUSH2 0x27FB JUMP JUMPDEST PUSH2 0xEF5 PUSH2 0x2762 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x24BB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x24E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x241E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2558 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0x2575 JUMPI DUP3 PUSH2 0xAAF JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x182C DUP4 DUP4 DUP4 JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x260E JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2603 SWAP2 SWAP1 PUSH2 0x2D9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x267E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2660 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x269C JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x26FF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2716 DUP3 PUSH2 0x2803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x275A JUMPI PUSH2 0x182C DUP3 DUP3 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0xA8D PUSH2 0x28D8 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27B3 PUSH2 0x2762 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2F9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x27EC DUP5 DUP3 PUSH2 0x2EC4 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x853 DUP4 DUP3 PUSH2 0x2EC4 JUMP JUMPDEST PUSH2 0x16D0 PUSH2 0x2762 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x2838 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2FDC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2882 SWAP2 SWAP1 PUSH2 0x2F80 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x28BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x28CF DUP6 DUP4 DUP4 PUSH2 0x28F7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x290C JUMPI PUSH2 0x2907 DUP3 PUSH2 0x2953 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2923 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x294C JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B6 JUMP JUMPDEST POP DUP1 PUSH2 0xAAF JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2963 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x298D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x299E JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x29DC DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x299C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC2C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A15 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2A20 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A3D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A54 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2A6B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A7E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2A8C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2AA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP PUSH2 0x2AB6 SWAP2 DUP7 ADD SWAP1 POP PUSH2 0x2A2E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2ADC DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2AEC DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2B15 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2B20 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2B30 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2B40 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x2B50 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x2B60 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x2B70 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x2B80 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH2 0x2B90 DUP2 PUSH2 0x29F0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2BBD DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BCB PUSH1 0x20 DUP5 ADD PUSH2 0x2A2E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C10 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2C1B DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C37 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C4A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2C5C JUMPI PUSH2 0x2C5C PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2C84 JUMPI PUSH2 0x2C84 PUSH2 0x2BEB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2C9C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAAF DUP2 PUSH2 0x29F0 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CF4 DUP2 PUSH2 0x29F0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2D04 DUP2 PUSH2 0x29F0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7E1 JUMPI PUSH2 0x7E1 PUSH2 0x2D0F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2D54 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2D6D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2575 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7E1 JUMPI PUSH2 0x7E1 PUSH2 0x2D0F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAAF DUP2 PUSH2 0x29F0 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2DDE JUMPI PUSH2 0x2DDE PUSH2 0x2D0F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7E1 JUMPI PUSH2 0x7E1 PUSH2 0x2D0F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP10 ADD SWAP4 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E5F JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2E3A JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x182C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2EA5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x241E JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EB1 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EDE JUMPI PUSH2 0x2EDE PUSH2 0x2BEB JUMP JUMPDEST PUSH2 0x2EF2 DUP2 PUSH2 0x2EEC DUP5 SLOAD PUSH2 0x2D59 JUMP JUMPDEST DUP5 PUSH2 0x2E80 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F25 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F0E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x15A4 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F53 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2F34 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2F70 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x2F91 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x299C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE0052C63247E1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02360894A13B LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA26469706673582212209F 0xD4 RETURN PUSH3 0xF3AB85 0xED PUSH0 DUP1 MULMOD 0x4F PUSH30 0xA9F337EFF7D7676E834759412712B6913122D464736F6C63430008180033 ",
							"sourceMap": "64963:13546:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;71237:310;;;;;;;;;;-1:-1:-1;71237:310:0;;;;;:::i;:::-;;:::i;:::-;;23461:147;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;71555:140;;;;;;;;;;;;;:::i;26034:190::-;;;;;;;;;;-1:-1:-1;26034:190:0;;;;;:::i;:::-;;:::i;:::-;;;1544:14:1;;1537:22;1519:41;;1507:2;1492:18;26034:190:0;1379:187:1;24675:155:0;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;24808:14:0;24675:155;;;1717:25:1;;;1705:2;1690:18;24675:155:0;1571:177:1;72718:217:0;;;;;;;;;;-1:-1:-1;72718:217:0;;;;;:::i;:::-;;:::i;72245:465::-;;;;;;;;;;;;;:::i;26802:249::-;;;;;;;;;;-1:-1:-1;26802:249:0;;;;;:::i;:::-;;:::i;69912:800::-;;;;;;;;;;-1:-1:-1;69912:800:0;;;;;:::i;:::-;;:::i;72943:171::-;;;;;;;;;;-1:-1:-1;72943:171:0;;;;;:::i;:::-;;:::i;24526:84::-;;;;;;;;;;-1:-1:-1;24526:84:0;;24600:2;4843:36:1;;4831:2;4816:18;24526:84:0;4701:184:1;78413:93:0;;;;;;;;;;-1:-1:-1;78413:93:0;;;;;:::i;:::-;;:::i;60134:217::-;;;;;;:::i;:::-;;:::i;59667:136::-;;;;;;;;;;;;;:::i;70720:238::-;;;;;;;;;;-1:-1:-1;70720:238:0;;;;;:::i;:::-;;:::i;71947:290::-;;;;;;;;;;-1:-1:-1;71947:290:0;;;;;:::i;:::-;;:::i;71703:236::-;;;;;;;;;;;;;:::i;24893:174::-;;;;;;;;;;-1:-1:-1;24893:174:0;;;;;:::i;:::-;;:::i;36362:103::-;;;;;;;;;;;;;:::i;35627:147::-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;6866:32:1;;;6848:51;;6836:2;6821:18;35627:147:0;6702:203:1;76326:402:0;;;;;;;;;;;;;:::i;23727:151::-;;;;;;;;;;;;;:::i;78237:170::-;;;;;;;;;;-1:-1:-1;78237:170:0;;;;;:::i;:::-;;:::i;25272:182::-;;;;;;;;;;-1:-1:-1;25272:182:0;;;;;:::i;:::-;;:::i;57735:58::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;57735:58:0;;;;;73122:485;;;;;;;;;;-1:-1:-1;73444:6:0;;73465:7;;73487:14;;73516:18;;73549:12;;73576;;73122:485;;;7197:25:1;;;7253:2;7238:18;;7231:34;;;;7281:18;;;7274:34;;;;7339:2;7324:18;;7317:34;7382:3;7367:19;;7360:35;7426:3;7411:19;;7404:35;7184:3;7169:19;73122:485:0;6910:535:1;67175:2186:0;;;;;;;;;;-1:-1:-1;67175:2186:0;;;;;:::i;:::-;;:::i;78133:98::-;;;;;;;;;;-1:-1:-1;78133:98:0;;;;;:::i;:::-;;:::i;66030:23::-;;;;;;;;;;;;;;;;25517:198;;;;;;;;;;-1:-1:-1;25517:198:0;;;;;:::i;:::-;;:::i;70966:263::-;;;;;;;;;;-1:-1:-1;70966:263:0;;;;;:::i;:::-;;:::i;36620:220::-;;;;;;;;;;-1:-1:-1;36620:220:0;;;;;:::i;:::-;;:::i;69530:374::-;;;;;;;;;;;;;:::i;71237:310::-;35513:13;:11;:13::i;:::-;71411:5:::1;71391:16;71375:13;-1:-1:-1::0;;;;;;;;;;;24808:14:0;;24675:155;71375:13:::1;:32;;;;:::i;:::-;71374:42;;;;:::i;:::-;71359:12;:57:::0;71473:5:::1;71459:10:::0;71443:13:::1;-1:-1:-1::0;;;;;;;;;;;24808:14:0;;24675:155;71443:13:::1;:26;;;;:::i;:::-;71442:36;;;;:::i;:::-;71427:12;:51:::0;71494:45:::1;::::0;;8544:25:1;;;8600:2;8585:18;;8578:34;;;71494:45:0::1;::::0;8517:18:1;71494:45:0::1;;;;;;;;71237:310:::0;;:::o;23461:147::-;23593:7;23586:14;;23506:13;;-1:-1:-1;;;;;;;;;;;22786:20:0;23586:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23461:147;:::o;71555:140::-;35513:13;:11;:13::i;:::-;71612:10:::1;::::0;-1:-1:-1;;;71612:10:0;::::1;;;71604:54;;;::::0;-1:-1:-1;;;71604:54:0;;9210:2:1;71604:54:0::1;::::0;::::1;9192:21:1::0;9249:2;9229:18;;;9222:30;9288:33;9268:18;;;9261:61;9339:18;;71604:54:0::1;;;;;;;;;71669:10;:18:::0;;-1:-1:-1;;;;71669:18:0::1;::::0;;71555:140::o;26034:190::-;26107:4;13742:10;26163:31;13742:10;26179:7;26188:5;26163:8;:31::i;:::-;26212:4;26205:11;;;26034:190;;;;;:::o;72718:217::-;35513:13;:11;:13::i;:::-;72836:9:::1;72831:97;72851:17:::0;;::::1;72831:97;;;72910:6;72890;:17;72897:6;;72904:1;72897:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;72890:17:0::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;72890:17:0;:26;;-1:-1:-1;;72890:26:0::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;72870:3:0::1;72831:97;;;;72718:217:::0;;;:::o;72245:465::-;72308:7;:5;:7::i;:::-;-1:-1:-1;;;;;72294:21:0;:10;-1:-1:-1;;;;;72294:21:0;;72286:63;;;;-1:-1:-1;;;72286:63:0;;9702:2:1;72286:63:0;;;9684:21:1;9741:2;9721:18;;;9714:30;9780:31;9760:18;;;9753:59;9829:18;;72286:63:0;9500:353:1;72286:63:0;72360:10;72373:25;72397:1;72373:21;:25;:::i;:::-;72409:11;;:27;;72360:38;;-1:-1:-1;;;;;;72409:11:0;;:27;;;;;72360:38;;72409:11;:27;:11;:27;72360:38;72409:11;:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;72447:11:0;;:27;;-1:-1:-1;;;;;72447:11:0;;;;:27;;;;;72468:5;;72447:11;:27;:11;:27;72468:5;72447:11;:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;72485:11:0;;:27;;-1:-1:-1;;;;;72485:11:0;;;;:27;;;;;72506:5;;72485:11;:27;:11;:27;72506:5;72485:11;:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;72523:11:0;;:27;;-1:-1:-1;;;;;72523:11:0;;;;:27;;;;;72544:5;;72523:11;:27;:11;:27;72544:5;72523:11;:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;72561:11:0;;:27;;-1:-1:-1;;;;;72561:11:0;;;;:27;;;;;72582:5;;72561:11;:27;:11;:27;72582:5;72561:11;:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;72599:11:0;;:27;;-1:-1:-1;;;;;72599:11:0;;;;:27;;;;;72620:5;;72599:11;:27;:11;:27;72620:5;72599:11;:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;72637:11:0;;:27;;-1:-1:-1;;;;;72637:11:0;;;;:27;;;;;72658:5;;72637:11;:27;:11;:27;72658:5;72637:11;:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;72675:11:0;;:27;;-1:-1:-1;;;;;72675:11:0;;;;:27;;;;;72696:5;;72675:11;:27;:11;:27;72696:5;72675:11;:27;;;;;;;;;;;;;;;;;;;;;72275:435;72245:465::o;26802:249::-;26889:4;13742:10;26947:37;26963:4;13742:10;26978:5;26947:15;:37::i;:::-;26995:26;27005:4;27011:2;27015:5;26995:9;:26::i;:::-;27039:4;27032:11;;;26802:249;;;;;;:::o;69912:800::-;35513:13;:11;:13::i;:::-;70233:11:::1;:24:::0;;-1:-1:-1;;;;;70233:24:0;;::::1;-1:-1:-1::0;;;;;;70233:24:0;;::::1;::::0;::::1;::::0;;;70268:11:::1;:24:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;70303:11:::1;:24:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;70338:11:::1;:24:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;70373:11:::1;:24:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;70408:11:::1;:24:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;70443:11:::1;:24:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;70478:11:::1;:24:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;70520:184:::1;::::0;;10367:34:1;;;10432:2;10417:18;;10410:43;;;;10469:18;;;10462:43;;;;10536:2;10521:18;;10514:43;10588:3;10573:19;;10566:44;10347:3;10626:19;;10619:44;10694:3;10679:19;;10672:44;;;;10747:3;10732:19;;10725:44;70520:184:0::1;::::0;10316:3:1;10301:19;70520:184:0::1;;;;;;;69912:800:::0;;;;;;;;:::o;72943:171::-;35513:13;:11;:13::i;:::-;-1:-1:-1;;;;;73022:27:0;::::1;:18;:27:::0;;;::::1;::::0;;;;;;;;:36;;-1:-1:-1;;73022:36:0::1;::::0;::::1;;::::0;;::::1;::::0;;;73074:32;;10948:51:1;;;11015:18;;;11008:50;73074:32:0::1;::::0;10921:18:1;73074:32:0::1;10780:284:1::0;78413:93:0;35513:13;:11;:13::i;:::-;78476:22:::1;78482:7;:5;:7::i;:::-;78491:6;78476:5;:22::i;:::-;78413:93:::0;:::o;60134:217::-;58589:13;:11;:13::i;:::-;60250:36:::1;60268:17;60250;:36::i;:::-;60297:46;60319:17;60338:4;60297:21;:46::i;59667:136::-:0;59736:7;58869:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;59667:136:0;:::o;70720:238::-;35513:13;:11;:13::i;:::-;70803:1:::1;70791:8;:13;;70783:56;;;::::0;-1:-1:-1;;;70783:56:0;;11271:2:1;70783:56:0::1;::::0;::::1;11253:21:1::0;11310:2;11290:18;;;11283:30;11349:32;11329:18;;;11322:60;11399:18;;70783:56:0::1;11069:354:1::0;70783:56:0::1;70896:4;70884:8;70868:13;-1:-1:-1::0;;;;;;;;;;;24808:14:0;;24675:155;70868:13:::1;:24;;;;:::i;:::-;70867:33;;;;:::i;:::-;70850:14;:50:::0;;;70916:34:::1;::::0;1717:25:1;;;70916:34:0::1;::::0;1705:2:1;1690:18;70916:34:0::1;;;;;;;;70720:238:::0;:::o;71947:290::-;35513:13;:11;:13::i;:::-;72044:2:::1;72034:6;:12;;72026:46;;;::::0;-1:-1:-1;;;72026:46:0;;11630:2:1;72026:46:0::1;::::0;::::1;11612:21:1::0;11669:2;11649:18;;;11642:30;-1:-1:-1;;;11688:18:1;;;11681:51;11749:18;;72026:46:0::1;11428:345:1::0;72026:46:0::1;72102:2;72091:7;:13;;72083:48;;;::::0;-1:-1:-1;;;72083:48:0;;11980:2:1;72083:48:0::1;::::0;::::1;11962:21:1::0;12019:2;11999:18;;;11992:30;-1:-1:-1;;;12038:18:1;;;12031:52;12100:18;;72083:48:0::1;11778:346:1::0;72083:48:0::1;72142:6;:15:::0;;;72168:7:::1;:17:::0;;;72201:28:::1;::::0;;8544:25:1;;;8600:2;8585:18;;8578:34;;;72201:28:0::1;::::0;8517:18:1;72201:28:0::1;8370:248:1::0;71703:236:0;35513:13;:11;:13::i;:::-;-1:-1:-1;;;;;;;;;;;24808:14:0;71754::::1;:30:::0;-1:-1:-1;;;;;;;;;;;24808:14:0;71795:18:::1;:34:::0;71845:33:::1;71864:13;-1:-1:-1::0;;;;;;;;;;;24808:14:0;;24675:155;71864:13:::1;71845:33;::::0;1717:25:1;;;1705:2;1690:18;71845:33:0::1;;;;;;;71894:37;71917:13;-1:-1:-1::0;;;;;;;;;;;24808:14:0;;24675:155;71917:13:::1;71894:37;::::0;1717:25:1;;;1705:2;1690:18;71894:37:0::1;;;;;;;71703:236::o:0;24893:174::-;-1:-1:-1;;;;;25039:20:0;24958:7;25039:20;;;-1:-1:-1;;;;;;;;;;;25039:20:0;;;;;;;24893:174::o;36362:103::-;35513:13;:11;:13::i;:::-;36427:30:::1;36454:1;36427:18;:30::i;:::-;36362:103::o:0;35627:147::-;34458:22;35758:8;-1:-1:-1;;;;;35758:8:0;;35627:147::o;76326:402::-;76406:7;:5;:7::i;:::-;-1:-1:-1;;;;;76391:22:0;:10;-1:-1:-1;;;;;76391:22:0;;76369:94;;;;-1:-1:-1;;;76369:94:0;;12331:2:1;76369:94:0;;;12313:21:1;12370:2;12350:18;;;12343:30;-1:-1:-1;;;12389:18:1;;;12382:52;12451:18;;76369:94:0;12129:346:1;76369:94:0;76474:28;76505:24;76523:4;76505:9;:24::i;:::-;76474:55;;76542:38;76559:20;76542:16;:38::i;:::-;76620:21;76656:22;;76652:69;;76695:14;:12;:14::i;23727:151::-;23861:9;23854:16;;23774:13;;-1:-1:-1;;;;;;;;;;;22786:20:0;23854:16;;;:::i;78237:170::-;35513:13;:11;:13::i;:::-;78333:8:::1;;78323:6;78308:12;;:21;;;;:::i;:::-;:33;;78300:66;;;::::0;-1:-1:-1;;;78300:66:0;;12812:2:1;78300:66:0::1;::::0;::::1;12794:21:1::0;12851:2;12831:18;;;12824:30;-1:-1:-1;;;12870:18:1;;;12863:50;12930:18;;78300:66:0::1;12610:344:1::0;78300:66:0::1;78377:22;78383:7;:5;:7::i;:::-;78392:6;78377:5;:22::i;25272:182::-:0;25341:4;13742:10;25397:27;13742:10;25414:2;25418:5;25397:9;:27::i;67175:2186::-;12724:21;8040:15;;-1:-1:-1;;;8040:15:0;;;;8039:16;;8087:14;;7893:30;8472:16;;:34;;;;;8492:14;8472:34;8452:54;;8517:17;8537:11;:16;;8552:1;8537:16;:50;;;;-1:-1:-1;8565:4:0;8557:25;:30;8537:50;8517:70;;8605:12;8604:13;:30;;;;;8622:12;8621:13;8604:30;8600:93;;;8658:23;;-1:-1:-1;;;8658:23:0;;;;;;;;;;;8600:93;8703:18;;-1:-1:-1;;8703:18:0;8720:1;8703:18;;;8732:69;;;;8767:22;;-1:-1:-1;;;;8767:22:0;-1:-1:-1;;;8767:22:0;;;8732:69;67247:30:::1;;;;;;;;;;;;;;-1:-1:-1::0;;;67247:30:0::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;67247:30:0::1;;::::0;:12:::1;:30::i;:::-;67288:28;67303:12;67288:14;:28::i;:::-;67327:24;:22;:24::i;:::-;67377:30;67362:12;:45:::0;;;67429:32:::1;67418:8;:43:::0;67511:4:::1;::::0;67490:17:::1;::::0;67505:2:::1;67490:17;:::i;:::-;67489:26;;;;:::i;:::-;67472:14;:43:::0;67548:12:::1;::::0;67569:4:::1;::::0;67548:17:::1;::::0;67563:2:::1;67548:17;:::i;:::-;67547:26;;;;:::i;:::-;67526:18;:47:::0;67600:12:::1;::::0;67620:5:::1;::::0;67600:16:::1;::::0;67615:1:::1;67600:16;:::i;:::-;67599:26;;;;:::i;:::-;67584:12;:41:::0;67652:12:::1;::::0;67674:5:::1;::::0;67652:18:::1;::::0;67667:3:::1;67652:18;:::i;:::-;67651:28;;;;:::i;:::-;67636:12;:43:::0;67699:2:::1;67690:6;:11:::0;67722:2:::1;67712:7;:12:::0;67756:1:::1;67735:18;:22:::0;;;-1:-1:-1;67768:9:0::1;:13:::0;;;67808:4:::1;67792:22:::0;;;:6:::1;:22;::::0;;;;;:29;;-1:-1:-1;;67792:29:0::1;::::0;;::::1;::::0;;;67833:15:::1;:153:::0;;-1:-1:-1;;;;;;67833:153:0::1;67933:42;67833:153:::0;;::::1;::::0;;;67997:64:::1;::::0;67808:4;68047:13:::1;-1:-1:-1::0;;;;;;;;;;;24808:14:0;;24675:155;68047:13:::1;67997:8;:64::i;:::-;68100:15;;;;;;;;;-1:-1:-1::0;;;;;68100:15:0::1;-1:-1:-1::0;;;;;68100:23:0::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;68088:49:0::1;;68160:4;68180:15;;;;;;;;;-1:-1:-1::0;;;;;68180:15:0::1;-1:-1:-1::0;;;;;68180:20:0::1;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;68088:125;::::0;-1:-1:-1;;;;;;68088:125:0::1;::::0;;;;;;-1:-1:-1;;;;;13445:15:1;;;68088:125:0::1;::::0;::::1;13427:34:1::0;13497:15;;13477:18;;;13470:43;13362:18;;68088:125:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;68072:13;:141:::0;;-1:-1:-1;;;;;68072:141:0;;;::::1;-1:-1:-1::0;;;;;;68072:141:0;;::::1;;::::0;;;68224:65;;;::::1;68246:42;68224:65:::0;;::::1;::::0;;68300:11:::1;:65:::0;;;::::1;::::0;::::1;::::0;;68376:11:::1;:65:::0;;;::::1;::::0;::::1;::::0;;68452:11:::1;:65:::0;;;::::1;::::0;::::1;::::0;;68528:11:::1;:65:::0;;;::::1;::::0;::::1;::::0;;68604:11:::1;:65:::0;;;::::1;::::0;::::1;::::0;;68680:11:::1;:65:::0;;;::::1;::::0;::::1;::::0;;68756:11:::1;:65:::0;;;;::::1;;::::0;;;68072:13:::1;::::0;68851:7:::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;68832:27:0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;68832:27:0;;;:34;;;::::1;;-1:-1:-1::0;;68832:34:0;;::::1;;::::0;;68904:4:::1;68877:33:::0;;;;;;;;;:40;;;::::1;68832:34:::0;68877:40;;::::1;::::0;;;68947:11;;;::::1;68928:31:::0;;;;;:38;;;::::1;::::0;::::1;::::0;;68996:11:::1;::::0;;::::1;68977:31:::0;;;;;:38;;;::::1;::::0;::::1;::::0;;69045:11:::1;::::0;;::::1;69026:31:::0;;;;;:38;;;::::1;::::0;::::1;::::0;;69094:11:::1;::::0;;::::1;69075:31:::0;;;;;:38;;;::::1;::::0;::::1;::::0;;69143:11:::1;::::0;;::::1;69124:31:::0;;;;;:38;;;::::1;::::0;::::1;::::0;;69192:11:::1;::::0;;::::1;69173:31:::0;;;;;:38;;;::::1;::::0;::::1;::::0;;69241:11:::1;::::0;;::::1;69222:31:::0;;;;;:38;;;::::1;::::0;::::1;::::0;;69290:11:::1;::::0;;;::::1;69271:31:::0;;;;:38;;;;::::1;;::::0;;69340:12:::1;::::0;69322:31:::1;::::0;69328:10:::1;::::0;69322:5:::1;:31::i;:::-;8827:14:::0;8823:104;;;8858:23;;-1:-1:-1;;;;8858:23:0;;;8901:14;;-1:-1:-1;13677:50:1;;8901:14:0;;13665:2:1;13650:18;8901:14:0;;;;;;;8823:104;7825:1109;;;;;67175:2186;:::o;78133:98::-;35513:13;:11;:13::i;:::-;78206:8:::1;:17:::0;78133:98::o;25517:198::-;-1:-1:-1;;;;;25678:20:0;;;25597:7;25678:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;25517:198::o;70966:263::-;35513:13;:11;:13::i;:::-;71058:1:::1;71046:8;:13;;71038:60;;;::::0;-1:-1:-1;;;71038:60:0;;13940:2:1;71038:60:0::1;::::0;::::1;13922:21:1::0;13979:2;13959:18;;;13952:30;14018:34;13998:18;;;13991:62;-1:-1:-1;;;14069:18:1;;;14062:32;14111:19;;71038:60:0::1;13738:398:1::0;71038:60:0::1;71159:4;71147:8;71131:13;-1:-1:-1::0;;;;;;;;;;;24808:14:0;;24675:155;71131:13:::1;:24;;;;:::i;:::-;71130:33;;;;:::i;:::-;71109:18;:54:::0;;;71179:42:::1;::::0;1717:25:1;;;71179:42:0::1;::::0;1705:2:1;1690:18;71179:42:0::1;1571:177:1::0;36620:220:0;35513:13;:11;:13::i;:::-;-1:-1:-1;;;;;36705:22:0;::::1;36701:93;;36751:31;::::0;-1:-1:-1;;;36751:31:0;;36779:1:::1;36751:31;::::0;::::1;6848:51:1::0;6821:18;;36751:31:0::1;6702:203:1::0;36701:93:0::1;36804:28;36823:8;36804:18;:28::i;69530:374::-:0;35513:13;:11;:13::i;:::-;69585:11:::1;::::0;-1:-1:-1;;;69585:11:0;::::1;;;69584:12;69576:48;;;::::0;-1:-1:-1;;;69576:48:0;;14343:2:1;69576:48:0::1;::::0;::::1;14325:21:1::0;14382:2;14362:18;;;14355:30;14421:25;14401:18;;;14394:53;14464:18;;69576:48:0::1;14141:347:1::0;69576:48:0::1;69635:11;:18:::0;;-1:-1:-1;;;;69664:18:0;-1:-1:-1;;;69664:18:0;;;69706:12:::1;69693:10;:25:::0;;;69729:15:::1;:38:::0;;-1:-1:-1;;69729:38:0::1;;::::0;;::::1;::::0;;;::::1;::::0;;69805:4:::1;-1:-1:-1::0;69778:33:0;;;::::1;::::0;;;;;;;:40;;-1:-1:-1;;69778:40:0::1;-1:-1:-1::0;69778:40:0::1;::::0;;69838:2:::1;-1:-1:-1::0;69829:11:0;69861:2:::1;69851:7;:12:::0;69881:15;::::1;::::0;-1:-1:-1;69881:15:0::1;69530:374::o:0;35852:166::-;13742:10;35912:7;:5;:7::i;:::-;-1:-1:-1;;;;;35912:23:0;;35908:103;;35959:40;;-1:-1:-1;;;35959:40:0;;13742:10;35959:40;;;6848:51:1;6821:18;;35959:40:0;6702:203:1;30933:130:0;31018:37;31027:5;31034:7;31043:5;31050:4;31018:8;:37::i;:::-;30933:130;;;:::o;32705:487::-;32805:24;32832:25;32842:5;32849:7;32832:9;:25::i;:::-;32805:52;;-1:-1:-1;;32872:16:0;:37;32868:317;;32949:5;32930:16;:24;32926:132;;;32982:60;;-1:-1:-1;;;32982:60:0;;-1:-1:-1;;;;;14713:32:1;;32982:60:0;;;14695:51:1;14762:18;;;14755:34;;;14805:18;;;14798:34;;;14668:18;;32982:60:0;14493:345:1;32926:132:0;33101:57;33110:5;33117:7;33145:5;33126:16;:24;33152:5;33101:8;:57::i;73615:2385::-;-1:-1:-1;;;;;73755:18:0;;73747:68;;;;-1:-1:-1;;;73747:68:0;;15045:2:1;73747:68:0;;;15027:21:1;15084:2;15064:18;;;15057:30;15123:34;15103:18;;;15096:62;-1:-1:-1;;;15174:18:1;;;15167:35;15219:19;;73747:68:0;14843:401:1;73747:68:0;-1:-1:-1;;;;;73834:16:0;;73826:64;;;;-1:-1:-1;;;73826:64:0;;15451:2:1;73826:64:0;;;15433:21:1;15490:2;15470:18;;;15463:30;15529:34;15509:18;;;15502:62;-1:-1:-1;;;15580:18:1;;;15573:33;15623:19;;73826:64:0;15249:399:1;73826:64:0;73918:1;73909:6;:10;73901:64;;;;-1:-1:-1;;;73901:64:0;;15855:2:1;73901:64:0;;;15837:21:1;15894:2;15874:18;;;15867:30;15933:34;15913:18;;;15906:62;-1:-1:-1;;;15984:18:1;;;15977:39;16033:19;;73901:64:0;15653:405:1;73901:64:0;73976:17;74020:7;:5;:7::i;:::-;-1:-1:-1;;;;;74012:15:0;:4;-1:-1:-1;;;;;74012:15:0;;;:32;;;;;74037:7;:5;:7::i;:::-;-1:-1:-1;;;;;74031:13:0;:2;-1:-1:-1;;;;;74031:13:0;;;74012:32;:43;;;;-1:-1:-1;74049:6:0;;-1:-1:-1;;;74049:6:0;;;;74048:7;74012:43;74008:1822;;;74076:10;;-1:-1:-1;;;74076:10:0;;;;74072:89;;;-1:-1:-1;;;;;74114:12:0;;;;;;:6;:12;;;;;;;;;:26;;-1:-1:-1;;;;;;74130:10:0;;;;;;:6;:10;;;;;;;;74114:26;74106:39;;;;-1:-1:-1;;;74106:39:0;;16265:2:1;74106:39:0;;;16247:21:1;-1:-1:-1;16284:18:1;;;16277:29;16323:18;;74106:39:0;16063:284:1;74106:39:0;74210:3;74199:6;;74189;:17;;;;:::i;:::-;:25;;;;:::i;:::-;74261:13;;74177:37;;-1:-1:-1;;;;;;74253:21:0;;;74261:13;;74253:21;:72;;;;-1:-1:-1;74309:15:0;;-1:-1:-1;;;;;74295:30:0;;;74309:15;;74295:30;;74253:72;:116;;;;-1:-1:-1;;;;;;74347:22:0;;:18;:22;;;;;;;;;;;;;74346:23;74253:116;74231:568;;;74422:14;;74412:6;:24;;74404:64;;;;-1:-1:-1;;;74404:64:0;;16554:2:1;74404:64:0;;;16536:21:1;16593:2;16573:18;;;16566:30;16632:29;16612:18;;;16605:57;16679:18;;74404:64:0;16352:351:1;74404:64:0;74543:18;;74533:6;74517:13;74527:2;74517:9;:13::i;:::-;:22;;;;:::i;:::-;:44;;74487:144;;;;-1:-1:-1;;;74487:144:0;;16910:2:1;74487:144:0;;;16892:21:1;16949:2;16929:18;;;16922:30;16988:28;16968:18;;;16961:56;17034:18;;74487:144:0;16708:350:1;74487:144:0;74673:12;74656:10;;74669:1;74656:14;;;;:::i;:::-;:29;74652:102;;;76254:20;;76302:8;74710:24;;;;;;74772:9;:11;;;:9;:11;;;:::i;:::-;;;;;;74231:568;74825:13;;-1:-1:-1;;;;;74819:19:0;;;74825:13;;74819:19;;;;:46;;-1:-1:-1;;;;;;74843:22:0;;:18;:22;;;;;;;;;;;;;74842:23;74819:46;74815:231;;;74942:18;;74932:6;74916:13;74926:2;74916:9;:13::i;:::-;:22;;;;:::i;:::-;:44;;74886:144;;;;-1:-1:-1;;;74886:144:0;;16910:2:1;74886:144:0;;;16892:21:1;16949:2;16929:18;;;16922:30;16988:28;16968:18;;;16961:56;17034:18;;74886:144:0;16708:350:1;74886:144:0;75072:13;;-1:-1:-1;;;;;75066:19:0;;;75072:13;;75066:19;:44;;;;-1:-1:-1;;;;;;75089:21:0;;75105:4;75089:21;;75066:44;75062:123;;;75165:3;75153:7;;75143:6;:18;;;;:::i;:::-;:26;;;;:::i;:::-;75131:38;;75062:123;75201:28;75232:24;75250:4;75232:9;:24::i;:::-;75294:6;;75201:55;;-1:-1:-1;;;;75294:6:0;;;;75293:7;:47;;;;-1:-1:-1;75327:13:0;;-1:-1:-1;;;;;75321:19:0;;;75327:13;;75321:19;75293:47;:79;;;;-1:-1:-1;75361:11:0;;-1:-1:-1;;;75361:11:0;;;;75293:79;:135;;;;;75416:12;;75393:20;:35;75293:135;:186;;;;;75461:18;;75449:9;;:30;75293:186;:246;;;;-1:-1:-1;75500:15:0;;75526:12;75500:39;;;;:15;;:39;;75293:246;75271:548;;;75574:57;75591:39;75595:20;75617:12;;75591:3;:39::i;:::-;75574:16;:57::i;:::-;75679:21;75723:22;;75719:85;;75770:14;:12;:14::i;:::-;75555:264;75271:548;74057:1773;74008:1822;75846:13;;75842:93;;75876:47;75892:4;75906;75913:9;75876:15;:47::i;:::-;75945;75961:4;75967:2;75971:20;75981:9;75971:6;:20;:::i;:::-;75945:15;:47::i;30169:211::-;-1:-1:-1;;;;;30240:21:0;;30236:91;;30285:30;;-1:-1:-1;;;30285:30:0;;30312:1;30285:30;;;6848:51:1;6821:18;;30285:30:0;6702:203:1;30236:91:0;30337:35;30345:7;30362:1;30366:5;30337:7;:35::i;60585:319::-;60667:4;-1:-1:-1;;;;;60676:6:0;60659:23;;;:121;;;60774:6;-1:-1:-1;;;;;60738:42:0;:32;-1:-1:-1;;;;;;;;;;;51239:53:0;-1:-1:-1;;;;;51239:53:0;;51160:140;60738:32;-1:-1:-1;;;;;60738:42:0;;;60659:121;60641:256;;;60856:29;;-1:-1:-1;;;60856:29:0;;;;;;;;;;;69369:116;35513:13;:11;:13::i;62078:548::-;62196:17;-1:-1:-1;;;;;62178:50:0;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;62178:52:0;;;;;;;;-1:-1:-1;;62178:52:0;;;;;;;;;;;;:::i;:::-;;;62174:445;;62547:60;;-1:-1:-1;;;62547:60:0;;-1:-1:-1;;;;;6866:32:1;;62547:60:0;;;6848:51:1;6821:18;;62547:60:0;6702:203:1;62174:445:0;-1:-1:-1;;;;;;;;;;;62273:40:0;;62269:122;;62341:34;;-1:-1:-1;;;62341:34:0;;;;;1717:25:1;;;1690:18;;62341:34:0;1571:177:1;62269:122:0;62405:54;62435:17;62454:4;62405:29;:54::i;61027:218::-;61102:4;-1:-1:-1;;;;;61111:6:0;61094:23;;61090:148;;61197:29;;-1:-1:-1;;;61197:29:0;;;;;;;;;;;37000:253;34458:22;37151:8;;-1:-1:-1;;;;;;37170:19:0;;-1:-1:-1;;;;;37170:19:0;;;;;;;;37205:40;;37151:8;;;;;37205:40;;37074:24;;37205:40;37063:190;;37000:253;:::o;76736:532::-;66989:6;:13;;-1:-1:-1;;;;66989:13:0;-1:-1:-1;;;66989:13:0;;;76814:15:::1;:38:::0;;::::1;76839:12;76814:38;-1:-1:-1::0;;76814:38:0;;::::1;;::::0;;76887:16:::1;::::0;;76901:1:::1;76887:16:::0;;;;;::::1;::::0;;-1:-1:-1;;76887:16:0::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;76887:16:0::1;76863:40;;76932:4;76914;76919:1;76914:7;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;76914:23:0;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;76958:15:::1;::::0;:22:::1;::::0;;-1:-1:-1;;;76958:22:0;;;;:15;;;::::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;76914:7;;76958:22;;;;;:15;:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;76948:4;76953:1;76948:7;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;76948:32:0;;::::1;:7;::::0;;::::1;::::0;;;;;:32;77023:15:::1;::::0;76991:62:::1;::::0;77008:4:::1;::::0;77023:15:::1;77041:11:::0;76991:8:::1;:62::i;:::-;77064:15;::::0;:196:::1;::::0;-1:-1:-1;;;77064:196:0;;-1:-1:-1;;;;;77064:15:0;;::::1;::::0;:66:::1;::::0;:196:::1;::::0;77145:11;;77064:15:::1;::::0;77187:4;;77214::::1;::::0;77234:15:::1;::::0;77064:196:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;67025:6:0;:14;;-1:-1:-1;;;;67025:14:0;;;-1:-1:-1;;;;76736:532:0:o;77276:851::-;77319:12;;77358:25;77382:1;77358:21;:25;:::i;:::-;77416:11;;77408:67;;77342:41;;-1:-1:-1;;;;;;77416:11:0;;77342:41;;77408:67;;;;77342:41;77416:11;77408:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;77508:11:0;;77500:67;;77394:81;;-1:-1:-1;;;;;;77508:11:0;;77533:5;;77500:67;;;;77533:5;77508:11;77500:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;77600:11:0;;77592:67;;77486:81;;-1:-1:-1;;;;;;77600:11:0;;77625:5;;77592:67;;;;77625:5;77600:11;77592:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;77692:11:0;;77684:67;;77578:81;;-1:-1:-1;;;;;;77692:11:0;;77717:5;;77684:67;;;;77717:5;77692:11;77684:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;77784:11:0;;77776:67;;77670:81;;-1:-1:-1;;;;;;77784:11:0;;77809:5;;77776:67;;;;77809:5;77784:11;77776:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;77876:11:0;;77868:67;;77762:81;;-1:-1:-1;;;;;;77876:11:0;;77901:5;;77868:67;;;;77901:5;77876:11;77868:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;77968:11:0;;77960:67;;77854:81;;-1:-1:-1;;;;;;77968:11:0;;77993:5;;77960:67;;;;77993:5;77968:11;77960:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;78060:11:0;;78052:67;;77946:81;;-1:-1:-1;;;;;;78060:11:0;;78085:5;;78052:67;;;;78085:5;78060:11;78052:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;77276:851:0:o;29628:213::-;-1:-1:-1;;;;;29699:21:0;;29695:93;;29744:32;;-1:-1:-1;;;29744:32:0;;29773:1;29744:32;;;6848:51:1;6821:18;;29744:32:0;6702:203:1;29695:93:0;29798:35;29814:1;29818:7;29827:5;29798:7;:35::i;23014:149::-;10731:20;:18;:20::i;:::-;23117:38:::1;23140:5;23147:7;23117:22;:38::i;35011:129::-:0;10731:20;:18;:20::i;:::-;35094:38:::1;35119:12;35094:24;:38::i;58917:68::-:0;10731:20;:18;:20::i;31914:499::-;-1:-1:-1;;;;;;;;;;;;;;;;32081:19:0;;32077:91;;32124:32;;-1:-1:-1;;;32124:32:0;;32153:1;32124:32;;;6848:51:1;6821:18;;32124:32:0;6702:203:1;32077:91:0;-1:-1:-1;;;;;32182:21:0;;32178:92;;32227:31;;-1:-1:-1;;;32227:31:0;;32255:1;32227:31;;;6848:51:1;6821:18;;32227:31:0;6702:203:1;32178:92:0;-1:-1:-1;;;;;32280:20:0;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;32328:78;;;;32379:7;-1:-1:-1;;;;;32363:31:0;32372:5;-1:-1:-1;;;;;32363:31:0;;32388:5;32363:31;;;;1717:25:1;;1705:2;1690:18;;1571:177;32363:31:0;;;;;;;;32012:401;31914:499;;;;:::o;76008:107::-;76065:7;76097:1;76093;:5;76092:15;;76106:1;76092:15;;;-1:-1:-1;76102:1:0;76085:22;-1:-1:-1;76008:107:0:o;27436:316::-;-1:-1:-1;;;;;27528:18:0;;27524:88;;27570:30;;-1:-1:-1;;;27570:30:0;;27597:1;27570:30;;;6848:51:1;6821:18;;27570:30:0;6702:203:1;27524:88:0;-1:-1:-1;;;;;27626:16:0;;27622:88;;27666:32;;-1:-1:-1;;;27666:32:0;;27695:1;27666:32;;;6848:51:1;6821:18;;27666:32:0;6702:203:1;27622:88:0;27720:24;27728:4;27734:2;27738:5;28076:1199;-1:-1:-1;;;;;;;;;;;;;;;;28220:18:0;;28216:558;;28376:5;28358:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;28216:558:0;;-1:-1:-1;28216:558:0;;-1:-1:-1;;;;;28436:17:0;;28414:19;28436:17;;;;;;;;;;;28472:19;;;28468:117;;;28519:50;;-1:-1:-1;;;28519:50:0;;-1:-1:-1;;;;;14713:32:1;;28519:50:0;;;14695:51:1;14762:18;;;14755:34;;;14805:18;;;14798:34;;;14668:18;;28519:50:0;14493:345:1;28468:117:0;-1:-1:-1;;;;;28708:17:0;;:11;:17;;;;;;;;;;28728:19;;;;28708:39;;28216:558;-1:-1:-1;;;;;28790:16:0;;28786:439;;28956:14;;;:23;;;;;;;28786:439;;;-1:-1:-1;;;;;29174:15:0;;:11;:15;;;;;;;;;;:24;;;;;;28786:439;29257:2;-1:-1:-1;;;;;29242:25:0;29251:4;-1:-1:-1;;;;;29242:25:0;;29261:5;29242:25;;;;1717::1;;1705:2;1690:18;;1571:177;29242:25:0;;;;;;;;28151:1124;28076:1199;;;:::o;52003:344::-;52095:37;52114:17;52095:18;:37::i;:::-;52148:27;;-1:-1:-1;;;;;52148:27:0;;;;;;;;52192:11;;:15;52188:152;;52224:53;52253:17;52272:4;52224:28;:53::i;52188:152::-;52310:18;:16;:18::i;10891:145::-;12724:21;12405:40;-1:-1:-1;;;12405:40:0;;;;10954:75;;11000:17;;-1:-1:-1;;;11000:17:0;;;;;;;;;;;23171:220;10731:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;23338:7:0;:15:::1;23348:5:::0;23338:7;:15:::1;:::i;:::-;-1:-1:-1::0;23364:9:0::1;::::0;::::1;:19;23376:7:::0;23364:9;:19:::1;:::i;35148:240::-:0;10731:20;:18;:20::i;51396:286::-;51474:17;-1:-1:-1;;;;;51474:29:0;;51507:1;51474:34;51470:121;;51532:47;;-1:-1:-1;;;51532:47:0;;-1:-1:-1;;;;;6866:32:1;;51532:47:0;;;6848:51:1;6821:18;;51532:47:0;6702:203:1;51470:121:0;-1:-1:-1;;;;;;;;;;;51601:73:0;;-1:-1:-1;;;;;;51601:73:0;-1:-1:-1;;;;;51601:73:0;;;;;;;;;;51396:286::o;42949:256::-;43032:12;43058;43072:23;43099:6;-1:-1:-1;;;;;43099:19:0;43119:4;43099:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43057:67;;;;43142:55;43169:6;43177:7;43186:10;43142:26;:55::i;:::-;43135:62;42949:256;-1:-1:-1;;;;;42949:256:0:o;55927:126::-;55978:9;:13;55974:72;;56015:19;;-1:-1:-1;;;56015:19:0;;;;;;;;;;;43478:597;43626:12;43656:7;43651:417;;43680:19;43688:10;43680:7;:19::i;:::-;43651:417;;;43908:17;;:22;:49;;;;-1:-1:-1;;;;;;43934:18:0;;;:23;43908:49;43904:121;;;43985:24;;-1:-1:-1;;;43985:24:0;;-1:-1:-1;;;;;6866:32:1;;43985:24:0;;;6848:51:1;6821:18;;43985:24:0;6702:203:1;43904:121:0;-1:-1:-1;44046:10:0;44039:17;;44628:528;44761:17;;:21;44757:392;;44993:10;44987:17;45050:15;45037:10;45033:2;45029:19;45022:44;44757:392;45120:17;;-1:-1:-1;;;45120:17:0;;;;;;;;;;;14:248:1;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:1;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:1:o;267:250::-;352:1;362:113;376:6;373:1;370:13;362:113;;;452:11;;;446:18;433:11;;;426:39;398:2;391:10;362:113;;;-1:-1:-1;;509:1:1;491:16;;484:27;267:250::o;522:396::-;671:2;660:9;653:21;634:4;703:6;697:13;746:6;741:2;730:9;726:18;719:34;762:79;834:6;829:2;818:9;814:18;809:2;801:6;797:15;762:79;:::i;:::-;902:2;881:15;-1:-1:-1;;877:29:1;862:45;;;;909:2;858:54;;522:396;-1:-1:-1;;522:396:1:o;923:131::-;-1:-1:-1;;;;;998:31:1;;988:42;;978:70;;1044:1;1041;1034:12;1059:315;1127:6;1135;1188:2;1176:9;1167:7;1163:23;1159:32;1156:52;;;1204:1;1201;1194:12;1156:52;1243:9;1230:23;1262:31;1287:5;1262:31;:::i;:::-;1312:5;1364:2;1349:18;;;;1336:32;;-1:-1:-1;;;1059:315:1:o;1753:160::-;1818:20;;1874:13;;1867:21;1857:32;;1847:60;;1903:1;1900;1893:12;1847:60;1753:160;;;:::o;1918:689::-;2010:6;2018;2026;2079:2;2067:9;2058:7;2054:23;2050:32;2047:52;;;2095:1;2092;2085:12;2047:52;2135:9;2122:23;2164:18;2205:2;2197:6;2194:14;2191:34;;;2221:1;2218;2211:12;2191:34;2259:6;2248:9;2244:22;2234:32;;2304:7;2297:4;2293:2;2289:13;2285:27;2275:55;;2326:1;2323;2316:12;2275:55;2366:2;2353:16;2392:2;2384:6;2381:14;2378:34;;;2408:1;2405;2398:12;2378:34;2463:7;2456:4;2446:6;2443:1;2439:14;2435:2;2431:23;2427:34;2424:47;2421:67;;;2484:1;2481;2474:12;2421:67;2515:4;2507:13;;;;-1:-1:-1;2539:6:1;-1:-1:-1;2564:37:1;;2580:20;;;-1:-1:-1;2564:37:1;:::i;:::-;2554:47;;1918:689;;;;;:::o;2612:456::-;2689:6;2697;2705;2758:2;2746:9;2737:7;2733:23;2729:32;2726:52;;;2774:1;2771;2764:12;2726:52;2813:9;2800:23;2832:31;2857:5;2832:31;:::i;:::-;2882:5;-1:-1:-1;2939:2:1;2924:18;;2911:32;2952:33;2911:32;2952:33;:::i;:::-;2612:456;;3004:7;;-1:-1:-1;;;3058:2:1;3043:18;;;;3030:32;;2612:456::o;3073:1303::-;3259:6;3267;3275;3283;3291;3299;3307;3315;3368:3;3356:9;3347:7;3343:23;3339:33;3336:53;;;3385:1;3382;3375:12;3336:53;3424:9;3411:23;3443:31;3468:5;3443:31;:::i;:::-;3493:5;-1:-1:-1;3550:2:1;3535:18;;3522:32;3563:33;3522:32;3563:33;:::i;:::-;3615:7;-1:-1:-1;3674:2:1;3659:18;;3646:32;3687:33;3646:32;3687:33;:::i;:::-;3739:7;-1:-1:-1;3798:2:1;3783:18;;3770:32;3811:33;3770:32;3811:33;:::i;:::-;3863:7;-1:-1:-1;3922:3:1;3907:19;;3894:33;3936;3894;3936;:::i;:::-;3988:7;-1:-1:-1;4047:3:1;4032:19;;4019:33;4061;4019;4061;:::i;:::-;4113:7;-1:-1:-1;4172:3:1;4157:19;;4144:33;4186;4144;4186;:::i;:::-;4238:7;-1:-1:-1;4297:3:1;4282:19;;4269:33;4311;4269;4311;:::i;:::-;4363:7;4353:17;;;3073:1303;;;;;;;;;;;:::o;4381:315::-;4446:6;4454;4507:2;4495:9;4486:7;4482:23;4478:32;4475:52;;;4523:1;4520;4513:12;4475:52;4562:9;4549:23;4581:31;4606:5;4581:31;:::i;:::-;4631:5;-1:-1:-1;4655:35:1;4686:2;4671:18;;4655:35;:::i;:::-;4645:45;;4381:315;;;;;:::o;4890:180::-;4949:6;5002:2;4990:9;4981:7;4977:23;4973:32;4970:52;;;5018:1;5015;5008:12;4970:52;-1:-1:-1;5041:23:1;;4890:180;-1:-1:-1;4890:180:1:o;5075:127::-;5136:10;5131:3;5127:20;5124:1;5117:31;5167:4;5164:1;5157:15;5191:4;5188:1;5181:15;5207:1056;5284:6;5292;5345:2;5333:9;5324:7;5320:23;5316:32;5313:52;;;5361:1;5358;5351:12;5313:52;5400:9;5387:23;5419:31;5444:5;5419:31;:::i;:::-;5469:5;-1:-1:-1;5525:2:1;5510:18;;5497:32;5548:18;5578:14;;;5575:34;;;5605:1;5602;5595:12;5575:34;5643:6;5632:9;5628:22;5618:32;;5688:7;5681:4;5677:2;5673:13;5669:27;5659:55;;5710:1;5707;5700:12;5659:55;5746:2;5733:16;5768:2;5764;5761:10;5758:36;;;5774:18;;:::i;:::-;5849:2;5843:9;5817:2;5903:13;;-1:-1:-1;;5899:22:1;;;5923:2;5895:31;5891:40;5879:53;;;5947:18;;;5967:22;;;5944:46;5941:72;;;5993:18;;:::i;:::-;6033:10;6029:2;6022:22;6068:2;6060:6;6053:18;6108:7;6103:2;6098;6094;6090:11;6086:20;6083:33;6080:53;;;6129:1;6126;6119:12;6080:53;6185:2;6180;6176;6172:11;6167:2;6159:6;6155:15;6142:46;6230:1;6225:2;6220;6212:6;6208:15;6204:24;6197:35;6251:6;6241:16;;;;;;;5207:1056;;;;;:::o;6450:247::-;6509:6;6562:2;6550:9;6541:7;6537:23;6533:32;6530:52;;;6578:1;6575;6568:12;6530:52;6617:9;6604:23;6636:31;6661:5;6636:31;:::i;7450:388::-;7518:6;7526;7579:2;7567:9;7558:7;7554:23;7550:32;7547:52;;;7595:1;7592;7585:12;7547:52;7634:9;7621:23;7653:31;7678:5;7653:31;:::i;:::-;7703:5;-1:-1:-1;7760:2:1;7745:18;;7732:32;7773:33;7732:32;7773:33;:::i;:::-;7825:7;7815:17;;;7450:388;;;;;:::o;7843:127::-;7904:10;7899:3;7895:20;7892:1;7885:31;7935:4;7932:1;7925:15;7959:4;7956:1;7949:15;7975:168;8048:9;;;8079;;8096:15;;;8090:22;;8076:37;8066:71;;8117:18;;:::i;8148:217::-;8188:1;8214;8204:132;;8258:10;8253:3;8249:20;8246:1;8239:31;8293:4;8290:1;8283:15;8321:4;8318:1;8311:15;8204:132;-1:-1:-1;8350:9:1;;8148:217::o;8623:380::-;8702:1;8698:12;;;;8745;;;8766:61;;8820:4;8812:6;8808:17;8798:27;;8766:61;8873:2;8865:6;8862:14;8842:18;8839:38;8836:161;;8919:10;8914:3;8910:20;8907:1;8900:31;8954:4;8951:1;8944:15;8982:4;8979:1;8972:15;9368:127;9429:10;9424:3;9420:20;9417:1;9410:31;9460:4;9457:1;9450:15;9484:4;9481:1;9474:15;12480:125;12545:9;;;12566:10;;;12563:36;;;12579:18;;:::i;12959:251::-;13029:6;13082:2;13070:9;13061:7;13057:23;13053:32;13050:52;;;13098:1;13095;13088:12;13050:52;13130:9;13124:16;13149:31;13174:5;13149:31;:::i;17063:135::-;17102:3;17123:17;;;17120:43;;17143:18;;:::i;:::-;-1:-1:-1;17190:1:1;17179:13;;17063:135::o;17203:128::-;17270:9;;;17291:11;;;17288:37;;;17305:18;;:::i;17336:184::-;17406:6;17459:2;17447:9;17438:7;17434:23;17430:32;17427:52;;;17475:1;17472;17465:12;17427:52;-1:-1:-1;17498:16:1;;17336:184;-1:-1:-1;17336:184:1:o;17525:980::-;17787:4;17835:3;17824:9;17820:19;17866:6;17855:9;17848:25;17892:2;17930:6;17925:2;17914:9;17910:18;17903:34;17973:3;17968:2;17957:9;17953:18;17946:31;17997:6;18032;18026:13;18063:6;18055;18048:22;18101:3;18090:9;18086:19;18079:26;;18140:2;18132:6;18128:15;18114:29;;18161:1;18171:195;18185:6;18182:1;18179:13;18171:195;;;18250:13;;-1:-1:-1;;;;;18246:39:1;18234:52;;18341:15;;;;18306:12;;;;18282:1;18200:9;18171:195;;;-1:-1:-1;;;;;;;18422:32:1;;;;18417:2;18402:18;;18395:60;-1:-1:-1;;;18486:3:1;18471:19;18464:35;18383:3;17525:980;-1:-1:-1;;;17525:980:1:o;18846:518::-;18948:2;18943:3;18940:11;18937:421;;;18984:5;18981:1;18974:16;19028:4;19025:1;19015:18;19098:2;19086:10;19082:19;19079:1;19075:27;19069:4;19065:38;19134:4;19122:10;19119:20;19116:47;;;-1:-1:-1;19157:4:1;19116:47;19212:2;19207:3;19203:12;19200:1;19196:20;19190:4;19186:31;19176:41;;19267:81;19285:2;19278:5;19275:13;19267:81;;;19344:1;19330:16;;19311:1;19300:13;19267:81;;19540:1345;19666:3;19660:10;19693:18;19685:6;19682:30;19679:56;;;19715:18;;:::i;:::-;19744:97;19834:6;19794:38;19826:4;19820:11;19794:38;:::i;:::-;19788:4;19744:97;:::i;:::-;19896:4;;19953:2;19942:14;;19970:1;19965:663;;;;20672:1;20689:6;20686:89;;;-1:-1:-1;20741:19:1;;;20735:26;20686:89;-1:-1:-1;;19497:1:1;19493:11;;;19489:24;19485:29;19475:40;19521:1;19517:11;;;19472:57;20788:81;;19935:944;;19965:663;18793:1;18786:14;;;18830:4;18817:18;;-1:-1:-1;;20001:20:1;;;20119:236;20133:7;20130:1;20127:14;20119:236;;;20222:19;;;20216:26;20201:42;;20314:27;;;;20282:1;20270:14;;;;20149:19;;20119:236;;;20123:3;20383:6;20374:7;20371:19;20368:201;;;20444:19;;;20438:26;-1:-1:-1;;20527:1:1;20523:14;;;20539:3;20519:24;20515:37;20511:42;20496:58;20481:74;;20368:201;-1:-1:-1;;;;;20615:1:1;20599:14;;;20595:22;20582:36;;-1:-1:-1;19540:1345:1:o;20890:287::-;21019:3;21057:6;21051:13;21073:66;21132:6;21127:3;21120:4;21112:6;21108:17;21073:66;:::i;:::-;21155:16;;;;;20890:287;-1:-1:-1;;20890:287:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2467400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addAddress(address[],bool)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"burn(uint256)": "infinite",
								"changeTokenCap(uint256)": "24642",
								"decimals()": "266",
								"exemptFee(address,bool)": "28336",
								"initialize(address)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"open()": "144487",
								"owner()": "2457",
								"proxiableUUID()": "infinite",
								"removeETH()": "infinite",
								"renounceOwnership()": "infinite",
								"rmvLimits()": "infinite",
								"setMode()": "28807",
								"setSwapback(uint256,uint256)": "infinite",
								"setTax(uint256,uint256)": "48182",
								"setTx(uint256)": "infinite",
								"setWalletLimit(uint256)": "infinite",
								"setWallets(address,address,address,address,address,address,address,address)": "infinite",
								"symbol()": "infinite",
								"tokenCap()": "2338",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"triggerSwap()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"viewInfo()": "12957"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"isContract(address)": "infinite",
								"min(uint256,uint256)": "60",
								"sendETHToFee()": "infinite",
								"swapTokensForEth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57077,
									"end": 57081,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 57034,
									"end": 57082,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57034,
									"end": 57082,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65920,
									"end": 65947,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 65920,
									"end": 65947,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65920,
									"end": 65947,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 65993,
									"end": 66023,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 65993,
									"end": 66023,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 65993,
									"end": 66023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65993,
									"end": 66023,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 67110,
									"end": 67165,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 67135,
									"end": 67157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 67135,
									"end": 67155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 67135,
									"end": 67157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67135,
									"end": 67157,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 67135,
									"end": 67157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11532,
									"end": 11965,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 11532,
									"end": 11965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12724,
									"end": 12745,
									"name": "PUSH",
									"source": 0,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 11725,
									"end": 11740,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11725,
									"end": 11740,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11725,
									"end": 11740,
									"name": "PUSH",
									"source": 0,
									"value": "10000000000000000"
								},
								{
									"begin": 11725,
									"end": 11740,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11725,
									"end": 11740,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 11725,
									"end": 11740,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 11725,
									"end": 11740,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11721,
									"end": 11799,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11721,
									"end": 11799,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11721,
									"end": 11799,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11787,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11721,
									"end": 11799,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11721,
									"end": 11799,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11813,
									"end": 11827,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11813,
									"end": 11827,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11813,
									"end": 11827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11813,
									"end": 11827,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11813,
									"end": 11827,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11813,
									"end": 11847,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 11809,
									"end": 11958,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 11809,
									"end": 11958,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11864,
									"end": 11897,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11864,
									"end": 11897,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11864,
									"end": 11897,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11864,
									"end": 11897,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11864,
									"end": 11897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11864,
									"end": 11897,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11864,
									"end": 11897,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11864,
									"end": 11897,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11946,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 11809,
									"end": 11958,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 11809,
									"end": 11958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11581,
									"end": 11965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11532,
									"end": 11965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2016"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64963,
									"end": 78509,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fd4f362f3ab85ed5f80094f7da9f337eff7d7676e834759412712b6913122d464736f6c63430008180033",
									".code": [
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "6ED6A48D"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "AD3CB1CC"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "DD54291B"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "DD54291B"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "F1D5F517"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "FCFFF16F"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "AD3CB1CC"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "AE601480"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "C4D66DE8"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "DA7FE652"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "8F937CC4"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "8F937CC4"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "6ED6A48D"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "23BC25ED"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "4F1EF286"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "4F1EF286"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "620CC86C"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "667F6526"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "23BC25ED"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "2DC4F5E6"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "1C537DE5"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "217B6DA6"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "313FC4B"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "8ADE0C9"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64963,
											"end": 78509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 71237,
											"end": 71547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 71237,
											"end": 71547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23461,
											"end": 23608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23461,
											"end": 23608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 71555,
											"end": 71695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 26034,
											"end": 26224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 26034,
											"end": 26224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1379,
											"end": 1566,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1571,
											"end": 1748,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 72718,
											"end": 72935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 72718,
											"end": 72935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 72245,
											"end": 72710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 26802,
											"end": 27051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 26802,
											"end": 27051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 69912,
											"end": 70712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 69912,
											"end": 70712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 72943,
											"end": 73114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 72943,
											"end": 73114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24600,
											"end": 24602,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4843,
											"end": 4879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4831,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24526,
											"end": 24610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4701,
											"end": 4885,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 78413,
											"end": 78506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 78413,
											"end": 78506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 60134,
											"end": 60351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 60134,
											"end": 60351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 59667,
											"end": 59803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 70720,
											"end": 70958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 70720,
											"end": 70958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 71947,
											"end": 72237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 71947,
											"end": 72237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 71703,
											"end": 71939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24893,
											"end": 25067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24893,
											"end": 25067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 36362,
											"end": 36465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 35627,
											"end": 35774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 6838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 76326,
											"end": 76728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 23727,
											"end": 23878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 78237,
											"end": 78407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 78237,
											"end": 78407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25272,
											"end": 25454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 25272,
											"end": 25454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57735,
											"end": 57793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 73444,
											"end": 73450,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 73444,
											"end": 73450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73465,
											"end": 73472,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 73465,
											"end": 73472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73487,
											"end": 73501,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 73487,
											"end": 73501,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73516,
											"end": 73534,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 73516,
											"end": 73534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73549,
											"end": 73561,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 73549,
											"end": 73561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73576,
											"end": 73588,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 73576,
											"end": 73588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7222,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7222,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7265,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7265,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7341,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7385,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7367,
											"end": 7386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7426,
											"end": 7429,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7411,
											"end": 7430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7404,
											"end": 7439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7187,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7169,
											"end": 7188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 73122,
											"end": 73607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6910,
											"end": 7445,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 67175,
											"end": 69361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 67175,
											"end": 69361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 78133,
											"end": 78231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 78133,
											"end": 78231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66030,
											"end": 66053,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 25517,
											"end": 25715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25517,
											"end": 25715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 70966,
											"end": 71229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 70966,
											"end": 71229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 36620,
											"end": 36840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 36620,
											"end": 36840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 69530,
											"end": 69904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 71391,
											"end": 71407,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71375,
											"end": 71388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71375,
											"end": 71388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 71375,
											"end": 71388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71375,
											"end": 71407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 71375,
											"end": 71407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71375,
											"end": 71407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71375,
											"end": 71407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 71375,
											"end": 71407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71375,
											"end": 71407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 71375,
											"end": 71407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71374,
											"end": 71416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 71374,
											"end": 71416,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71374,
											"end": 71416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71374,
											"end": 71416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 71374,
											"end": 71416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71374,
											"end": 71416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 71374,
											"end": 71416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71359,
											"end": 71371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 71359,
											"end": 71416,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 71473,
											"end": 71478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 71459,
											"end": 71469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71443,
											"end": 71456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71443,
											"end": 71456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 71443,
											"end": 71456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71443,
											"end": 71469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 71443,
											"end": 71469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71443,
											"end": 71469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71443,
											"end": 71469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 71443,
											"end": 71469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71443,
											"end": 71469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 71443,
											"end": 71469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71442,
											"end": 71478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 71442,
											"end": 71478,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71442,
											"end": 71478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71442,
											"end": 71478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 71442,
											"end": 71478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71442,
											"end": 71478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 71442,
											"end": 71478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71427,
											"end": 71439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 71427,
											"end": 71478,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71494,
											"end": 71539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71494,
											"end": 71539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8569,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8602,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2B3F4C022D9943B151090E389857495BB9D8493714259CC19A540F5A11475FB1"
										},
										{
											"begin": 71494,
											"end": 71539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71494,
											"end": 71539,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71237,
											"end": 71547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23506,
											"end": 23519,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23506,
											"end": 23519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22786,
											"end": 22806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 23586,
											"end": 23600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 23586,
											"end": 23600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 71555,
											"end": 71695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71612,
											"end": 71622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 71612,
											"end": 71622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71612,
											"end": 71622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71612,
											"end": 71622,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 71612,
											"end": 71622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 71612,
											"end": 71622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71604,
											"end": 71658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71604,
											"end": 71658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9212,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71604,
											"end": 71658,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9192,
											"end": 9213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9288,
											"end": 9321,
											"name": "PUSH",
											"source": 1,
											"value": "4C61756E6368206D6F646520697320616C72656164792064697361626C656400"
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9261,
											"end": 9322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9357,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9339,
											"end": 9357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 71604,
											"end": 71658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71669,
											"end": 71679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 71669,
											"end": 71687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71669,
											"end": 71687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 71669,
											"end": 71687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71669,
											"end": 71687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71669,
											"end": 71687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 71555,
											"end": 71695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26107,
											"end": 26111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26163,
											"end": 26194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26188,
											"end": 26193,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26163,
											"end": 26171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26163,
											"end": 26194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26163,
											"end": 26194,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26163,
											"end": 26194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26212,
											"end": 26216,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26205,
											"end": 26216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26205,
											"end": 26216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26205,
											"end": 26216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26034,
											"end": 26224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72836,
											"end": 72845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72851,
											"end": 72868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72851,
											"end": 72868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72851,
											"end": 72868,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72910,
											"end": 72916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 72890,
											"end": 72907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72897,
											"end": 72903,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72903,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 72904,
											"end": 72905,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 72897,
											"end": 72906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 72897,
											"end": 72906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 72897,
											"end": 72906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72890,
											"end": 72907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 72890,
											"end": 72907,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 72890,
											"end": 72916,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72890,
											"end": 72916,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 72870,
											"end": 72873,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72831,
											"end": 72928,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72718,
											"end": 72935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 72245,
											"end": 72710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72308,
											"end": 72315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 72308,
											"end": 72313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 72308,
											"end": 72315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72308,
											"end": 72315,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 72308,
											"end": 72315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72294,
											"end": 72315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72294,
											"end": 72304,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72294,
											"end": 72315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72294,
											"end": 72315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9684,
											"end": 9705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9741,
											"end": 9743,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 9721,
											"end": 9739,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9721,
											"end": 9739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9714,
											"end": 9744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9780,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206665652072656365697665722063616E2074726967676572000000"
										},
										{
											"begin": 9760,
											"end": 9778,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9760,
											"end": 9778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9753,
											"end": 9812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 9500,
											"end": 9853,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 72286,
											"end": 72349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72360,
											"end": 72370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72373,
											"end": 72398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 72397,
											"end": 72398,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 72373,
											"end": 72394,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 72373,
											"end": 72398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 72373,
											"end": 72398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72373,
											"end": 72398,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 72373,
											"end": 72398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72409,
											"end": 72420,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72360,
											"end": 72398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72360,
											"end": 72398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72409,
											"end": 72420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72360,
											"end": 72398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72360,
											"end": 72398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72360,
											"end": 72398,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72420,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 72409,
											"end": 72436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72468,
											"end": 72473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72468,
											"end": 72473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72468,
											"end": 72473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72458,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 72447,
											"end": 72474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72506,
											"end": 72511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72506,
											"end": 72511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72506,
											"end": 72511,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72496,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 72485,
											"end": 72512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72544,
											"end": 72549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72544,
											"end": 72549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72544,
											"end": 72549,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72534,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 72523,
											"end": 72550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72582,
											"end": 72587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72582,
											"end": 72587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72582,
											"end": 72587,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72572,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 72561,
											"end": 72588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72620,
											"end": 72625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72620,
											"end": 72625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72620,
											"end": 72625,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72610,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 72599,
											"end": 72626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72658,
											"end": 72663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72658,
											"end": 72663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72658,
											"end": 72663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72648,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 72637,
											"end": 72664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72696,
											"end": 72701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72696,
											"end": 72701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72696,
											"end": 72701,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72686,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72675,
											"end": 72702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72245,
											"end": 72710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26947,
											"end": 26984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 26963,
											"end": 26967,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26947,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 26947,
											"end": 26984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26947,
											"end": 26984,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 26947,
											"end": 26984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26995,
											"end": 27021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 27005,
											"end": 27009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27011,
											"end": 27013,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27015,
											"end": 27020,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26995,
											"end": 27004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 26995,
											"end": 27021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26995,
											"end": 27021,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 26995,
											"end": 27021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27043,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27032,
											"end": 27043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27032,
											"end": 27043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27032,
											"end": 27043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26802,
											"end": 27051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 70233,
											"end": 70257,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70268,
											"end": 70292,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70303,
											"end": 70327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70338,
											"end": 70362,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70373,
											"end": 70397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70408,
											"end": 70432,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70443,
											"end": 70467,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 70478,
											"end": 70502,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70520,
											"end": 70704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70520,
											"end": 70704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10401,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10401,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10367,
											"end": 10401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10432,
											"end": 10434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10453,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10453,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10588,
											"end": 10591,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10573,
											"end": 10592,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10566,
											"end": 10610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10347,
											"end": 10350,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10626,
											"end": 10645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10697,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10679,
											"end": 10698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10679,
											"end": 10698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10750,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10725,
											"end": 10769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "52E6E0E286D372F9E966EF36DE088520FF74564D54D64AD119477262CA461E7B"
										},
										{
											"begin": 70520,
											"end": 70704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10316,
											"end": 10319,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10301,
											"end": 10320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70520,
											"end": 70704,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69912,
											"end": 70712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 72943,
											"end": 73114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 73022,
											"end": 73058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73058,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 73074,
											"end": 73106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73074,
											"end": 73106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10948,
											"end": 10999,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 10999,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 10999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 73074,
											"end": 73106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2D43ABD87B27CEE7B0AA8C6F7E0B4A3247B683262A83CBC2318B0DF398A49AA9"
										},
										{
											"begin": 73074,
											"end": 73106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10921,
											"end": 10939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 73074,
											"end": 73106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 10780,
											"end": 11064,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78476,
											"end": 78498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 78482,
											"end": 78489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 78482,
											"end": 78487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 78482,
											"end": 78489,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78482,
											"end": 78489,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 78482,
											"end": 78489,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78491,
											"end": 78497,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78476,
											"end": 78481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 78476,
											"end": 78498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78476,
											"end": 78498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 78476,
											"end": 78498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78413,
											"end": 78506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 60134,
											"end": 60351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 58589,
											"end": 58600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 58589,
											"end": 58602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58589,
											"end": 58602,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 58589,
											"end": 58602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60250,
											"end": 60286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 60268,
											"end": 60285,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60250,
											"end": 60267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 60250,
											"end": 60286,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60250,
											"end": 60286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 60250,
											"end": 60286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60297,
											"end": 60343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 60319,
											"end": 60336,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60342,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60297,
											"end": 60318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 60297,
											"end": 60343,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59736,
											"end": 59743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58869,
											"end": 58889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 58869,
											"end": 58887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 58869,
											"end": 58889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58869,
											"end": 58889,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 58869,
											"end": 58889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 59667,
											"end": 59803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59667,
											"end": 59803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70803,
											"end": 70804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70791,
											"end": 70799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70791,
											"end": 70804,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70791,
											"end": 70804,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70783,
											"end": 70839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 70783,
											"end": 70839,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70783,
											"end": 70839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70783,
											"end": 70839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 70783,
											"end": 70839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70783,
											"end": 70839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11271,
											"end": 11273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 70783,
											"end": 70839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70783,
											"end": 70839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70783,
											"end": 70839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11253,
											"end": 11274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11312,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 11290,
											"end": 11308,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11290,
											"end": 11308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11283,
											"end": 11313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11381,
											"name": "PUSH",
											"source": 1,
											"value": "4D61782074782063616E74206265206C6F776572207468616E20302E31250000"
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11322,
											"end": 11382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11399,
											"end": 11417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 70783,
											"end": 70839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11069,
											"end": 11423,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 70783,
											"end": 70839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 70783,
											"end": 70839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70896,
											"end": 70900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 70884,
											"end": 70892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70868,
											"end": 70881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70868,
											"end": 70881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 70868,
											"end": 70881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70868,
											"end": 70892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 70868,
											"end": 70892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70868,
											"end": 70892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70868,
											"end": 70892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 70868,
											"end": 70892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70868,
											"end": 70892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 70868,
											"end": 70892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70867,
											"end": 70900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 70867,
											"end": 70900,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70867,
											"end": 70900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70867,
											"end": 70900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 70867,
											"end": 70900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70867,
											"end": 70900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 70867,
											"end": 70900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70850,
											"end": 70864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 70850,
											"end": 70900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70850,
											"end": 70900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70850,
											"end": 70900,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70916,
											"end": 70950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF"
										},
										{
											"begin": 70916,
											"end": 70950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70950,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 71947,
											"end": 72237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72044,
											"end": 72046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 72034,
											"end": 72040,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72034,
											"end": 72046,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 72034,
											"end": 72046,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72026,
											"end": 72072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 72026,
											"end": 72072,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72026,
											"end": 72072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72026,
											"end": 72072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 72026,
											"end": 72072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72026,
											"end": 72072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11630,
											"end": 11632,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 72026,
											"end": 72072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72026,
											"end": 72072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72026,
											"end": 72072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11612,
											"end": 11633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11669,
											"end": 11671,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11642,
											"end": 11672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420627579207461782076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11681,
											"end": 11732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 72026,
											"end": 72072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11428,
											"end": 11773,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 72026,
											"end": 72072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 72026,
											"end": 72072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72102,
											"end": 72104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 72091,
											"end": 72098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72091,
											"end": 72104,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 72091,
											"end": 72104,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72083,
											"end": 72131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 72083,
											"end": 72131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72083,
											"end": 72131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72083,
											"end": 72131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 72083,
											"end": 72131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72083,
											"end": 72131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11980,
											"end": 11982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 72083,
											"end": 72131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72083,
											"end": 72131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72083,
											"end": 72131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 11983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12021,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 11999,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11999,
											"end": 12017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11999,
											"end": 12017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11992,
											"end": 12022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642073656C6C207461782076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12038,
											"end": 12056,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12038,
											"end": 12056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12038,
											"end": 12056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12100,
											"end": 12118,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12100,
											"end": 12118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 72083,
											"end": 72131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11778,
											"end": 12124,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 72083,
											"end": 72131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 72083,
											"end": 72131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72142,
											"end": 72148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 72142,
											"end": 72157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72142,
											"end": 72157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72142,
											"end": 72157,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72168,
											"end": 72175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 72168,
											"end": 72185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72168,
											"end": 72185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72168,
											"end": 72185,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72201,
											"end": 72229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8569,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8602,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72201,
											"end": 72229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5C6323BF1C2D7AAEA2C091A4751C1C87AF7F2864650C336507A77D0557AF37A1"
										},
										{
											"begin": 72201,
											"end": 72229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 72201,
											"end": 72229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8370,
											"end": 8618,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 71703,
											"end": 71939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 71754,
											"end": 71768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 71754,
											"end": 71784,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 71795,
											"end": 71813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 71795,
											"end": 71829,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "947F344D56E1E8C70DC492FB94C4DDDDD490C016AAB685F5E7E47B2E85CB44CF"
										},
										{
											"begin": 71864,
											"end": 71877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71864,
											"end": 71877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 71864,
											"end": 71877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71845,
											"end": 71878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71845,
											"end": 71878,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4B39C36D20C57D220F61FD25C4349D4435CC03EF6C2A680942F15333C3C3E001"
										},
										{
											"begin": 71917,
											"end": 71930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71917,
											"end": 71930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 71917,
											"end": 71930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71894,
											"end": 71931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71894,
											"end": 71931,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 71703,
											"end": 71939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24893,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 24965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25039,
											"end": 25059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24893,
											"end": 25067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 36362,
											"end": 36465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36427,
											"end": 36457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 36454,
											"end": 36455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36427,
											"end": 36445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 36427,
											"end": 36457,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36427,
											"end": 36457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 36427,
											"end": 36457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36362,
											"end": 36465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 35627,
											"end": 35774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34480,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 35758,
											"end": 35766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35758,
											"end": 35766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35758,
											"end": 35766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35627,
											"end": 35774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 76326,
											"end": 76728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76406,
											"end": 76413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 76406,
											"end": 76411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 76406,
											"end": 76413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76406,
											"end": 76413,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 76406,
											"end": 76413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76391,
											"end": 76413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76391,
											"end": 76401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76391,
											"end": 76413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76391,
											"end": 76413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12333,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12370,
											"end": 12372,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 12350,
											"end": 12368,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12350,
											"end": 12368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12350,
											"end": 12368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12343,
											"end": 12373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9037BBB732B91031B0B7103A3934B3B3B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12389,
											"end": 12407,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12389,
											"end": 12407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12389,
											"end": 12407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12451,
											"end": 12469,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12451,
											"end": 12469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 12129,
											"end": 12475,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 76369,
											"end": 76463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76474,
											"end": 76502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76505,
											"end": 76529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 76523,
											"end": 76527,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 76505,
											"end": 76514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 76505,
											"end": 76529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76505,
											"end": 76529,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 76505,
											"end": 76529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76474,
											"end": 76529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76474,
											"end": 76529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76542,
											"end": 76580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 76559,
											"end": 76579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76542,
											"end": 76558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 76542,
											"end": 76580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76542,
											"end": 76580,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 76542,
											"end": 76580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76620,
											"end": 76641,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 76656,
											"end": 76678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76656,
											"end": 76678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76652,
											"end": 76721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 76652,
											"end": 76721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76695,
											"end": 76709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 76695,
											"end": 76707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 76695,
											"end": 76709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 23727,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23861,
											"end": 23870,
											"name": "PUSH",
											"source": 0,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04"
										},
										{
											"begin": 23854,
											"end": 23870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23854,
											"end": 23870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23774,
											"end": 23787,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23774,
											"end": 23787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22786,
											"end": 22806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23854,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 23854,
											"end": 23870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23854,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 23854,
											"end": 23870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 78237,
											"end": 78407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78333,
											"end": 78341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 78333,
											"end": 78341,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78323,
											"end": 78329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78308,
											"end": 78320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 78308,
											"end": 78320,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78308,
											"end": 78329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 78308,
											"end": 78329,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78308,
											"end": 78329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78308,
											"end": 78329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 78308,
											"end": 78329,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78308,
											"end": 78329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 78308,
											"end": 78329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78308,
											"end": 78341,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 78308,
											"end": 78341,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78300,
											"end": 78366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 78300,
											"end": 78366,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78300,
											"end": 78366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78300,
											"end": 78366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 78300,
											"end": 78366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78300,
											"end": 78366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12812,
											"end": 12814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 78300,
											"end": 78366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78300,
											"end": 78366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78300,
											"end": 78366,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12794,
											"end": 12815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 12853,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12831,
											"end": 12849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12824,
											"end": 12854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD5C1C1B1E48131A5B5A5D0814995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12870,
											"end": 12888,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12870,
											"end": 12888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12863,
											"end": 12913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12930,
											"end": 12948,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12930,
											"end": 12948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 78300,
											"end": 78366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 12610,
											"end": 12954,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 78300,
											"end": 78366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 78300,
											"end": 78366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78377,
											"end": 78399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 78383,
											"end": 78390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 78383,
											"end": 78388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 78383,
											"end": 78390,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78383,
											"end": 78390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 78383,
											"end": 78390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78392,
											"end": 78398,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78377,
											"end": 78382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 78377,
											"end": 78399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 25272,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25414,
											"end": 25416,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25418,
											"end": 25423,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 25397,
											"end": 25424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12745,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8040,
											"end": 8055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8040,
											"end": 8055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8055,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8055,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8040,
											"end": 8055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8087,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8087,
											"end": 8101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 8488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8492,
											"end": 8506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8452,
											"end": 8506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8452,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8537,
											"end": 8548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8537,
											"end": 8553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8537,
											"end": 8553,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 8537,
											"end": 8587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8565,
											"end": 8569,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8557,
											"end": 8587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8537,
											"end": 8587,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 8537,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8517,
											"end": 8587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8622,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 8604,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8600,
											"end": 8693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8600,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 8600,
											"end": 8693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8600,
											"end": 8693,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 8600,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8720,
											"end": 8721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 8732,
											"end": 8801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8767,
											"end": 8789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8767,
											"end": 8789,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8789,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8789,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8732,
											"end": 8801,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 8732,
											"end": 8801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26BCAA37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D544B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 67247,
											"end": 67277,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 67247,
											"end": 67277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67288,
											"end": 67316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 67303,
											"end": 67315,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 67288,
											"end": 67302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 67288,
											"end": 67316,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67288,
											"end": 67316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 67288,
											"end": 67316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67327,
											"end": 67351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 67327,
											"end": 67349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 67327,
											"end": 67351,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67327,
											"end": 67351,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 67327,
											"end": 67351,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67377,
											"end": 67407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 67362,
											"end": 67374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 67362,
											"end": 67407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67362,
											"end": 67407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67362,
											"end": 67407,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67429,
											"end": 67461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "314DC6448D9338C15B0A00000000"
										},
										{
											"begin": 67418,
											"end": 67426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 67418,
											"end": 67461,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67511,
											"end": 67515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 67511,
											"end": 67515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67490,
											"end": 67507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 67490,
											"end": 67507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67505,
											"end": 67507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 67490,
											"end": 67507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 67490,
											"end": 67507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67490,
											"end": 67507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 67490,
											"end": 67507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67489,
											"end": 67515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 67489,
											"end": 67515,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67489,
											"end": 67515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67489,
											"end": 67515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 67489,
											"end": 67515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67489,
											"end": 67515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 67489,
											"end": 67515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67472,
											"end": 67486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 67472,
											"end": 67515,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67548,
											"end": 67560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 67548,
											"end": 67560,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67569,
											"end": 67573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 67569,
											"end": 67573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67548,
											"end": 67565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 67548,
											"end": 67565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67563,
											"end": 67565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 67548,
											"end": 67565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 67548,
											"end": 67565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67548,
											"end": 67565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 67548,
											"end": 67565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67547,
											"end": 67573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 67547,
											"end": 67573,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67547,
											"end": 67573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67547,
											"end": 67573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 67547,
											"end": 67573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67547,
											"end": 67573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 67547,
											"end": 67573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67526,
											"end": 67544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 67526,
											"end": 67573,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67600,
											"end": 67612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 67600,
											"end": 67612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67620,
											"end": 67625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 67620,
											"end": 67625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67600,
											"end": 67616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 67600,
											"end": 67616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67615,
											"end": 67616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 67600,
											"end": 67616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 67600,
											"end": 67616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67600,
											"end": 67616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 67600,
											"end": 67616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67599,
											"end": 67625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 67599,
											"end": 67625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67599,
											"end": 67625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67599,
											"end": 67625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 67599,
											"end": 67625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67599,
											"end": 67625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 67599,
											"end": 67625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67584,
											"end": 67596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 67584,
											"end": 67625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67652,
											"end": 67664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 67652,
											"end": 67664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67674,
											"end": 67679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 67674,
											"end": 67679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67652,
											"end": 67670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 67652,
											"end": 67670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67667,
											"end": 67670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 67652,
											"end": 67670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 67652,
											"end": 67670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67652,
											"end": 67670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 67652,
											"end": 67670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67651,
											"end": 67679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 67651,
											"end": 67679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67651,
											"end": 67679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67651,
											"end": 67679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 67651,
											"end": 67679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67651,
											"end": 67679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 67651,
											"end": 67679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67636,
											"end": 67648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 67636,
											"end": 67679,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67699,
											"end": 67701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 67690,
											"end": 67696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 67690,
											"end": 67701,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67722,
											"end": 67724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 67712,
											"end": 67719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 67712,
											"end": 67724,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67756,
											"end": 67757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67735,
											"end": 67753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 67735,
											"end": 67757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67735,
											"end": 67757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67735,
											"end": 67757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67768,
											"end": 67777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 67768,
											"end": 67781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67768,
											"end": 67781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67768,
											"end": 67781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67808,
											"end": 67812,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 67792,
											"end": 67814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67792,
											"end": 67814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67792,
											"end": 67814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67814,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 67792,
											"end": 67821,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67821,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67821,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67792,
											"end": 67821,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67833,
											"end": 67848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 67833,
											"end": 67986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67833,
											"end": 67986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 67833,
											"end": 67986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67933,
											"end": 67975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9AC64CC6E4415144C455BD8E4837FEA55603E5C3"
										},
										{
											"begin": 67833,
											"end": 67986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67833,
											"end": 67986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67833,
											"end": 67986,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 67833,
											"end": 67986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67833,
											"end": 67986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67833,
											"end": 67986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67997,
											"end": 68061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 67997,
											"end": 68061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67808,
											"end": 67812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68047,
											"end": 68060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68047,
											"end": 68060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 68047,
											"end": 68060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67997,
											"end": 68005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 67997,
											"end": 68061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67997,
											"end": 68061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 67997,
											"end": 68061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68100,
											"end": 68115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68100,
											"end": 68123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68100,
											"end": 68125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 68100,
											"end": 68125,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 68100,
											"end": 68125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68088,
											"end": 68137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C9C65396"
										},
										{
											"begin": 68160,
											"end": 68164,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68180,
											"end": 68195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68180,
											"end": 68200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C4648"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68180,
											"end": 68202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 68180,
											"end": 68202,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 68180,
											"end": 68202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13445,
											"end": 13460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13445,
											"end": 13460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13445,
											"end": 13460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13427,
											"end": 13461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13512,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13477,
											"end": 13495,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13477,
											"end": 13495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13477,
											"end": 13495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13470,
											"end": 13513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13362,
											"end": 13380,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13362,
											"end": 13380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68088,
											"end": 68213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 68088,
											"end": 68213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 68088,
											"end": 68213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68224,
											"end": 68289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68224,
											"end": 68289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68224,
											"end": 68289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68224,
											"end": 68289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68246,
											"end": 68288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2F8D1DDD0F3CCF0FE21C505A4EBC56F6F4626C0D"
										},
										{
											"begin": 68224,
											"end": 68289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68224,
											"end": 68289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68224,
											"end": 68289,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68224,
											"end": 68289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68224,
											"end": 68289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68300,
											"end": 68365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68365,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68365,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68365,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68365,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68376,
											"end": 68387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 68376,
											"end": 68441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68376,
											"end": 68441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68376,
											"end": 68441,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68376,
											"end": 68441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68376,
											"end": 68441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68376,
											"end": 68441,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68376,
											"end": 68441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68376,
											"end": 68441,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68452,
											"end": 68463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68452,
											"end": 68517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68452,
											"end": 68517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68452,
											"end": 68517,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68452,
											"end": 68517,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68452,
											"end": 68517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68452,
											"end": 68517,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68452,
											"end": 68517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68452,
											"end": 68517,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68528,
											"end": 68539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 68528,
											"end": 68593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68528,
											"end": 68593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68528,
											"end": 68593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68528,
											"end": 68593,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68528,
											"end": 68593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68528,
											"end": 68593,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68528,
											"end": 68593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68528,
											"end": 68593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68604,
											"end": 68615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 68604,
											"end": 68669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68604,
											"end": 68669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68604,
											"end": 68669,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68604,
											"end": 68669,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68604,
											"end": 68669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68604,
											"end": 68669,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68604,
											"end": 68669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68604,
											"end": 68669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68680,
											"end": 68691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 68680,
											"end": 68745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68680,
											"end": 68745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68680,
											"end": 68745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68680,
											"end": 68745,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68680,
											"end": 68745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68680,
											"end": 68745,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68680,
											"end": 68745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68680,
											"end": 68745,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 68756,
											"end": 68821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68821,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68821,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68821,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68756,
											"end": 68821,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68072,
											"end": 68085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68072,
											"end": 68085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68851,
											"end": 68858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 68851,
											"end": 68856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 68851,
											"end": 68858,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68851,
											"end": 68858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 68851,
											"end": 68858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 68832,
											"end": 68866,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68904,
											"end": 68908,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68910,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68832,
											"end": 68866,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68877,
											"end": 68917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68917,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68947,
											"end": 68958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68947,
											"end": 68958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68947,
											"end": 68958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68947,
											"end": 68958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68966,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68966,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68928,
											"end": 68966,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 68996,
											"end": 69007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68996,
											"end": 69007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68996,
											"end": 69007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68996,
											"end": 69007,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69015,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69015,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69015,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68977,
											"end": 69015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69045,
											"end": 69056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 69045,
											"end": 69056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69045,
											"end": 69056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69045,
											"end": 69056,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69064,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69064,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69026,
											"end": 69064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69094,
											"end": 69105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69094,
											"end": 69105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69094,
											"end": 69105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69094,
											"end": 69105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69106,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69106,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69113,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69113,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69113,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69143,
											"end": 69154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 69143,
											"end": 69154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69143,
											"end": 69154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69143,
											"end": 69154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69155,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69155,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69155,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69162,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69162,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69124,
											"end": 69162,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69192,
											"end": 69203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 69192,
											"end": 69203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69192,
											"end": 69203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69192,
											"end": 69203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69204,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69204,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69211,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69211,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69211,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69173,
											"end": 69211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69241,
											"end": 69252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 69241,
											"end": 69252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69241,
											"end": 69252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69241,
											"end": 69252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69253,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69253,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69260,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69260,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69222,
											"end": 69260,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69290,
											"end": 69301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 69290,
											"end": 69301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69290,
											"end": 69301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69290,
											"end": 69301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69290,
											"end": 69301,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69302,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69309,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69271,
											"end": 69309,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69340,
											"end": 69352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 69340,
											"end": 69352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69322,
											"end": 69353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 69322,
											"end": 69353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69328,
											"end": 69338,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 69328,
											"end": 69338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69322,
											"end": 69327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 69322,
											"end": 69353,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69322,
											"end": 69353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 69322,
											"end": 69353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8827,
											"end": 8841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 8823,
											"end": 8927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8858,
											"end": 8881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 13677,
											"end": 13727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13677,
											"end": 13727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13665,
											"end": 13667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13650,
											"end": 13668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8915,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8927,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 8823,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67175,
											"end": 69361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 78133,
											"end": 78231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78206,
											"end": 78214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 78206,
											"end": 78223,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25517,
											"end": 25715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25597,
											"end": 25604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25691,
											"name": "PUSH",
											"source": 0,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01"
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25678,
											"end": 25707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 70966,
											"end": 71229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71058,
											"end": 71059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71046,
											"end": 71054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71046,
											"end": 71059,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 71046,
											"end": 71059,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71038,
											"end": 71098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 71038,
											"end": 71098,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71038,
											"end": 71098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71038,
											"end": 71098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71038,
											"end": 71098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71038,
											"end": 71098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13940,
											"end": 13942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 71038,
											"end": 71098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71038,
											"end": 71098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71038,
											"end": 71098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 13943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13979,
											"end": 13981,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 13959,
											"end": 13977,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13959,
											"end": 13977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13959,
											"end": 13977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13952,
											"end": 13982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14018,
											"end": 14052,
											"name": "PUSH",
											"source": 1,
											"value": "4D61782077616C6C65742063616E74206265206C6F776572207468616E20302E"
										},
										{
											"begin": 13998,
											"end": 14016,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13998,
											"end": 14016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13998,
											"end": 14016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13991,
											"end": 14053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3125"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14069,
											"end": 14087,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14069,
											"end": 14087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14069,
											"end": 14087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14062,
											"end": 14094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14111,
											"end": 14130,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14111,
											"end": 14130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 71038,
											"end": 71098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 13738,
											"end": 14136,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 71038,
											"end": 71098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 71038,
											"end": 71098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71159,
											"end": 71163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 71147,
											"end": 71155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71131,
											"end": 71144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24808,
											"end": 24822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71131,
											"end": 71144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 71131,
											"end": 71144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71131,
											"end": 71155,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 71131,
											"end": 71155,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71131,
											"end": 71155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71131,
											"end": 71155,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 71131,
											"end": 71155,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71131,
											"end": 71155,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 71131,
											"end": 71155,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71130,
											"end": 71163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 71130,
											"end": 71163,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71130,
											"end": 71163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71130,
											"end": 71163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 71130,
											"end": 71163,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71130,
											"end": 71163,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 71130,
											"end": 71163,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71109,
											"end": 71127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 71109,
											"end": 71163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71109,
											"end": 71163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71109,
											"end": 71163,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 71179,
											"end": 71221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71179,
											"end": 71221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 71179,
											"end": 71221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4B39C36D20C57D220F61FD25C4349D4435CC03EF6C2A680942F15333C3C3E001"
										},
										{
											"begin": 71179,
											"end": 71221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 71179,
											"end": 71221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1571,
											"end": 1748,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 36620,
											"end": 36840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36705,
											"end": 36727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36705,
											"end": 36727,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36701,
											"end": 36794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 36701,
											"end": 36794,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36751,
											"end": 36782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36751,
											"end": 36782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36751,
											"end": 36782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36751,
											"end": 36782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36779,
											"end": 36780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36751,
											"end": 36782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36751,
											"end": 36782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36751,
											"end": 36782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36751,
											"end": 36782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36701,
											"end": 36794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 36701,
											"end": 36794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36804,
											"end": 36832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 36823,
											"end": 36831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36804,
											"end": 36822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 36804,
											"end": 36832,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 69530,
											"end": 69904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69585,
											"end": 69596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 69585,
											"end": 69596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 69585,
											"end": 69596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69585,
											"end": 69596,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 69585,
											"end": 69596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 69585,
											"end": 69596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69584,
											"end": 69596,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69576,
											"end": 69624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 69576,
											"end": 69624,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69576,
											"end": 69624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69576,
											"end": 69624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 69576,
											"end": 69624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69576,
											"end": 69624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14343,
											"end": 14345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 69576,
											"end": 69624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69576,
											"end": 69624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69576,
											"end": 69624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14325,
											"end": 14346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14384,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14446,
											"name": "PUSH",
											"source": 1,
											"value": "74726164696E6720697320616C7265616479206F70656E000000000000000000"
										},
										{
											"begin": 14401,
											"end": 14419,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14401,
											"end": 14419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14394,
											"end": 14447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14482,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14464,
											"end": 14482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 69576,
											"end": 69624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14141,
											"end": 14488,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 69576,
											"end": 69624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 69576,
											"end": 69624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69635,
											"end": 69646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 69635,
											"end": 69653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69635,
											"end": 69653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69664,
											"end": 69682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10001"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 69664,
											"end": 69682,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69664,
											"end": 69682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69664,
											"end": 69682,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69706,
											"end": 69718,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 69693,
											"end": 69703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 69693,
											"end": 69718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69693,
											"end": 69718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69693,
											"end": 69718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69729,
											"end": 69767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69729,
											"end": 69767,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69805,
											"end": 69809,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69778,
											"end": 69818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 69778,
											"end": 69818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69778,
											"end": 69818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69838,
											"end": 69840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B"
										},
										{
											"begin": 69829,
											"end": 69840,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69861,
											"end": 69863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 69851,
											"end": 69858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 69851,
											"end": 69863,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69881,
											"end": 69896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69881,
											"end": 69896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "EA4359D5C4B8F0945A64AB9C37FE830B3407D45E0E6E6F84275977A570457D6F"
										},
										{
											"begin": 69881,
											"end": 69896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 69881,
											"end": 69896,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 69530,
											"end": 69904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35852,
											"end": 36018,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35852,
											"end": 36018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35912,
											"end": 35919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 35912,
											"end": 35917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 35912,
											"end": 35919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35912,
											"end": 35919,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 35912,
											"end": 35919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35912,
											"end": 35935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35912,
											"end": 35935,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35908,
											"end": 36011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 35908,
											"end": 36011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35959,
											"end": 35999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35959,
											"end": 35999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35959,
											"end": 35999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35959,
											"end": 35999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13742,
											"end": 13752,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35959,
											"end": 35999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35959,
											"end": 35999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35959,
											"end": 35999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35959,
											"end": 35999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30933,
											"end": 31063,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 30933,
											"end": 31063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31018,
											"end": 31055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 31027,
											"end": 31032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31043,
											"end": 31048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31050,
											"end": 31054,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31018,
											"end": 31026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 31018,
											"end": 31055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31018,
											"end": 31055,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 31018,
											"end": 31055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 31063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 31063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 31063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 31063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32705,
											"end": 33192,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 32705,
											"end": 33192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32832,
											"end": 32857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 32842,
											"end": 32847,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32849,
											"end": 32856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 32841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 32832,
											"end": 32857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32832,
											"end": 32857,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 32832,
											"end": 32857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32872,
											"end": 32888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32872,
											"end": 32909,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32868,
											"end": 33185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 32868,
											"end": 33185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32926,
											"end": 33058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32926,
											"end": 33058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 32926,
											"end": 33058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32982,
											"end": 33042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32982,
											"end": 33042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14713,
											"end": 14745,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14713,
											"end": 14745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32982,
											"end": 33042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32982,
											"end": 33042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14695,
											"end": 14746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14668,
											"end": 14686,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14668,
											"end": 14686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32982,
											"end": 33042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14493,
											"end": 14838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32926,
											"end": 33058,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 32926,
											"end": 33058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 33110,
											"end": 33115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33117,
											"end": 33124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33145,
											"end": 33150,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33126,
											"end": 33142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33126,
											"end": 33150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33152,
											"end": 33157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33101,
											"end": 33109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 33101,
											"end": 33158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73615,
											"end": 76000,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 73615,
											"end": 76000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 73755,
											"end": 73773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73755,
											"end": 73773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15045,
											"end": 15047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15027,
											"end": 15048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15084,
											"end": 15086,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 15064,
											"end": 15082,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15064,
											"end": 15082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15064,
											"end": 15082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15057,
											"end": 15087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15157,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 15103,
											"end": 15121,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15103,
											"end": 15121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15103,
											"end": 15121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15096,
											"end": 15158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15174,
											"end": 15192,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15174,
											"end": 15192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15174,
											"end": 15192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15219,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15219,
											"end": 15238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14843,
											"end": 15244,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 73747,
											"end": 73815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 73834,
											"end": 73850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73834,
											"end": 73850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15451,
											"end": 15453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15433,
											"end": 15454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15490,
											"end": 15492,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15463,
											"end": 15493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15529,
											"end": 15563,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 15509,
											"end": 15527,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15509,
											"end": 15527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 15564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15580,
											"end": 15598,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15580,
											"end": 15598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15573,
											"end": 15606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15623,
											"end": 15642,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15623,
											"end": 15642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15249,
											"end": 15648,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 73826,
											"end": 73890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73918,
											"end": 73919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73909,
											"end": 73915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73909,
											"end": 73919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15855,
											"end": 15857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 15858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15894,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15933,
											"end": 15967,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 15913,
											"end": 15931,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15913,
											"end": 15931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15913,
											"end": 15931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15906,
											"end": 15968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15984,
											"end": 16002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15977,
											"end": 16016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16052,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 16033,
											"end": 16052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 15653,
											"end": 16058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 73901,
											"end": 73965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73976,
											"end": 73993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74020,
											"end": 74027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 74020,
											"end": 74025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 74020,
											"end": 74027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74020,
											"end": 74027,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 74020,
											"end": 74027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74012,
											"end": 74027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74012,
											"end": 74027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74027,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 74012,
											"end": 74044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74037,
											"end": 74044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 74037,
											"end": 74042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 74037,
											"end": 74044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74037,
											"end": 74044,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 74037,
											"end": 74044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74031,
											"end": 74044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74031,
											"end": 74033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74031,
											"end": 74044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74031,
											"end": 74044,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74031,
											"end": 74044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74044,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 74012,
											"end": 74044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 74012,
											"end": 74055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 74049,
											"end": 74055,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 74049,
											"end": 74055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74049,
											"end": 74055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74049,
											"end": 74055,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74049,
											"end": 74055,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 74049,
											"end": 74055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74048,
											"end": 74055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74012,
											"end": 74055,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 74012,
											"end": 74055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74008,
											"end": 75830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74008,
											"end": 75830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 74008,
											"end": 75830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74076,
											"end": 74086,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 74076,
											"end": 74086,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74076,
											"end": 74086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74076,
											"end": 74086,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74076,
											"end": 74086,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 74076,
											"end": 74086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74072,
											"end": 74161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74072,
											"end": 74161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 74072,
											"end": 74161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74120,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 74114,
											"end": 74140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74136,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 74130,
											"end": 74140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74114,
											"end": 74140,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 74114,
											"end": 74140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16265,
											"end": 16267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16284,
											"end": 16302,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16284,
											"end": 16302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16277,
											"end": 16306,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16323,
											"end": 16341,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16323,
											"end": 16341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16063,
											"end": 16347,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 74106,
											"end": 74145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74210,
											"end": 74213,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 74199,
											"end": 74205,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 74199,
											"end": 74205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74195,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 74189,
											"end": 74206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 74189,
											"end": 74206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74206,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 74189,
											"end": 74206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 74189,
											"end": 74214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 74189,
											"end": 74214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74189,
											"end": 74214,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 74189,
											"end": 74214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74261,
											"end": 74274,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 74261,
											"end": 74274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74177,
											"end": 74214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74177,
											"end": 74214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74253,
											"end": 74274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74261,
											"end": 74274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74261,
											"end": 74274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74274,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74325,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 74253,
											"end": 74325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 74309,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 74309,
											"end": 74324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74295,
											"end": 74325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 74295,
											"end": 74325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74295,
											"end": 74325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74309,
											"end": 74324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74309,
											"end": 74324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74295,
											"end": 74325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74295,
											"end": 74325,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74325,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 74253,
											"end": 74325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 74253,
											"end": 74369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 74347,
											"end": 74369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74346,
											"end": 74369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74253,
											"end": 74369,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 74253,
											"end": 74369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74231,
											"end": 74799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74231,
											"end": 74799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 74231,
											"end": 74799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74422,
											"end": 74436,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 74422,
											"end": 74436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74412,
											"end": 74418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74412,
											"end": 74436,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74412,
											"end": 74436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16554,
											"end": 16556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16593,
											"end": 16595,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 16573,
											"end": 16591,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16573,
											"end": 16591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16566,
											"end": 16596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16632,
											"end": 16661,
											"name": "PUSH",
											"source": 1,
											"value": "4578636565647320746865205F7478416D6F756E744C696D69742E0000000000"
										},
										{
											"begin": 16612,
											"end": 16630,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16612,
											"end": 16630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16605,
											"end": 16662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16679,
											"end": 16697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16679,
											"end": 16697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16352,
											"end": 16703,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 74404,
											"end": 74468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74543,
											"end": 74561,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 74543,
											"end": 74561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74533,
											"end": 74539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 74527,
											"end": 74529,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 74517,
											"end": 74530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74530,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 74517,
											"end": 74530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 74517,
											"end": 74539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 74517,
											"end": 74539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74539,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 74517,
											"end": 74539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74561,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74517,
											"end": 74561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16910,
											"end": 16912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16892,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16949,
											"end": 16951,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16922,
											"end": 16952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16988,
											"end": 17016,
											"name": "PUSH",
											"source": 1,
											"value": "4578636565647320746865206D617857616C6C657453697A652E000000000000"
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16961,
											"end": 17017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16708,
											"end": 17058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 74487,
											"end": 74631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74673,
											"end": 74685,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 74656,
											"end": 74666,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 74656,
											"end": 74666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74669,
											"end": 74670,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 74656,
											"end": 74670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 74656,
											"end": 74670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74656,
											"end": 74670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74656,
											"end": 74670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 74656,
											"end": 74670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74656,
											"end": 74670,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 74656,
											"end": 74670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74656,
											"end": 74685,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74652,
											"end": 74754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74652,
											"end": 74754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 74652,
											"end": 74754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76254,
											"end": 76274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76254,
											"end": 76274,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 76302,
											"end": 76310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74710,
											"end": 74734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 74710,
											"end": 74734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74710,
											"end": 74734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74710,
											"end": 74734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74710,
											"end": 74734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74710,
											"end": 74734,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 74710,
											"end": 74734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74781,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 74772,
											"end": 74783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 74772,
											"end": 74783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74231,
											"end": 74799,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 74231,
											"end": 74799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74825,
											"end": 74838,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 74825,
											"end": 74838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74819,
											"end": 74838,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 74819,
											"end": 74838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74819,
											"end": 74838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74825,
											"end": 74838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74825,
											"end": 74838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74819,
											"end": 74838,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74819,
											"end": 74838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74819,
											"end": 74838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74819,
											"end": 74838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74819,
											"end": 74865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 74819,
											"end": 74865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 74843,
											"end": 74865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74842,
											"end": 74865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74819,
											"end": 74865,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 74819,
											"end": 74865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74815,
											"end": 75046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74815,
											"end": 75046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 74815,
											"end": 75046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74942,
											"end": 74960,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 74942,
											"end": 74960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74932,
											"end": 74938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 74926,
											"end": 74928,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 74916,
											"end": 74929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74929,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 74916,
											"end": 74929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 74916,
											"end": 74938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 74916,
											"end": 74938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74938,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 74916,
											"end": 74938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74960,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74916,
											"end": 74960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16910,
											"end": 16912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16892,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16949,
											"end": 16951,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16922,
											"end": 16952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16988,
											"end": 17016,
											"name": "PUSH",
											"source": 1,
											"value": "4578636565647320746865206D617857616C6C657453697A652E000000000000"
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16968,
											"end": 16986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16961,
											"end": 17017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16708,
											"end": 17058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 74886,
											"end": 75030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75072,
											"end": 75085,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 75072,
											"end": 75085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75066,
											"end": 75085,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75066,
											"end": 75085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75066,
											"end": 75085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75072,
											"end": 75085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75072,
											"end": 75085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75066,
											"end": 75085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75066,
											"end": 75110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75066,
											"end": 75110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75066,
											"end": 75110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 75066,
											"end": 75110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75089,
											"end": 75110,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75089,
											"end": 75110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75105,
											"end": 75109,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 75089,
											"end": 75110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75089,
											"end": 75110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75066,
											"end": 75110,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 75066,
											"end": 75110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75062,
											"end": 75185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75062,
											"end": 75185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 75062,
											"end": 75185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75165,
											"end": 75168,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 75153,
											"end": 75160,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 75153,
											"end": 75160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 75143,
											"end": 75161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 75143,
											"end": 75161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75161,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 75143,
											"end": 75161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 75143,
											"end": 75169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 75143,
											"end": 75169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75143,
											"end": 75169,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 75143,
											"end": 75169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75062,
											"end": 75185,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 75062,
											"end": 75185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75201,
											"end": 75229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75232,
											"end": 75256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 75250,
											"end": 75254,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 75232,
											"end": 75241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 75232,
											"end": 75256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75232,
											"end": 75256,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 75232,
											"end": 75256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75294,
											"end": 75300,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 75294,
											"end": 75300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75201,
											"end": 75256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75201,
											"end": 75256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 75294,
											"end": 75300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75294,
											"end": 75300,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75294,
											"end": 75300,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 75294,
											"end": 75300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75340,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 75293,
											"end": 75340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 75327,
											"end": 75340,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 75327,
											"end": 75340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75321,
											"end": 75340,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75321,
											"end": 75340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75321,
											"end": 75340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75327,
											"end": 75340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75327,
											"end": 75340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75321,
											"end": 75340,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75340,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 75293,
											"end": 75340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75372,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 75293,
											"end": 75372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 75361,
											"end": 75372,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 75361,
											"end": 75372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 75361,
											"end": 75372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75361,
											"end": 75372,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75361,
											"end": 75372,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 75361,
											"end": 75372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75372,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 75293,
											"end": 75372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 75293,
											"end": 75428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75416,
											"end": 75428,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 75416,
											"end": 75428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75393,
											"end": 75413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75393,
											"end": 75428,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75428,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 75293,
											"end": 75428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 75293,
											"end": 75479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75461,
											"end": 75479,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 75461,
											"end": 75479,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75449,
											"end": 75458,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 75449,
											"end": 75458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75449,
											"end": 75479,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75479,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 75293,
											"end": 75479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 75293,
											"end": 75539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 75500,
											"end": 75515,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 75500,
											"end": 75515,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75526,
											"end": 75538,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 75500,
											"end": 75539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75500,
											"end": 75539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75500,
											"end": 75539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75500,
											"end": 75539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75500,
											"end": 75515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75500,
											"end": 75515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75500,
											"end": 75539,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75500,
											"end": 75539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75293,
											"end": 75539,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 75293,
											"end": 75539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75271,
											"end": 75819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75271,
											"end": 75819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 75271,
											"end": 75819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75574,
											"end": 75631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 75591,
											"end": 75630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 75595,
											"end": 75615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75617,
											"end": 75629,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 75617,
											"end": 75629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75591,
											"end": 75594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 75591,
											"end": 75630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75591,
											"end": 75630,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 75591,
											"end": 75630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75574,
											"end": 75590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 75574,
											"end": 75631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75574,
											"end": 75631,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 75574,
											"end": 75631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75679,
											"end": 75700,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 75723,
											"end": 75745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75723,
											"end": 75745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75719,
											"end": 75804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 75719,
											"end": 75804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75770,
											"end": 75784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 75770,
											"end": 75782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 75770,
											"end": 75784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75770,
											"end": 75784,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 75770,
											"end": 75784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75555,
											"end": 75819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75271,
											"end": 75819,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 75271,
											"end": 75819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74057,
											"end": 75830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74008,
											"end": 75830,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 74008,
											"end": 75830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75846,
											"end": 75859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75846,
											"end": 75859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75842,
											"end": 75935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 75842,
											"end": 75935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75876,
											"end": 75923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 75892,
											"end": 75896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75906,
											"end": 75910,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 75913,
											"end": 75922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75876,
											"end": 75891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 75876,
											"end": 75923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75876,
											"end": 75923,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 75876,
											"end": 75923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75945,
											"end": 75992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 75961,
											"end": 75965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75967,
											"end": 75969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75971,
											"end": 75991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 75981,
											"end": 75990,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75971,
											"end": 75977,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 75971,
											"end": 75991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 75971,
											"end": 75991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75971,
											"end": 75991,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 75971,
											"end": 75991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75945,
											"end": 75960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 75945,
											"end": 75992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30169,
											"end": 30380,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 30169,
											"end": 30380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30240,
											"end": 30261,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30240,
											"end": 30261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30236,
											"end": 30327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 30236,
											"end": 30327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30285,
											"end": 30315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30285,
											"end": 30315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30285,
											"end": 30315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30285,
											"end": 30315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30312,
											"end": 30313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30285,
											"end": 30315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30285,
											"end": 30315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30285,
											"end": 30315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30285,
											"end": 30315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30236,
											"end": 30327,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 30236,
											"end": 30327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30337,
											"end": 30372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 30345,
											"end": 30352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30362,
											"end": 30363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30366,
											"end": 30371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30337,
											"end": 30344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 30337,
											"end": 30372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60585,
											"end": 60904,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 60585,
											"end": 60904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60667,
											"end": 60671,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60676,
											"end": 60682,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2016"
										},
										{
											"begin": 60659,
											"end": 60682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60659,
											"end": 60682,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60659,
											"end": 60682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60659,
											"end": 60780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 60659,
											"end": 60780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60659,
											"end": 60780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60774,
											"end": 60780,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2016"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60738,
											"end": 60780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60738,
											"end": 60770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 51239,
											"end": 51292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51239,
											"end": 51292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51239,
											"end": 51292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51160,
											"end": 51300,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60738,
											"end": 60770,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 60738,
											"end": 60770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60738,
											"end": 60780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60738,
											"end": 60780,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60738,
											"end": 60780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60659,
											"end": 60780,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 60659,
											"end": 60780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60641,
											"end": 60897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60641,
											"end": 60897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 60641,
											"end": 60897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60856,
											"end": 60885,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69369,
											"end": 69485,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 69369,
											"end": 69485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35513,
											"end": 35526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 35513,
											"end": 35524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 35513,
											"end": 35526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62078,
											"end": 62626,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 62078,
											"end": 62626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62196,
											"end": 62213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62178,
											"end": 62228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62228,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 62178,
											"end": 62230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 62178,
											"end": 62230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62174,
											"end": 62619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 62174,
											"end": 62619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62547,
											"end": 62607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62547,
											"end": 62607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 62547,
											"end": 62607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62547,
											"end": 62607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62547,
											"end": 62607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62547,
											"end": 62607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62547,
											"end": 62607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62547,
											"end": 62607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 62174,
											"end": 62619,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 62174,
											"end": 62619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 62273,
											"end": 62313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62273,
											"end": 62313,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62269,
											"end": 62391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 62269,
											"end": 62391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62341,
											"end": 62375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62341,
											"end": 62375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 62341,
											"end": 62375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62341,
											"end": 62375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62341,
											"end": 62375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62341,
											"end": 62375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62341,
											"end": 62375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 62341,
											"end": 62375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1571,
											"end": 1748,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 62269,
											"end": 62391,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 62269,
											"end": 62391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62405,
											"end": 62459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 62435,
											"end": 62452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62454,
											"end": 62458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62405,
											"end": 62434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 62405,
											"end": 62459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61027,
											"end": 61245,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 61027,
											"end": 61245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61102,
											"end": 61106,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61111,
											"end": 61117,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2016"
										},
										{
											"begin": 61094,
											"end": 61117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61094,
											"end": 61117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61090,
											"end": 61238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 61090,
											"end": 61238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61197,
											"end": 61226,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37000,
											"end": 37253,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 37000,
											"end": 37253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34480,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 37151,
											"end": 37159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37170,
											"end": 37189,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37205,
											"end": 37245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37205,
											"end": 37245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37159,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37205,
											"end": 37245,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 37205,
											"end": 37245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37074,
											"end": 37098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37074,
											"end": 37098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37205,
											"end": 37245,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37063,
											"end": 37253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37000,
											"end": 37253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37000,
											"end": 37253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76736,
											"end": 77268,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 76736,
											"end": 77268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66989,
											"end": 66995,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 66989,
											"end": 67002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66989,
											"end": 67002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 66989,
											"end": 67002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 66989,
											"end": 67002,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 66989,
											"end": 67002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66989,
											"end": 67002,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 76814,
											"end": 76852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76839,
											"end": 76851,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 76814,
											"end": 76852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76852,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76814,
											"end": 76852,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76901,
											"end": 76902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 76887,
											"end": 76903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76887,
											"end": 76903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 76887,
											"end": 76903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76863,
											"end": 76903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76863,
											"end": 76903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76932,
											"end": 76936,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76919,
											"end": 76920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 76914,
											"end": 76921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76914,
											"end": 76937,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76937,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 76958,
											"end": 76973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76973,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76973,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C4648"
										},
										{
											"begin": 76958,
											"end": 76978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76914,
											"end": 76921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76973,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76958,
											"end": 76980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 76958,
											"end": 76980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "564"
										},
										{
											"begin": 76958,
											"end": 76980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76953,
											"end": 76954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 76948,
											"end": 76955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76948,
											"end": 76980,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76980,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76980,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76948,
											"end": 76955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76948,
											"end": 76980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77023,
											"end": 77038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 77023,
											"end": 77038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76991,
											"end": 77053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 76991,
											"end": 77053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77008,
											"end": 77012,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 77008,
											"end": 77012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77023,
											"end": 77038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77041,
											"end": 77052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76991,
											"end": 76999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 76991,
											"end": 77053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76991,
											"end": 77053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 76991,
											"end": 77053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 77064,
											"end": 77079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77064,
											"end": 77260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 77064,
											"end": 77260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77064,
											"end": 77079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "791AC947"
										},
										{
											"begin": 77064,
											"end": 77130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 77064,
											"end": 77260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77145,
											"end": 77156,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77145,
											"end": 77156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77064,
											"end": 77079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77187,
											"end": 77191,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 77187,
											"end": 77191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77214,
											"end": 77218,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 77214,
											"end": 77218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77234,
											"end": 77249,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 77234,
											"end": 77249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 77064,
											"end": 77260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77064,
											"end": 77260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77064,
											"end": 77260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 77064,
											"end": 77260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67025,
											"end": 67031,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 67025,
											"end": 67039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67025,
											"end": 67039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 67025,
											"end": 67039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67025,
											"end": 67039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67025,
											"end": 67039,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 76736,
											"end": 77268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77276,
											"end": 78127,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 77276,
											"end": 78127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77319,
											"end": 77331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77319,
											"end": 77331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77358,
											"end": 77383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 77382,
											"end": 77383,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 77358,
											"end": 77379,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 77358,
											"end": 77383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 77358,
											"end": 77383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77358,
											"end": 77383,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 77358,
											"end": 77383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77416,
											"end": 77427,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 77416,
											"end": 77427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77342,
											"end": 77383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77342,
											"end": 77383,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77416,
											"end": 77427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77416,
											"end": 77427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77342,
											"end": 77383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77342,
											"end": 77383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77342,
											"end": 77383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77416,
											"end": 77427,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "tag",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 77408,
											"end": 77475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 77508,
											"end": 77519,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 77508,
											"end": 77519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77394,
											"end": 77475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77394,
											"end": 77475,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77508,
											"end": 77519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77508,
											"end": 77519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77533,
											"end": 77538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77533,
											"end": 77538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77533,
											"end": 77538,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77508,
											"end": 77519,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 77500,
											"end": 77567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 77600,
											"end": 77611,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77600,
											"end": 77611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77486,
											"end": 77567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77486,
											"end": 77567,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77600,
											"end": 77611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77600,
											"end": 77611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77625,
											"end": 77630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77625,
											"end": 77630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77625,
											"end": 77630,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77600,
											"end": 77611,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 77592,
											"end": 77659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 77692,
											"end": 77703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77692,
											"end": 77703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77578,
											"end": 77659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77578,
											"end": 77659,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77692,
											"end": 77703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77692,
											"end": 77703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77717,
											"end": 77722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77717,
											"end": 77722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77717,
											"end": 77722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77692,
											"end": 77703,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 77684,
											"end": 77751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 77784,
											"end": 77795,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 77784,
											"end": 77795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77670,
											"end": 77751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77670,
											"end": 77751,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77784,
											"end": 77795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77784,
											"end": 77795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77809,
											"end": 77814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77809,
											"end": 77814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77809,
											"end": 77814,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77784,
											"end": 77795,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "tag",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 77776,
											"end": 77843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 77876,
											"end": 77887,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 77876,
											"end": 77887,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77762,
											"end": 77843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77762,
											"end": 77843,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77876,
											"end": 77887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77876,
											"end": 77887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77901,
											"end": 77906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77901,
											"end": 77906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77901,
											"end": 77906,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77876,
											"end": 77887,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 77868,
											"end": 77935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 77968,
											"end": 77979,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 77968,
											"end": 77979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77854,
											"end": 77935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77854,
											"end": 77935,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77968,
											"end": 77979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77968,
											"end": 77979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77993,
											"end": 77998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77993,
											"end": 77998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77993,
											"end": 77998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77968,
											"end": 77979,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "tag",
											"source": 0,
											"value": "603"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 77960,
											"end": 78027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 78060,
											"end": 78071,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 78060,
											"end": 78071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77946,
											"end": 78027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77946,
											"end": 78027,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 78060,
											"end": 78071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78060,
											"end": 78071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78085,
											"end": 78090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78085,
											"end": 78090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78085,
											"end": 78090,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 78060,
											"end": 78071,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "tag",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "tag",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 78052,
											"end": 78119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 77276,
											"end": 78127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 29841,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 29628,
											"end": 29841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29699,
											"end": 29720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29699,
											"end": 29720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29695,
											"end": 29788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 29695,
											"end": 29788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29744,
											"end": 29776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29744,
											"end": 29776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29744,
											"end": 29776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29744,
											"end": 29776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29773,
											"end": 29774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29744,
											"end": 29776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29744,
											"end": 29776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29744,
											"end": 29776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29744,
											"end": 29776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29695,
											"end": 29788,
											"name": "tag",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 29695,
											"end": 29788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 29814,
											"end": 29815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29818,
											"end": 29825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29827,
											"end": 29832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 29798,
											"end": 29833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23014,
											"end": 23163,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 23014,
											"end": 23163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 10731,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "tag",
											"source": 0,
											"value": "614"
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23155,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 23140,
											"end": 23145,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23147,
											"end": 23154,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23117,
											"end": 23139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 23117,
											"end": 23155,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35011,
											"end": 35140,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 35011,
											"end": 35140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 10731,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35094,
											"end": 35132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 35119,
											"end": 35131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35094,
											"end": 35118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 35094,
											"end": 35132,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58917,
											"end": 58985,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 58917,
											"end": 58985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 10731,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31914,
											"end": 32413,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 31914,
											"end": 32413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32081,
											"end": 32100,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32081,
											"end": 32100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32077,
											"end": 32168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 32077,
											"end": 32168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32124,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32124,
											"end": 32156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32124,
											"end": 32156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32124,
											"end": 32156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32153,
											"end": 32154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32124,
											"end": 32156,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32124,
											"end": 32156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32124,
											"end": 32156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32124,
											"end": 32156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32077,
											"end": 32168,
											"name": "tag",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 32077,
											"end": 32168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32182,
											"end": 32203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32182,
											"end": 32203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 32178,
											"end": 32270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32227,
											"end": 32258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32227,
											"end": 32258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32255,
											"end": 32256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32227,
											"end": 32258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32227,
											"end": 32258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32227,
											"end": 32258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32178,
											"end": 32270,
											"name": "tag",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 32178,
											"end": 32270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32293,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32280,
											"end": 32293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32300,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32309,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32280,
											"end": 32317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32328,
											"end": 32406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32328,
											"end": 32406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32328,
											"end": 32406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 32328,
											"end": 32406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32379,
											"end": 32386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 32388,
											"end": 32393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1748,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "tag",
											"source": 0,
											"value": "634"
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32363,
											"end": 32394,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32012,
											"end": 32413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31914,
											"end": 32413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31914,
											"end": 32413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31914,
											"end": 32413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31914,
											"end": 32413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31914,
											"end": 32413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76008,
											"end": 76115,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 76008,
											"end": 76115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76065,
											"end": 76072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76097,
											"end": 76098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76093,
											"end": 76094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76093,
											"end": 76098,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 76092,
											"end": 76107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 76092,
											"end": 76107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76106,
											"end": 76107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76092,
											"end": 76107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 76092,
											"end": 76107,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76092,
											"end": 76107,
											"name": "tag",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 76092,
											"end": 76107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 76102,
											"end": 76103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76085,
											"end": 76107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 76008,
											"end": 76115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27436,
											"end": 27752,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 27436,
											"end": 27752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27528,
											"end": 27546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27528,
											"end": 27546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27524,
											"end": 27612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 27524,
											"end": 27612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27570,
											"end": 27600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27570,
											"end": 27600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27570,
											"end": 27600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27570,
											"end": 27600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27597,
											"end": 27598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27570,
											"end": 27600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27570,
											"end": 27600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27570,
											"end": 27600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27570,
											"end": 27600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27524,
											"end": 27612,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 27524,
											"end": 27612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27626,
											"end": 27642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27622,
											"end": 27710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 27622,
											"end": 27710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27666,
											"end": 27698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27666,
											"end": 27698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27666,
											"end": 27698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27666,
											"end": 27698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27695,
											"end": 27696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27666,
											"end": 27698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27666,
											"end": 27698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27666,
											"end": 27698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27666,
											"end": 27698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27622,
											"end": 27710,
											"name": "tag",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 27622,
											"end": 27710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27720,
											"end": 27744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 27728,
											"end": 27732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27734,
											"end": 27736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27738,
											"end": 27743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28076,
											"end": 29275,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 28076,
											"end": 29275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28220,
											"end": 28238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28220,
											"end": 28238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28376,
											"end": 28381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28372,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28358,
											"end": 28372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 28358,
											"end": 28381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "tag",
											"source": 0,
											"value": "648"
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28358,
											"end": 28381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "tag",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28414,
											"end": 28433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28472,
											"end": 28491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28472,
											"end": 28491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28472,
											"end": 28491,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28468,
											"end": 28585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28468,
											"end": 28585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 28468,
											"end": 28585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28519,
											"end": 28569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28519,
											"end": 28569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28519,
											"end": 28569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28519,
											"end": 28569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14713,
											"end": 14745,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14713,
											"end": 14745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28519,
											"end": 28569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28519,
											"end": 28569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28519,
											"end": 28569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14695,
											"end": 14746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14832,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14668,
											"end": 14686,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14668,
											"end": 14686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28519,
											"end": 28569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 14493,
											"end": 14838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28468,
											"end": 28585,
											"name": "tag",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 28468,
											"end": 28585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28728,
											"end": 28747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28728,
											"end": 28747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28728,
											"end": 28747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28728,
											"end": 28747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28708,
											"end": 28747,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "tag",
											"source": 0,
											"value": "649"
										},
										{
											"begin": 28216,
											"end": 28774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28790,
											"end": 28806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28790,
											"end": 28806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 29225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 28786,
											"end": 29225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28970,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28956,
											"end": 28970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28956,
											"end": 28979,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 29225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 28786,
											"end": 29225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 29225,
											"name": "tag",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 28786,
											"end": 29225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 29225,
											"name": "tag",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 28786,
											"end": 29225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29257,
											"end": 29259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29251,
											"end": 29255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 29261,
											"end": 29266,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1748,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "tag",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29267,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 29275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28076,
											"end": 29275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28076,
											"end": 29275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28076,
											"end": 29275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28076,
											"end": 29275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52003,
											"end": 52347,
											"name": "tag",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 52003,
											"end": 52347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52095,
											"end": 52132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "659"
										},
										{
											"begin": 52114,
											"end": 52131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52095,
											"end": 52113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 52095,
											"end": 52132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52095,
											"end": 52132,
											"name": "tag",
											"source": 0,
											"value": "659"
										},
										{
											"begin": 52095,
											"end": 52132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "PUSH",
											"source": 0,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52148,
											"end": 52175,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 52192,
											"end": 52203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52192,
											"end": 52203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52192,
											"end": 52207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52188,
											"end": 52340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "661"
										},
										{
											"begin": 52188,
											"end": 52340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52224,
											"end": 52277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 52253,
											"end": 52270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 52276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52224,
											"end": 52252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "663"
										},
										{
											"begin": 52224,
											"end": 52277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52188,
											"end": 52340,
											"name": "tag",
											"source": 0,
											"value": "661"
										},
										{
											"begin": 52188,
											"end": 52340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52310,
											"end": 52328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 52310,
											"end": 52326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "666"
										},
										{
											"begin": 52310,
											"end": 52328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 11036,
											"name": "tag",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 10891,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12745,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 12405,
											"end": 12445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12405,
											"end": 12445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12405,
											"end": 12445,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12405,
											"end": 12445,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12405,
											"end": 12445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10954,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 10954,
											"end": 11029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23171,
											"end": 23391,
											"name": "tag",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 23171,
											"end": 23391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "672"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 10731,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "tag",
											"source": 0,
											"value": "672"
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 23338,
											"end": 23345,
											"name": "PUSH",
											"source": 0,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03"
										},
										{
											"begin": 23338,
											"end": 23353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 23348,
											"end": 23353,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23338,
											"end": 23345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23338,
											"end": 23353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 23338,
											"end": 23353,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23338,
											"end": 23353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 23338,
											"end": 23353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23364,
											"end": 23373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23364,
											"end": 23373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 23376,
											"end": 23383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 23364,
											"end": 23383,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35148,
											"end": 35388,
											"name": "tag",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 35148,
											"end": 35388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 10731,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51396,
											"end": 51682,
											"name": "tag",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 51396,
											"end": 51682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51474,
											"end": 51491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51474,
											"end": 51503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51474,
											"end": 51503,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 51507,
											"end": 51508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51474,
											"end": 51508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51470,
											"end": 51591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 51470,
											"end": 51591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51532,
											"end": 51579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51532,
											"end": 51579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 51532,
											"end": 51579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51532,
											"end": 51579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51532,
											"end": 51579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51470,
											"end": 51591,
											"name": "tag",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 51470,
											"end": 51591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51396,
											"end": 51682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 43205,
											"name": "tag",
											"source": 0,
											"value": "663"
										},
										{
											"begin": 42949,
											"end": 43205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43032,
											"end": 43044,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43058,
											"end": 43070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43072,
											"end": 43095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43099,
											"end": 43118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 43099,
											"end": 43124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "tag",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "tag",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "tag",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43099,
											"end": 43124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43057,
											"end": 43124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43057,
											"end": 43124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43057,
											"end": 43124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43057,
											"end": 43124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43142,
											"end": 43197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "695"
										},
										{
											"begin": 43169,
											"end": 43175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43177,
											"end": 43184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43186,
											"end": 43196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43142,
											"end": 43168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "696"
										},
										{
											"begin": 43142,
											"end": 43197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43142,
											"end": 43197,
											"name": "tag",
											"source": 0,
											"value": "695"
										},
										{
											"begin": 43142,
											"end": 43197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43197,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 43205,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42949,
											"end": 43205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55927,
											"end": 56053,
											"name": "tag",
											"source": 0,
											"value": "666"
										},
										{
											"begin": 55927,
											"end": 56053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55978,
											"end": 55987,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55978,
											"end": 55991,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55974,
											"end": 56046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 55974,
											"end": 56046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56015,
											"end": 56034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43478,
											"end": 44075,
											"name": "tag",
											"source": 0,
											"value": "696"
										},
										{
											"begin": 43478,
											"end": 44075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43626,
											"end": 43638,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43656,
											"end": 43663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43651,
											"end": 44068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "702"
										},
										{
											"begin": 43651,
											"end": 44068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43680,
											"end": 43699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "703"
										},
										{
											"begin": 43688,
											"end": 43698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43680,
											"end": 43687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "704"
										},
										{
											"begin": 43680,
											"end": 43699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43680,
											"end": 43699,
											"name": "tag",
											"source": 0,
											"value": "703"
										},
										{
											"begin": 43680,
											"end": 43699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43651,
											"end": 44068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 43651,
											"end": 44068,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43651,
											"end": 44068,
											"name": "tag",
											"source": 0,
											"value": "702"
										},
										{
											"begin": 43651,
											"end": 44068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43908,
											"end": 43925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43908,
											"end": 43925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43908,
											"end": 43930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43908,
											"end": 43957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43908,
											"end": 43957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43908,
											"end": 43957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "706"
										},
										{
											"begin": 43908,
											"end": 43957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43934,
											"end": 43952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43934,
											"end": 43952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43934,
											"end": 43952,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43934,
											"end": 43957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43908,
											"end": 43957,
											"name": "tag",
											"source": 0,
											"value": "706"
										},
										{
											"begin": 43908,
											"end": 43957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43904,
											"end": 44025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43904,
											"end": 44025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 43904,
											"end": 44025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43985,
											"end": 44009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43985,
											"end": 44009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43985,
											"end": 44009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43985,
											"end": 44009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6898,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 43985,
											"end": 44009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43985,
											"end": 44009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43985,
											"end": 44009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6848,
											"end": 6899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43985,
											"end": 44009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6702,
											"end": 6905,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 43904,
											"end": 44025,
											"name": "tag",
											"source": 0,
											"value": "707"
										},
										{
											"begin": 43904,
											"end": 44025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44046,
											"end": 44056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44039,
											"end": 44056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 44039,
											"end": 44056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44628,
											"end": 45156,
											"name": "tag",
											"source": 0,
											"value": "704"
										},
										{
											"begin": 44628,
											"end": 45156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44761,
											"end": 44778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44761,
											"end": 44778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44761,
											"end": 44782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44757,
											"end": 45149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "710"
										},
										{
											"begin": 44757,
											"end": 45149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44993,
											"end": 45003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44987,
											"end": 45004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45050,
											"end": 45065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45037,
											"end": 45047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45033,
											"end": 45035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45029,
											"end": 45048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45022,
											"end": 45066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44757,
											"end": 45149,
											"name": "tag",
											"source": 0,
											"value": "710"
										},
										{
											"begin": 44757,
											"end": 45149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45120,
											"end": 45137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 262,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 14,
											"end": 262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 88,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 96,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 143,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 122,
											"end": 129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 118,
											"end": 141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 114,
											"end": 146,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 111,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 159,
											"end": 160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 163,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 182,
											"end": 205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 205,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 252,
											"end": 254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 237,
											"end": 255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 256,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 267,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 267,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 352,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 475,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 362,
											"end": 475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 373,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 370,
											"end": 383,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 362,
											"end": 475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 362,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 362,
											"end": 475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 452,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 452,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 452,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 433,
											"end": 444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 433,
											"end": 444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 433,
											"end": 444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 362,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 362,
											"end": 475,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 362,
											"end": 475,
											"name": "tag",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 362,
											"end": 475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 509,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 491,
											"end": 507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 267,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 522,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 522,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 671,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 653,
											"end": 674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 634,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 697,
											"end": 710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 739,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 726,
											"end": 744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 762,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 834,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 829,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 827,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 814,
											"end": 832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 807,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 797,
											"end": 812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 762,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 762,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 841,
											"name": "tag",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 762,
											"end": 841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 902,
											"end": 904,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 877,
											"end": 906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 862,
											"end": 907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 909,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 858,
											"end": 912,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 522,
											"end": 918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 522,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1054,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 923,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 998,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1030,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1046,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1059,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1174,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1186,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 1156,
											"end": 1208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1208,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 1156,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1253,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 1262,
											"end": 1293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1293,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 1262,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1317,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1913,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 1753,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1838,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1888,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1889,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 1847,
											"end": 1907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 1847,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1918,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2082,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 2047,
											"end": 2099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2099,
											"name": "tag",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 2047,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2145,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2208,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2225,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 2191,
											"end": 2225,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 2191,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2257,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2311,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2301,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2312,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 2275,
											"end": 2330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2330,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 2275,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2369,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2395,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 2378,
											"end": 2412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2412,
											"name": "tag",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 2378,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2470,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2439,
											"end": 2453,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2471,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 2421,
											"end": 2488,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2486,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2488,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 2421,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2520,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2539,
											"end": 2545,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 2564,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2600,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 2564,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 2564,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2607,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2607,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2607,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 3068,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2612,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2760,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2744,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2776,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 2832,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2863,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 2832,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 2941,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2943,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 2911,
											"end": 2943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 2952,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 2952,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 3068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 3068,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3043,
											"end": 3061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3062,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 3068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3372,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3387,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "tag",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 3336,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3434,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 3443,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 3443,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3498,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3550,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3522,
											"end": 3554,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 3522,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 3563,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 3563,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3622,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3674,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3677,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 3646,
											"end": 3678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 3687,
											"end": 3720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 3687,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3746,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3800,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 3811,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3922,
											"end": 3925,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3927,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 3894,
											"end": 3927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 3936,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 3995,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4047,
											"end": 4050,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4032,
											"end": 4051,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4052,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 4019,
											"end": 4052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 4061,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4061,
											"end": 4094,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 4061,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4157,
											"end": 4176,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 4144,
											"end": 4177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 4186,
											"end": 4219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 4186,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4297,
											"end": 4300,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4282,
											"end": 4301,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4302,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 4269,
											"end": 4302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 4311,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4344,
											"name": "tag",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 4311,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4696,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4381,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4495,
											"end": 4504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4493,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4510,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 4475,
											"end": 4527,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4523,
											"end": 4524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4525,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4527,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 4475,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 4606,
											"end": 4611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 4581,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 4655,
											"end": 4690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4690,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 4655,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5070,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4890,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4988,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5000,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5005,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5020,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 4970,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5041,
											"end": 5064,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4890,
											"end": 5070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5202,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 5075,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5136,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5131,
											"end": 5134,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5127,
											"end": 5147,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5171,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5164,
											"end": 5165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5157,
											"end": 5172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5188,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 6263,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5207,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5331,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5348,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 5313,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5410,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 5444,
											"end": 5449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 5419,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 5419,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5529,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5578,
											"end": 5592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5592,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5609,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 5575,
											"end": 5609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5607,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5609,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 5575,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5628,
											"end": 5650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5695,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5685,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5677,
											"end": 5679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5696,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 5659,
											"end": 5714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5714,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 5659,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5771,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5794,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 5758,
											"end": 5794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 5774,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5851,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 5852,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5819,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5903,
											"end": 5916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5899,
											"end": 5921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 5925,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 5895,
											"end": 5926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5990,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6013,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 5941,
											"end": 6013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 5993,
											"end": 6011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6031,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6022,
											"end": 6044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6115,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6098,
											"end": 6100,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6096,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6083,
											"end": 6116,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6119,
											"end": 6131,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "tag",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6178,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6167,
											"end": 6169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6159,
											"end": 6165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6188,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6220,
											"end": 6222,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6218,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 6263,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 6263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 6263,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 6263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 6263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 6263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6697,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6450,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6548,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6537,
											"end": 6560,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6565,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6582,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 6530,
											"end": 6582,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6580,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6582,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 6530,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6627,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6636,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6661,
											"end": 6666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6636,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 6636,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7838,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7450,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7518,
											"end": 7524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7581,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7567,
											"end": 7576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7582,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "783"
										},
										{
											"begin": 7547,
											"end": 7599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7599,
											"name": "tag",
											"source": 1,
											"value": "783"
										},
										{
											"begin": 7547,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7644,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 7678,
											"end": 7683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 7653,
											"end": 7684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7684,
											"name": "tag",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 7653,
											"end": 7684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7760,
											"end": 7762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 7773,
											"end": 7806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7806,
											"name": "tag",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 7773,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7832,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7838,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7838,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7970,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 7843,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7904,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7899,
											"end": 7902,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7895,
											"end": 7915,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7885,
											"end": 7916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7935,
											"end": 7939,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7925,
											"end": 7940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7959,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7964,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 8143,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7975,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8057,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8112,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8113,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8066,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8066,
											"end": 8137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8117,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 8117,
											"end": 8135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8365,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8148,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8204,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 8204,
											"end": 8336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8253,
											"end": 8256,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8249,
											"end": 8269,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8283,
											"end": 8298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8204,
											"end": 8336,
											"name": "tag",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 8204,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8350,
											"end": 8359,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 9003,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8623,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8703,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8698,
											"end": 8710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8710,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8766,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 8766,
											"end": 8827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8812,
											"end": 8818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8808,
											"end": 8825,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8766,
											"end": 8827,
											"name": "tag",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 8766,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8873,
											"end": 8875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8865,
											"end": 8871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8876,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8877,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 8836,
											"end": 8997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8929,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8914,
											"end": 8917,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8910,
											"end": 8930,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 8908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8954,
											"end": 8958,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8951,
											"end": 8952,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 8986,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8979,
											"end": 8980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8972,
											"end": 8987,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9495,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 9368,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9439,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9424,
											"end": 9427,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9420,
											"end": 9440,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9464,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9457,
											"end": 9458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9488,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9481,
											"end": 9482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9489,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12480,
											"end": 12605,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 12480,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12545,
											"end": 12554,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12545,
											"end": 12554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12545,
											"end": 12554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12566,
											"end": 12576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12566,
											"end": 12576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12566,
											"end": 12576,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12563,
											"end": 12599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12563,
											"end": 12599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 12563,
											"end": 12599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12579,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 12579,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 12579,
											"end": 12597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12959,
											"end": 13210,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 12959,
											"end": 13210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13029,
											"end": 13035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13082,
											"end": 13084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13070,
											"end": 13079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13068,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13057,
											"end": 13080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13053,
											"end": 13085,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13050,
											"end": 13102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13050,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 13050,
											"end": 13102,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13098,
											"end": 13099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13100,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13050,
											"end": 13102,
											"name": "tag",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 13050,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13124,
											"end": 13140,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13149,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 13174,
											"end": 13179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13149,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 13149,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17063,
											"end": 17198,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 17063,
											"end": 17198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17102,
											"end": 17105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17123,
											"end": 17140,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17123,
											"end": 17140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17120,
											"end": 17163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 17120,
											"end": 17163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17143,
											"end": 17161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 17143,
											"end": 17161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 17143,
											"end": 17161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17143,
											"end": 17161,
											"name": "tag",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 17143,
											"end": 17161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17191,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17179,
											"end": 17192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17063,
											"end": 17198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17203,
											"end": 17331,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 17203,
											"end": 17331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17270,
											"end": 17279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17270,
											"end": 17279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17270,
											"end": 17279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17291,
											"end": 17302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17291,
											"end": 17302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17291,
											"end": 17302,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17288,
											"end": 17325,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17288,
											"end": 17325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 17288,
											"end": 17325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17305,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 17305,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 17305,
											"end": 17323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17336,
											"end": 17520,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 17336,
											"end": 17520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17406,
											"end": 17412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17459,
											"end": 17461,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17447,
											"end": 17456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17434,
											"end": 17457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17462,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 17427,
											"end": 17479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17427,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 17427,
											"end": 17479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17475,
											"end": 17476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17472,
											"end": 17473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17465,
											"end": 17477,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17427,
											"end": 17479,
											"name": "tag",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 17427,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17498,
											"end": 17514,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17498,
											"end": 17514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17336,
											"end": 17520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17336,
											"end": 17520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17525,
											"end": 18505,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 17525,
											"end": 18505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17787,
											"end": 17791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17835,
											"end": 17838,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17824,
											"end": 17833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17820,
											"end": 17839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17866,
											"end": 17872,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17855,
											"end": 17864,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17848,
											"end": 17873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17892,
											"end": 17894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17930,
											"end": 17936,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17925,
											"end": 17927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17914,
											"end": 17923,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17910,
											"end": 17928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17903,
											"end": 17937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17968,
											"end": 17970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17957,
											"end": 17966,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17953,
											"end": 17971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17946,
											"end": 17977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17997,
											"end": 18003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18032,
											"end": 18038,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18026,
											"end": 18039,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18063,
											"end": 18069,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18055,
											"end": 18061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18048,
											"end": 18070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18101,
											"end": 18104,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 18090,
											"end": 18099,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18086,
											"end": 18105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18140,
											"end": 18142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18132,
											"end": 18138,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 18128,
											"end": 18143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18143,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18161,
											"end": 18162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "tag",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18185,
											"end": 18191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18182,
											"end": 18183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18179,
											"end": 18192,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "834"
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18250,
											"end": 18263,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18250,
											"end": 18263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18246,
											"end": 18285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18286,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18341,
											"end": 18356,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18341,
											"end": 18356,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18341,
											"end": 18356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18341,
											"end": 18356,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18306,
											"end": 18318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18306,
											"end": 18318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18306,
											"end": 18318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18306,
											"end": 18318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18282,
											"end": 18283,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18200,
											"end": 18209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "tag",
											"source": 1,
											"value": "834"
										},
										{
											"begin": 18171,
											"end": 18366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18417,
											"end": 18419,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18402,
											"end": 18420,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18402,
											"end": 18420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18395,
											"end": 18455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18486,
											"end": 18489,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18471,
											"end": 18490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18464,
											"end": 18499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18383,
											"end": 18386,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17525,
											"end": 18505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17525,
											"end": 18505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18846,
											"end": 19364,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 18846,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18948,
											"end": 18950,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18943,
											"end": 18946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18940,
											"end": 18951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18937,
											"end": 19358,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18937,
											"end": 19358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 18937,
											"end": 19358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18984,
											"end": 18989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18981,
											"end": 18982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18974,
											"end": 18990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19028,
											"end": 19032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19025,
											"end": 19026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19015,
											"end": 19033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19098,
											"end": 19100,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 19086,
											"end": 19096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19082,
											"end": 19101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19079,
											"end": 19080,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 19075,
											"end": 19102,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 19069,
											"end": 19073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19065,
											"end": 19103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19134,
											"end": 19138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19122,
											"end": 19132,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19119,
											"end": 19139,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19116,
											"end": 19163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19116,
											"end": 19163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 19116,
											"end": 19163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19157,
											"end": 19161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19116,
											"end": 19163,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 19116,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19212,
											"end": 19214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 19207,
											"end": 19210,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19203,
											"end": 19215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19200,
											"end": 19201,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 19196,
											"end": 19216,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 19190,
											"end": 19194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19176,
											"end": 19217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19176,
											"end": 19217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19267,
											"end": 19348,
											"name": "tag",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 19267,
											"end": 19348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19285,
											"end": 19287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19278,
											"end": 19283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19275,
											"end": 19288,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19267,
											"end": 19348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19267,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 19267,
											"end": 19348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19330,
											"end": 19346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19330,
											"end": 19346,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19311,
											"end": 19312,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19300,
											"end": 19313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19267,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 19267,
											"end": 19348,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19540,
											"end": 20885,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 19540,
											"end": 20885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19666,
											"end": 19669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19660,
											"end": 19670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19693,
											"end": 19711,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19685,
											"end": 19691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19682,
											"end": 19712,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19679,
											"end": 19735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19679,
											"end": 19735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 19679,
											"end": 19735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19715,
											"end": 19733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 19715,
											"end": 19733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 19715,
											"end": 19733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19715,
											"end": 19733,
											"name": "tag",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 19715,
											"end": 19733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19744,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 19834,
											"end": 19840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19794,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 19826,
											"end": 19830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19820,
											"end": 19831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19794,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 19794,
											"end": 19832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19794,
											"end": 19832,
											"name": "tag",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 19794,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19788,
											"end": 19792,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19744,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 19744,
											"end": 19841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19744,
											"end": 19841,
											"name": "tag",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 19744,
											"end": 19841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19896,
											"end": 19900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19896,
											"end": 19900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19953,
											"end": 19955,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 19942,
											"end": 19956,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19942,
											"end": 19956,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19970,
											"end": 19971,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19965,
											"end": 20628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19965,
											"end": 20628,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19965,
											"end": 20628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 19965,
											"end": 20628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20672,
											"end": 20673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20689,
											"end": 20695,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20686,
											"end": 20775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20686,
											"end": 20775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 20686,
											"end": 20775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20741,
											"end": 20760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20741,
											"end": 20760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20741,
											"end": 20760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20735,
											"end": 20761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20686,
											"end": 20775,
											"name": "tag",
											"source": 1,
											"value": "851"
										},
										{
											"begin": 20686,
											"end": 20775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19497,
											"end": 19498,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 19493,
											"end": 19504,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19493,
											"end": 19504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19493,
											"end": 19504,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 19489,
											"end": 19513,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 19485,
											"end": 19514,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19475,
											"end": 19515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19521,
											"end": 19522,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19517,
											"end": 19528,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19517,
											"end": 19528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19517,
											"end": 19528,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 19472,
											"end": 19529,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 20788,
											"end": 20869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20788,
											"end": 20869,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19935,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 19935,
											"end": 20879,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19965,
											"end": 20628,
											"name": "tag",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 19965,
											"end": 20628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18793,
											"end": 18794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18786,
											"end": 18800,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18786,
											"end": 18800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18786,
											"end": 18800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18830,
											"end": 18834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18817,
											"end": 18835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18817,
											"end": 18835,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20001,
											"end": 20021,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20001,
											"end": 20021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20001,
											"end": 20021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "tag",
											"source": 1,
											"value": "854"
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20133,
											"end": 20140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20130,
											"end": 20131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20127,
											"end": 20141,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20222,
											"end": 20241,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20222,
											"end": 20241,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20222,
											"end": 20241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20216,
											"end": 20242,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20201,
											"end": 20243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20201,
											"end": 20243,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20314,
											"end": 20341,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 20314,
											"end": 20341,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20314,
											"end": 20341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20314,
											"end": 20341,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 20282,
											"end": 20283,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20270,
											"end": 20284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20270,
											"end": 20284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20270,
											"end": 20284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20270,
											"end": 20284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20149,
											"end": 20168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20149,
											"end": 20168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "854"
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "tag",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 20119,
											"end": 20355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20123,
											"end": 20126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20383,
											"end": 20389,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20374,
											"end": 20381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20371,
											"end": 20390,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 20368,
											"end": 20569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20444,
											"end": 20463,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20444,
											"end": 20463,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20444,
											"end": 20463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20438,
											"end": 20464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20527,
											"end": 20528,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 20523,
											"end": 20537,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20537,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 20539,
											"end": 20542,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 20519,
											"end": 20543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20515,
											"end": 20552,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 20511,
											"end": 20553,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 20496,
											"end": 20554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20481,
											"end": 20555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20481,
											"end": 20555,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20569,
											"name": "tag",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 20368,
											"end": 20569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20615,
											"end": 20616,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20599,
											"end": 20613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20599,
											"end": 20613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20599,
											"end": 20613,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 20595,
											"end": 20617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20582,
											"end": 20618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20582,
											"end": 20618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19540,
											"end": 20885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20890,
											"end": 21177,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 20890,
											"end": 21177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21019,
											"end": 21022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21057,
											"end": 21063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21051,
											"end": 21064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21073,
											"end": 21139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 21132,
											"end": 21138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21127,
											"end": 21130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21120,
											"end": 21124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21112,
											"end": 21118,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21108,
											"end": 21125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21073,
											"end": 21139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 21073,
											"end": 21139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21073,
											"end": 21139,
											"name": "tag",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 21073,
											"end": 21139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21171,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20890,
											"end": 21177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20890,
											"end": 21177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B": "52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00",
										"5C46C655E238AA25F8CBB2DC253AFD95EC6FE3438BB2613B924EC6DFBCFD524D": "52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02",
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									}
								}
							},
							"sourceList": [
								"ERC1967.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addAddress(address[],bool)": "1c537de5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"changeTokenCap(uint256)": "da7fe652",
							"decimals()": "313ce567",
							"exemptFee(address,bool)": "2dc4f5e6",
							"initialize(address)": "c4d66de8",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"open()": "fcfff16f",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"removeETH()": "217b6da6",
							"renounceOwnership()": "715018a6",
							"rmvLimits()": "6ed6a48d",
							"setMode()": "08ade0c9",
							"setSwapback(uint256,uint256)": "0313fc4b",
							"setTax(uint256,uint256)": "667f6526",
							"setTx(uint256)": "620cc86c",
							"setWalletLimit(uint256)": "f1d5f517",
							"setWallets(address,address,address,address,address,address,address,address)": "23bc25ed",
							"symbol()": "95d89b41",
							"tokenCap()": "dd54291b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"triggerSwap()": "8f937cc4",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"viewInfo()": "ae601480"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"ExcludedFromFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_taxWallet1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_taxWallet2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_taxWallet3\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_taxWallet4\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_taxWallet5\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_taxWallet6\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_taxWallet7\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_taxWallet8\",\"type\":\"address\"}],\"name\":\"FeeReceiversUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellFee\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LimitsRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_txAmountLimit\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_walletAmountLimit\",\"type\":\"uint256\"}],\"name\":\"MaxWalletAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_swapbackMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_swapbackMax\",\"type\":\"uint256\"}],\"name\":\"SwapbackUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TradingOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"amount\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"addAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeTokenCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"exemptFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"open\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rmvLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taxSwapThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTaxSwap\",\"type\":\"uint256\"}],\"name\":\"setSwapback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellTax\",\"type\":\"uint256\"}],\"name\":\"setTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setWalletLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"taxWallet1\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"taxWallet2\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"taxWallet3\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"taxWallet4\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"taxWallet5\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"taxWallet6\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"taxWallet7\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"taxWallet8\",\"type\":\"address\"}],\"name\":\"setWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triggerSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWalletSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxSwapThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTaxSwap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2349,
								"contract": "ERC1967.sol:MyToken",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2351,
								"contract": "ERC1967.sol:MyToken",
								"label": "_taxWallet1",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 2353,
								"contract": "ERC1967.sol:MyToken",
								"label": "_taxWallet2",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 2355,
								"contract": "ERC1967.sol:MyToken",
								"label": "_taxWallet3",
								"offset": 0,
								"slot": "3",
								"type": "t_address_payable"
							},
							{
								"astId": 2357,
								"contract": "ERC1967.sol:MyToken",
								"label": "_taxWallet4",
								"offset": 0,
								"slot": "4",
								"type": "t_address_payable"
							},
							{
								"astId": 2359,
								"contract": "ERC1967.sol:MyToken",
								"label": "_taxWallet5",
								"offset": 0,
								"slot": "5",
								"type": "t_address_payable"
							},
							{
								"astId": 2361,
								"contract": "ERC1967.sol:MyToken",
								"label": "_taxWallet6",
								"offset": 0,
								"slot": "6",
								"type": "t_address_payable"
							},
							{
								"astId": 2363,
								"contract": "ERC1967.sol:MyToken",
								"label": "_taxWallet7",
								"offset": 0,
								"slot": "7",
								"type": "t_address_payable"
							},
							{
								"astId": 2365,
								"contract": "ERC1967.sol:MyToken",
								"label": "_taxWallet8",
								"offset": 0,
								"slot": "8",
								"type": "t_address_payable"
							},
							{
								"astId": 2367,
								"contract": "ERC1967.sol:MyToken",
								"label": "firstBlock",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2369,
								"contract": "ERC1967.sol:MyToken",
								"label": "lastLiquifyTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint64"
							},
							{
								"astId": 2371,
								"contract": "ERC1967.sol:MyToken",
								"label": "buyFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 2373,
								"contract": "ERC1967.sol:MyToken",
								"label": "sellFee",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 2375,
								"contract": "ERC1967.sol:MyToken",
								"label": "_preventSwapBefore",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 2377,
								"contract": "ERC1967.sol:MyToken",
								"label": "_buyCount",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 2379,
								"contract": "ERC1967.sol:MyToken",
								"label": "_txAmountLimit",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 2381,
								"contract": "ERC1967.sol:MyToken",
								"label": "_walletAmountLimit",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 2383,
								"contract": "ERC1967.sol:MyToken",
								"label": "_swapbackMin",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 2385,
								"contract": "ERC1967.sol:MyToken",
								"label": "_swapbackMax",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 2388,
								"contract": "ERC1967.sol:MyToken",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "19",
								"type": "t_contract(IDexRouter)2337"
							},
							{
								"astId": 2390,
								"contract": "ERC1967.sol:MyToken",
								"label": "uniswapV2Pair",
								"offset": 0,
								"slot": "20",
								"type": "t_address"
							},
							{
								"astId": 2392,
								"contract": "ERC1967.sol:MyToken",
								"label": "tradingOpen",
								"offset": 20,
								"slot": "20",
								"type": "t_bool"
							},
							{
								"astId": 2395,
								"contract": "ERC1967.sol:MyToken",
								"label": "inSwap",
								"offset": 21,
								"slot": "20",
								"type": "t_bool"
							},
							{
								"astId": 2398,
								"contract": "ERC1967.sol:MyToken",
								"label": "swapEnabled",
								"offset": 22,
								"slot": "20",
								"type": "t_bool"
							},
							{
								"astId": 2401,
								"contract": "ERC1967.sol:MyToken",
								"label": "launchmode",
								"offset": 23,
								"slot": "20",
								"type": "t_bool"
							},
							{
								"astId": 2403,
								"contract": "ERC1967.sol:MyToken",
								"label": "tokenCap",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 2407,
								"contract": "ERC1967.sol:MyToken",
								"label": "_canTx",
								"offset": 0,
								"slot": "22",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2457,
								"contract": "ERC1967.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IDexRouter)2337": {
								"encoding": "inplace",
								"label": "contract IDexRouter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1967.sol\":46465:49254  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1967.sol\":46465:49254  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ad014a2453d61385a9f8f35dd54bd2ab7456ccc8f22bfca74561ab8c85318a5564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ad014a2453d61385a9f8f35dd54bd2ab7456ccc8f22bfca74561ab8c85318a5564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD ADD BLOBBASEFEE 0x24 MSTORE8 0xD6 SGT DUP6 0xA9 0xF8 RETURN TSTORE 0xD5 0x4B 0xD2 0xAB PUSH21 0x56CCC8F22BFCA74561AB8C85318A5564736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "46465:2789:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;46465:2789:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ad014a2453d61385a9f8f35dd54bd2ab7456ccc8f22bfca74561ab8c85318a5564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD ADD BLOBBASEFEE 0x24 MSTORE8 0xD6 SGT DUP6 0xA9 0xF8 RETURN TSTORE 0xD5 0x4B 0xD2 0xAB PUSH21 0x56CCC8F22BFCA74561AB8C85318A5564736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "46465:2789:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46465,
									"end": 49254,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad014a2453d61385a9f8f35dd54bd2ab7456ccc8f22bfca74561ab8c85318a5564736f6c63430008180033",
									".code": [
										{
											"begin": 46465,
											"end": 49254,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 49254,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 49254,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 49254,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 46465,
											"end": 49254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46465,
											"end": 49254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 49254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46465,
											"end": 49254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46465,
											"end": 49254,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"ERC1967.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1967.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1967.sol\":{\"keccak256\":\"0x5ec682254bb3d89c6e6576419488a3e209dc73424c0aca2e05d83a75897cd89c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac6a1edd1edfc3f812042032a345f58060900a7050912b7277d613f3e8f5bb4\",\"dweb:/ipfs/QmV9qyfiqfX1B16XsjbwWPz28zBBr13PgQXrZ5BHqixG6X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC1967.sol": {
				"ast": {
					"absolutePath": "ERC1967.sol",
					"exportedSymbols": {
						"Address": [
							1598
						],
						"ContextUpgradeable": [
							396
						],
						"ERC1967Utils": [
							2003
						],
						"ERC20Upgradeable": [
							1138
						],
						"IBeacon": [
							1346
						],
						"IDexFactory": [
							2240
						],
						"IDexRouter": [
							2337
						],
						"IERC1155Errors": [
							532
						],
						"IERC1822Proxiable": [
							1337
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							437
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							485
						],
						"Initializable": [
							353
						],
						"MyToken": [
							3764
						],
						"OwnableUpgradeable": [
							1328
						],
						"StorageSlot": [
							1707
						],
						"UUPSUpgradeable": [
							2178
						]
					},
					"id": 3765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "141:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "225:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "239:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "414:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "439:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "423:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "461:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:57:0"
									},
									"src": "408:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "488:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "651:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "676:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "660:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "699:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "708:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:63:0"
									},
									"src": "645:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "731:67:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "813:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "850:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:9:0"
									},
									"scope": 77,
									"src": "804:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "867:73:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "955:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "973:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "965:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1005:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:0"
									},
									"scope": 77,
									"src": "946:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1022:219:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1256:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1265:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1285:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1277:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1310:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:6:0"
									},
									"scope": 77,
									"src": "1247:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1324:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1609:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1619:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:9:0"
									},
									"scope": 77,
									"src": "1600:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1691:681:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2387:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2403:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2395:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2420:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2412:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:6:0"
									},
									"scope": 77,
									"src": "2378:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2459:305:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2779:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2800:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2792:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2814:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2806:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2791:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2851:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2851:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2850:6:0"
									},
									"scope": 77,
									"src": "2770:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3765,
							"src": "215:2645:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3039:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3187:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3187:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3187:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3069:88:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3169:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3201:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3272:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3276:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3302:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3302:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:15:0"
									},
									"scope": 100,
									"src": "3263:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3325:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3398:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3430:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:15:0"
									},
									"scope": 100,
									"src": "3389:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3453:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3535:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3569:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:7:0"
									},
									"scope": 100,
									"src": "3526:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3765,
							"src": "3159:420:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3746:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3774:2258:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 353,
							"linearizedBaseContracts": [
								353
							],
							"name": "Initializable",
							"nameLocation": "6052:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "6073:300:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 110,
									"members": [
										{
											"constant": false,
											"id": 106,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "6518:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "6511:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 105,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "6511:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "6657:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "6652:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 108,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6652:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "6386:20:0",
									"nodeType": "StructDefinition",
									"scope": 353,
									"src": "6379:299:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "6829:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "6804:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 111,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "6804:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6853:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "6928:62:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 116,
									"name": "InvalidInitialization",
									"nameLocation": "7002:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:2:0"
									},
									"src": "6996:30:0"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "7034:59:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 119,
									"name": "NotInitializing",
									"nameLocation": "7105:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7120:2:0"
									},
									"src": "7099:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "7131:92:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 124,
									"name": "Initialized",
									"nameLocation": "7235:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "7254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "7247:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 121,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7247:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:16:0"
									},
									"src": "7229:34:0"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "7825:1109:0",
										"statements": [
											{
												"assignments": [
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7922:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "7893:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 128,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 127,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7893:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 110,
																"src": "7893:20:0"
															},
															"referencedDeclaration": 110,
															"src": "7893:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 132,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 130,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "7926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$110_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7926:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7893:59:0"
											},
											{
												"assignments": [
													134
												],
												"declarations": [
													{
														"constant": false,
														"id": 134,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "8022:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "8017:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 133,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8039:16:0",
													"subExpression": {
														"expression": {
															"id": 135,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "8040:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8042:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "8040:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8017:38:0"
											},
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "8073:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "8066:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 139,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8066:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 143,
												"initialValue": {
													"expression": {
														"id": 141,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "8087:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8089:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 106,
													"src": "8087:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8066:35:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "8457:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "8452:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 144,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8452:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 146,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "8472:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8487:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8472:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 149,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "8492:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8472:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8452:54:0"
											},
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "8522:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "8517:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 152,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 154,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "8537:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8552:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8537:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 159,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8565:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$353",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$353",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8557:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 157,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8557:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8557:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8571:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8557:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8576:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8557:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8586:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8557:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8537:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8517:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8604:13:0",
														"subExpression": {
															"id": 167,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "8605:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8621:13:0",
														"subExpression": {
															"id": 169,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "8622:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8604:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 176,
												"nodeType": "IfStatement",
												"src": "8600:93:0",
												"trueBody": {
													"id": 175,
													"nodeType": "Block",
													"src": "8636:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 172,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "8658:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8658:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 174,
															"nodeType": "RevertStatement",
															"src": "8651:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 177,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "8703:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8705:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "8703:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8720:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8703:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "8703:18:0"
											},
											{
												"condition": {
													"id": 183,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 134,
													"src": "8736:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "8732:69:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "8752:49:0",
													"statements": [
														{
															"expression": {
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 184,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "8767:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8769:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 109,
																	"src": "8767:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8785:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8767:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "8767:22:0"
														}
													]
												}
											},
											{
												"id": 192,
												"nodeType": "PlaceholderStatement",
												"src": "8811:1:0"
											},
											{
												"condition": {
													"id": 193,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 134,
													"src": "8827:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "8823:104:0",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "8843:84:0",
													"statements": [
														{
															"expression": {
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 194,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "8858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8860:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 109,
																	"src": "8858:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8858:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 199,
															"nodeType": "ExpressionStatement",
															"src": "8858:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8913:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 200,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "8901:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8901:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 203,
															"nodeType": "EmitStatement",
															"src": "8896:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "7271:525:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 207,
									"name": "initializer",
									"nameLocation": "7811:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7822:2:0"
									},
									"src": "7802:1132:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "10072:404:0",
										"statements": [
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "10169:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "10140:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 213,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 212,
																"name": "InitializableStorage",
																"nameLocations": [
																	"10140:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 110,
																"src": "10140:20:0"
															},
															"referencedDeclaration": 110,
															"src": "10140:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 215,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "10173:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$110_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10173:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10140:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 218,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "10216:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10218:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "10216:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 220,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "10235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10237:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "10235:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 222,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "10253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "10235:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10216:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "IfStatement",
												"src": "10212:107:0",
												"trueBody": {
													"id": 228,
													"nodeType": "Block",
													"src": "10262:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 225,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "10284:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10284:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 227,
															"nodeType": "RevertStatement",
															"src": "10277:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "10329:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10331:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "10329:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 233,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "10346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "10329:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "10329:24:0"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 236,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "10364:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10366:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "10364:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10382:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10364:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "10364:22:0"
											},
											{
												"id": 242,
												"nodeType": "PlaceholderStatement",
												"src": "10397:1:0"
											},
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 243,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "10409:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10411:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "10409:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10427:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10409:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "10409:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 250,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "10460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 249,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "10448:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10448:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "EmitStatement",
												"src": "10443:25:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8942:1085:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 254,
									"name": "reinitializer",
									"nameLocation": "10042:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "10063:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "10056:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 209,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "10056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10055:16:0"
									},
									"src": "10033:443:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "10720:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 257,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "10731:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10731:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "10731:20:0"
											},
											{
												"id": 260,
												"nodeType": "PlaceholderStatement",
												"src": "10762:1:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "10484:202:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 262,
									"name": "onlyInitializing",
									"nameLocation": "10701:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10717:2:0"
									},
									"src": "10692:79:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "10943:93:0",
										"statements": [
											{
												"condition": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10958:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 266,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "10959:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10959:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 273,
												"nodeType": "IfStatement",
												"src": "10954:75:0",
												"trueBody": {
													"id": 272,
													"nodeType": "Block",
													"src": "10978:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 269,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "11000:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11000:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 271,
															"nodeType": "RevertStatement",
															"src": "10993:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "10779:106:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "10900:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10918:2:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10943:0:0"
									},
									"scope": 353,
									"src": "10891:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "11581:384:0",
										"statements": [
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11678:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "11649:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 280,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 279,
																"name": "InitializableStorage",
																"nameLocations": [
																	"11649:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 110,
																"src": "11649:20:0"
															},
															"referencedDeclaration": 110,
															"src": "11649:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 282,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "11682:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$110_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11682:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11649:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 285,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "11725:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11727:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 109,
													"src": "11725:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "11721:78:0",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "11742:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 287,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "11764:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11764:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 289,
															"nodeType": "RevertStatement",
															"src": "11757:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 292,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "11813:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11815:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "11813:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11836:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 295,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "11836:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 294,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11831:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11831:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11844:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11831:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "11813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "IfStatement",
												"src": "11809:149:0",
												"trueBody": {
													"id": 318,
													"nodeType": "Block",
													"src": "11849:109:0",
													"statements": [
														{
															"expression": {
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 300,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "11864:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11866:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 106,
																	"src": "11864:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11886:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 304,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "11886:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 303,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "11881:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11881:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11894:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "11881:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "11864:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 309,
															"nodeType": "ExpressionStatement",
															"src": "11864:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 313,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11934:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 312,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "11934:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 311,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "11929:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11929:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "11942:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "11929:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 310,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "11917:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11917:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 317,
															"nodeType": "EmitStatement",
															"src": "11912:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "11044:482:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "11541:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11561:2:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11581:0:0"
									},
									"scope": 353,
									"src": "11532:433:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "12145:65:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 327,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "12163:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$110_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12163:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12190:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 106,
													"src": "12163:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 326,
												"id": 330,
												"nodeType": "Return",
												"src": "12156:46:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "11973:101:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "12089:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12111:2:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "12137:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 324,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "12137:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12136:8:0"
									},
									"scope": 353,
									"src": "12080:130:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "12387:66:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 338,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "12405:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$110_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12405:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12432:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 109,
													"src": "12405:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 337,
												"id": 341,
												"nodeType": "Return",
												"src": "12398:47:0"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "12218:107:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "12340:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12355:2:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "12381:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12381:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12380:6:0"
									},
									"scope": 353,
									"src": "12331:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "12679:84:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "12699:57:0",
													"nodeType": "YulBlock",
													"src": "12699:57:0",
													"statements": [
														{
															"nativeSrc": "12714:31:0",
															"nodeType": "YulAssignment",
															"src": "12714:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "12724:21:0",
																"nodeType": "YulIdentifier",
																"src": "12724:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "12714:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "12714:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": true,
														"src": "12714:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 113,
														"isOffset": false,
														"isSlot": false,
														"src": "12724:21:0",
														"valueSize": 1
													}
												],
												"id": 350,
												"nodeType": "InlineAssembly",
												"src": "12690:66:0"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "12461:69:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "12598:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12622:2:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "12676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "12647:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 346,
														"name": "InitializableStorage",
														"nameLocations": [
															"12647:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 110,
														"src": "12647:20:0"
													},
													"referencedDeclaration": 110,
													"src": "12647:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$110_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12646:32:0"
									},
									"scope": 353,
									"src": "12589:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3765,
							"src": "6034:6732:0",
							"usedErrors": [
								116,
								119
							],
							"usedEvents": [
								124
							]
						},
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "12920:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 356,
										"name": "Initializable",
										"nameLocations": [
											"13497:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 353,
										"src": "13497:13:0"
									},
									"id": 357,
									"nodeType": "InheritanceSpecifier",
									"src": "13497:13:0"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "12950:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396,
								353
							],
							"name": "ContextUpgradeable",
							"nameLocation": "13475:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "13570:8:0",
										"statements": []
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 359,
												"name": "onlyInitializing",
												"nameLocations": [
													"13553:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "13553:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13553:16:0"
										}
									],
									"name": "__Context_init",
									"nameLocation": "13527:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13541:2:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13570:0:0"
									},
									"scope": 396,
									"src": "13518:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "13648:8:0",
										"statements": []
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 366,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 365,
												"name": "onlyInitializing",
												"nameLocations": [
													"13631:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "13631:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13631:16:0"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "13595:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13619:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13648:0:0"
									},
									"scope": 396,
									"src": "13586:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "13724:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 374,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "13742:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13746:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "13742:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 373,
												"id": 376,
												"nodeType": "Return",
												"src": "13735:17:0"
											}
										]
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "13671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13681:2:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "13715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13714:9:0"
									},
									"scope": 396,
									"src": "13662:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "13835:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 383,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "13853:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13857:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "13853:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 382,
												"id": 385,
												"nodeType": "Return",
												"src": "13846:15:0"
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "13777:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13785:2:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "13819:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13818:16:0"
									},
									"scope": 396,
									"src": "13768:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "13949:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13967:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 391,
												"id": 393,
												"nodeType": "Return",
												"src": "13960:8:0"
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "13886:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13906:2:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "13940:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13939:9:0"
									},
									"scope": 396,
									"src": "13877:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3765,
							"src": "13457:522:0",
							"usedErrors": [
								116,
								119
							],
							"usedEvents": [
								124
							]
						},
						{
							"id": 397,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "14132:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 398,
								"nodeType": "StructuredDocumentation",
								"src": "14160:142:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 437,
							"linearizedBaseContracts": [
								437
							],
							"name": "IERC20Errors",
							"nameLocation": "14314:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14334:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 407,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "14660:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "14685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "14709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "14701:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "14726:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "14718:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14684:49:0"
									},
									"src": "14654:80:0"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "14742:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 412,
									"name": "ERC20InvalidSender",
									"nameLocation": "14909:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14936:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "14928:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14927:16:0"
									},
									"src": "14903:41:0"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "14952:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 417,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "15126:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "15155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "15147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15146:18:0"
									},
									"src": "15120:45:0"
								},
								{
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "15173:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 426,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "15535:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "15562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "15587:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "15579:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "15606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "15598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15561:52:0"
									},
									"src": "15529:85:0"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "15622:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 431,
									"name": "ERC20InvalidApprover",
									"nameLocation": "15811:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "15840:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "15832:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15831:18:0"
									},
									"src": "15805:45:0"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "15858:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 436,
									"name": "ERC20InvalidSpender",
									"nameLocation": "16068:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "16088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16087:17:0"
									},
									"src": "16062:43:0"
								}
							],
							"scope": 3765,
							"src": "14304:1804:0",
							"usedErrors": [
								407,
								412,
								417,
								426,
								431,
								436
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 438,
								"nodeType": "StructuredDocumentation",
								"src": "16112:144:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 485,
							"linearizedBaseContracts": [
								485
							],
							"name": "IERC721Errors",
							"nameLocation": "16268:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "16289:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 443,
									"name": "ERC721InvalidOwner",
									"nameLocation": "16524:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "16543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16542:15:0"
									},
									"src": "16518:40:0"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "16566:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 448,
									"name": "ERC721NonexistentToken",
									"nameLocation": "16713:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16744:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "16736:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16735:17:0"
									},
									"src": "16707:46:0"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "16761:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 457,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "17067:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "17096:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "17088:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17112:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "17104:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17129:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "17121:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17087:48:0"
									},
									"src": "17061:75:0"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "17144:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 462,
									"name": "ERC721InvalidSender",
									"nameLocation": "17311:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "17339:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "17331:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17330:16:0"
									},
									"src": "17305:42:0"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "17355:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 467,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "17529:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "17559:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "17551:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17550:18:0"
									},
									"src": "17523:46:0"
								},
								{
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "17577:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 474,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "17840:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17875:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "17867:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "17885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17866:35:0"
									},
									"src": "17834:68:0"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "17910:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 479,
									"name": "ERC721InvalidApprover",
									"nameLocation": "18099:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "18129:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "18121:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18120:18:0"
									},
									"src": "18093:46:0"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "18147:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 484,
									"name": "ERC721InvalidOperator",
									"nameLocation": "18359:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18389:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "18381:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18380:18:0"
									},
									"src": "18353:46:0"
								}
							],
							"scope": 3765,
							"src": "16258:2144:0",
							"usedErrors": [
								443,
								448,
								457,
								462,
								467,
								474,
								479,
								484
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 486,
								"nodeType": "StructuredDocumentation",
								"src": "18406:146:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 532,
							"linearizedBaseContracts": [
								532
							],
							"name": "IERC1155Errors",
							"nameLocation": "18564:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "18586:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 497,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "18965:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "19000:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "18992:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "19016:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "19008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "19033:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "19025:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19049:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "19041:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18991:66:0"
									},
									"src": "18959:99:0"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "19066:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 502,
									"name": "ERC1155InvalidSender",
									"nameLocation": "19233:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "19262:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "19254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19253:16:0"
									},
									"src": "19227:43:0"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "19278:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 507,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "19452:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "19483:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "19475:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19474:18:0"
									},
									"src": "19446:47:0"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "19501:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 514,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "19773:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "19802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19828:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "19820:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19801:33:0"
									},
									"src": "19767:68:0"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "19843:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 519,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "20032:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "20063:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "20055:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20054:18:0"
									},
									"src": "20026:47:0"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "20081:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 524,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "20293:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "20324:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "20316:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20315:18:0"
									},
									"src": "20287:47:0"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "20342:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 531,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "20639:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "20673:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "20665:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "20692:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "20684:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20664:41:0"
									},
									"src": "20633:73:0"
								}
							],
							"scope": 3765,
							"src": "18554:2155:0",
							"usedErrors": [
								497,
								502,
								507,
								514,
								519,
								524,
								531
							],
							"usedEvents": []
						},
						{
							"id": 533,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "20871:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 535,
										"name": "Initializable",
										"nameLocations": [
											"22023:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 353,
										"src": "22023:13:0"
									},
									"id": 536,
									"nodeType": "InheritanceSpecifier",
									"src": "22023:13:0"
								},
								{
									"baseName": {
										"id": 537,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"22038:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "22038:18:0"
									},
									"id": 538,
									"nodeType": "InheritanceSpecifier",
									"src": "22038:18:0"
								},
								{
									"baseName": {
										"id": 539,
										"name": "IERC20",
										"nameLocations": [
											"22058:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "22058:6:0"
									},
									"id": 540,
									"nodeType": "InheritanceSpecifier",
									"src": "22058:6:0"
								},
								{
									"baseName": {
										"id": 541,
										"name": "IERC20Metadata",
										"nameLocations": [
											"22066:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "22066:14:0"
									},
									"id": 542,
									"nodeType": "InheritanceSpecifier",
									"src": "22066:14:0"
								},
								{
									"baseName": {
										"id": 543,
										"name": "IERC20Errors",
										"nameLocations": [
											"22082:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 437,
										"src": "22082:12:0"
									},
									"id": 544,
									"nodeType": "InheritanceSpecifier",
									"src": "22082:12:0"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 534,
								"nodeType": "StructuredDocumentation",
								"src": "20909:1074:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1138,
							"linearizedBaseContracts": [
								1138,
								437,
								100,
								77,
								396,
								353
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "22003:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "22102:63:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 562,
									"members": [
										{
											"constant": false,
											"id": 549,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "22238:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 562,
											"src": "22202:45:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 548,
												"keyName": "account",
												"keyNameLocation": "22218:7:0",
												"keyType": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "22202:35:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 555,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "22324:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 562,
											"src": "22260:75:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 554,
												"keyName": "account",
												"keyNameLocation": "22276:7:0",
												"keyType": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "22260:63:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 553,
													"keyName": "spender",
													"keyNameLocation": "22303:7:0",
													"keyType": {
														"id": 551,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "22295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "22287:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 552,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22314:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 557,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "22356:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 562,
											"src": "22348:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 556,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22348:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 559,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "22388:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 562,
											"src": "22381:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 558,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "22381:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 561,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "22411:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 562,
											"src": "22404:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 560,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "22404:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "22178:12:0",
									"nodeType": "StructDefinition",
									"scope": 1138,
									"src": "22171:255:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 565,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "22569:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "22544:114:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 563,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "22544:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 564,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22592:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "22741:83:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "22761:56:0",
													"nodeType": "YulBlock",
													"src": "22761:56:0",
													"statements": [
														{
															"nativeSrc": "22776:30:0",
															"nodeType": "YulAssignment",
															"src": "22776:30:0",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "22786:20:0",
																"nodeType": "YulIdentifier",
																"src": "22786:20:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "22776:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "22776:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 569,
														"isOffset": false,
														"isSlot": true,
														"src": "22776:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 565,
														"isOffset": false,
														"isSlot": false,
														"src": "22786:20:0",
														"valueSize": 1
													}
												],
												"id": 571,
												"nodeType": "InlineAssembly",
												"src": "22752:65:0"
											}
										]
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "22676:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22692:2:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "22738:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "22717:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 568,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 567,
														"name": "ERC20Storage",
														"nameLocations": [
															"22717:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 562,
														"src": "22717:12:0"
													},
													"referencedDeclaration": 562,
													"src": "22717:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22716:24:0"
									},
									"scope": 1138,
									"src": "22667:157:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "23106:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 584,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "23140:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 585,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "23147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 583,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "23117:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23117:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "23117:38:0"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "22832:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 580,
												"name": "onlyInitializing",
												"nameLocations": [
													"23089:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "23089:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23089:16:0"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "23023:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "23050:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "23036:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23036:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "23071:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "23057:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23035:44:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23106:0:0"
									},
									"scope": 1138,
									"src": "23014:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "23273:118:0",
										"statements": [
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "23305:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "23284:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 599,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 598,
																"name": "ERC20Storage",
																"nameLocations": [
																	"23284:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 562,
																"src": "23284:12:0"
															},
															"referencedDeclaration": 562,
															"src": "23284:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 603,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 601,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "23309:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$562_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23309:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23284:43:0"
											},
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 604,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "23338:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "23340:5:0",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 559,
														"src": "23338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 607,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "23348:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "23338:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "23338:15:0"
											},
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 610,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "23364:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "23366:7:0",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 561,
														"src": "23364:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 613,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "23376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "23364:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "23364:19:0"
											}
										]
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 596,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 595,
												"name": "onlyInitializing",
												"nameLocations": [
													"23256:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "23256:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23256:16:0"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "23180:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "23217:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "23203:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 590,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "23238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "23224:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23224:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23202:44:0"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23273:0:0"
									},
									"scope": 1138,
									"src": "23171:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "23521:87:0",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "23553:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "23532:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 624,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 623,
																"name": "ERC20Storage",
																"nameLocations": [
																	"23532:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 562,
																"src": "23532:12:0"
															},
															"referencedDeclaration": 562,
															"src": "23532:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 626,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "23557:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$562_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23557:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23532:43:0"
											},
											{
												"expression": {
													"expression": {
														"id": 629,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "23593:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "23595:5:0",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 559,
													"src": "23593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 622,
												"id": 631,
												"nodeType": "Return",
												"src": "23586:14:0"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "23399:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "23470:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23474:2:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "23506:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 620,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23506:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23505:15:0"
									},
									"scope": 1138,
									"src": "23461:147:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "23789:89:0",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "23821:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "23800:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 640,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 639,
																"name": "ERC20Storage",
																"nameLocations": [
																	"23800:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 562,
																"src": "23800:12:0"
															},
															"referencedDeclaration": 562,
															"src": "23800:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 644,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 642,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "23825:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$562_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23825:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23800:43:0"
											},
											{
												"expression": {
													"expression": {
														"id": 645,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "23861:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "23863:7:0",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 561,
													"src": "23861:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 638,
												"id": 647,
												"nodeType": "Return",
												"src": "23854:16:0"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "23616:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "23736:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23742:2:0"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "23774:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23774:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23773:15:0"
									},
									"scope": 1138,
									"src": "23727:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "24582:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24600:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 654,
												"id": 656,
												"nodeType": "Return",
												"src": "24593:9:0"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "23886:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "24535:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24543:2:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "24575:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 652,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24575:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24574:7:0"
									},
									"scope": 1138,
									"src": "24526:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "24736:94:0",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "24768:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 673,
														"src": "24747:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 665,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 664,
																"name": "ERC20Storage",
																"nameLocations": [
																	"24747:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 562,
																"src": "24747:12:0"
															},
															"referencedDeclaration": 562,
															"src": "24747:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 667,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "24772:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$562_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24772:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24747:43:0"
											},
											{
												"expression": {
													"expression": {
														"id": 670,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "24808:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "24810:12:0",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 557,
													"src": "24808:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 663,
												"id": 672,
												"nodeType": "Return",
												"src": "24801:21:0"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "24618:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "24684:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24695:2:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "24727:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24726:9:0"
									},
									"scope": 1138,
									"src": "24675:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "24967:100:0",
										"statements": [
											{
												"assignments": [
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "24999:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "24978:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 683,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 682,
																"name": "ERC20Storage",
																"nameLocations": [
																	"24978:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 562,
																"src": "24978:12:0"
															},
															"referencedDeclaration": 562,
															"src": "24978:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 685,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "25003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$562_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25003:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24978:43:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 688,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "25039:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25041:9:0",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 549,
														"src": "25039:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 691,
													"indexExpression": {
														"id": 690,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "25051:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25039:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 681,
												"id": 692,
												"nodeType": "Return",
												"src": "25032:27:0"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "24838:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "24902:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24920:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "24912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24911:17:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "24958:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24957:9:0"
									},
									"scope": 1138,
									"src": "24893:174:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "25347:107:0",
										"statements": [
											{
												"assignments": [
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "25366:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "25358:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 704,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25358:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 706,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "25374:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25374:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25358:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "25407:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "25414:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "25418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "25397:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25397:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "25397:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25442:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 703,
												"id": 716,
												"nodeType": "Return",
												"src": "25435:11:0"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "25075:191:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "25281:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25298:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "25290:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25310:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "25302:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25289:27:0"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "25341:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25340:6:0"
									},
									"scope": 1138,
									"src": "25272:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "25606:109:0",
										"statements": [
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "25638:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 741,
														"src": "25617:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 729,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 728,
																"name": "ERC20Storage",
																"nameLocations": [
																	"25617:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 562,
																"src": "25617:12:0"
															},
															"referencedDeclaration": 562,
															"src": "25617:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 731,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "25642:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$562_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25642:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25617:43:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 734,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "25678:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25680:11:0",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 555,
															"src": "25678:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 737,
														"indexExpression": {
															"id": 736,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "25692:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25678:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 739,
													"indexExpression": {
														"id": 738,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "25699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25678:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 740,
												"nodeType": "Return",
												"src": "25671:36:0"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "25462:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "25526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25544:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "25536:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25559:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "25551:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25535:32:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "25597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25596:9:0"
									},
									"scope": 1138,
									"src": "25517:198:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "26113:111:0",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "26132:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "26124:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 752,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26124:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 754,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "26140:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26140:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26124:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "26172:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "26179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "26188:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1021,
															1089
														],
														"referencedDeclaration": 1021,
														"src": "26163:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26163:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "26163:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26212:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 751,
												"id": 764,
												"nodeType": "Return",
												"src": "26205:11:0"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "25723:305:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "26043:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26059:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "26051:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26076:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "26068:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26050:32:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "26107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26106:6:0"
									},
									"scope": 1138,
									"src": "26034:190:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "26895:156:0",
										"statements": [
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "26914:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "26906:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 778,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26906:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 780,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "26924:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26924:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26906:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 784,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "26963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "26969:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "26978:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "26947:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26947:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "26947:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 790,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "27005:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "27011:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "27015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 789,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "26995:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26995:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "26995:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27039:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 777,
												"id": 796,
												"nodeType": "Return",
												"src": "27032:11:0"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "26232:564:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "26811:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26832:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "26824:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26846:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "26838:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26858:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "26850:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26823:41:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "26889:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26889:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26888:6:0"
									},
									"scope": 1138,
									"src": "26802:249:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "27513:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 808,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "27528:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27544:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27536:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 809,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "27536:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27536:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27528:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 822,
												"nodeType": "IfStatement",
												"src": "27524:88:0",
												"trueBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "27548:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27597:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "27589:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 815,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "27589:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "27589:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 814,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "27570:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27570:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 820,
															"nodeType": "RevertStatement",
															"src": "27563:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "27626:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 824,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "27632:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27632:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27626:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 837,
												"nodeType": "IfStatement",
												"src": "27622:88:0",
												"trueBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "27644:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27695:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "27687:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 830,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "27687:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "27687:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 829,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "27666:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27666:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 835,
															"nodeType": "RevertStatement",
															"src": "27659:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "27728:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "27734:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "27738:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "27720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27720:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "27720:24:0"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "27059:371:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "27445:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27463:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "27455:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27477:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "27469:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27489:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "27481:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27454:41:0"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27513:0:0"
									},
									"scope": 1138,
									"src": "27436:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "28151:1124:0",
										"statements": [
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "28183:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 936,
														"src": "28162:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 856,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 855,
																"name": "ERC20Storage",
																"nameLocations": [
																	"28162:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 562,
																"src": "28162:12:0"
															},
															"referencedDeclaration": 562,
															"src": "28162:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 860,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 858,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "28187:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$562_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28187:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28162:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 861,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "28220:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28236:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 862,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28228:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28228:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28220:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "28399:375:0",
													"statements": [
														{
															"assignments": [
																875
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 875,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "28422:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 903,
																	"src": "28414:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 874,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28414:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 880,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 876,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "28436:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 877,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28438:9:0",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 549,
																	"src": "28436:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 879,
																"indexExpression": {
																	"id": 878,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "28448:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28436:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28414:39:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 881,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "28472:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 882,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "28486:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28472:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 891,
															"nodeType": "IfStatement",
															"src": "28468:117:0",
															"trueBody": {
																"id": 890,
																"nodeType": "Block",
																"src": "28493:92:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 885,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 848,
																					"src": "28544:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 886,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 875,
																					"src": "28550:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 887,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 852,
																					"src": "28563:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 884,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 407,
																				"src": "28519:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28519:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 889,
																		"nodeType": "RevertStatement",
																		"src": "28512:57:0"
																	}
																]
															}
														},
														{
															"id": 902,
															"nodeType": "UncheckedBlock",
															"src": "28599:164:0",
															"statements": [
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 892,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 857,
																					"src": "28708:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 895,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "28710:9:0",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 549,
																				"src": "28708:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 896,
																			"indexExpression": {
																				"id": 894,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 848,
																				"src": "28720:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "28708:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 897,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "28728:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 898,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "28742:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28728:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28708:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "28708:39:0"
																}
															]
														}
													]
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "28216:558:0",
												"trueBody": {
													"id": 873,
													"nodeType": "Block",
													"src": "28240:153:0",
													"statements": [
														{
															"expression": {
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 867,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "28358:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "28360:12:0",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 557,
																	"src": "28358:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 870,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "28376:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28358:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 872,
															"nodeType": "ExpressionStatement",
															"src": "28358:23:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 905,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "28790:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28804:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 906,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28796:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28796:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28790:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "29012:213:0",
													"statements": [
														{
															"id": 927,
															"nodeType": "UncheckedBlock",
															"src": "29027:187:0",
															"statements": [
																{
																	"expression": {
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 919,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 857,
																					"src": "29174:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 922,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "29176:9:0",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 549,
																				"src": "29174:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 923,
																			"indexExpression": {
																				"id": 921,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "29186:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "29174:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "29193:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29174:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 926,
																	"nodeType": "ExpressionStatement",
																	"src": "29174:24:0"
																}
															]
														}
													]
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "28786:439:0",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "28808:198:0",
													"statements": [
														{
															"id": 917,
															"nodeType": "UncheckedBlock",
															"src": "28823:172:0",
															"statements": [
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 911,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 857,
																				"src": "28956:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 913,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "28958:12:0",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 557,
																			"src": "28956:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 914,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "28974:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28956:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "28956:23:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 931,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "29251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "29257:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "29261:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 930,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "29242:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29242:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "EmitStatement",
												"src": "29237:30:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "27760:310:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "28085:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28101:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "28093:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28115:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "28107:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28127:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "28119:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28092:41:0"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28151:0:0"
									},
									"scope": 1138,
									"src": "28076:1199:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "29684:157:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 945,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "29699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29718:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 946,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29710:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29710:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29699:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 959,
												"nodeType": "IfStatement",
												"src": "29695:93:0",
												"trueBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "29722:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29773:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29765:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 952,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29765:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29765:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 951,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "29744:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29744:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "RevertStatement",
															"src": "29737:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29814:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29806:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 961,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29806:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29806:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "29818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "29827:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 960,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "29798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29798:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "29798:35:0"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "29283:339:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "29637:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "29651:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "29643:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "29660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29642:32:0"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29684:0:0"
									},
									"scope": 1138,
									"src": "29628:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "30225:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 978,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "30240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30259:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 979,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30251:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30251:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30240:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"nodeType": "IfStatement",
												"src": "30236:91:0",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "30263:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30312:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "30304:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 985,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "30304:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30304:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 984,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "30285:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30285:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 990,
															"nodeType": "RevertStatement",
															"src": "30278:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 994,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "30345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30362:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30354:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 995,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30354:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30354:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "30366:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "30337:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30337:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "30337:35:0"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "29849:314:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "30178:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "30184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30209:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "30201:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30183:32:0"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30225:0:0"
									},
									"scope": 1138,
									"src": "30169:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "31007:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1014,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "31027:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "31034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "31043:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31050:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1013,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1021,
															1089
														],
														"referencedDeclaration": 1089,
														"src": "31018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31018:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "31018:37:0"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "30388:539:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "30942:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "30959:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "30951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "30974:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "30966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30991:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "30983:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30950:47:0"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31007:0:0"
									},
									"scope": 1138,
									"src": "30933:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "32012:401:0",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "32044:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "32023:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1034,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1033,
																"name": "ERC20Storage",
																"nameLocations": [
																	"32023:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 562,
																"src": "32023:12:0"
															},
															"referencedDeclaration": 562,
															"src": "32023:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1038,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1036,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "32048:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$562_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32048:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32023:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1039,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "32081:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1040,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32090:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32090:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32081:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1053,
												"nodeType": "IfStatement",
												"src": "32077:91:0",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "32102:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "32145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1046,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "32145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1045,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "32124:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32124:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "32117:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "32182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32201:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1055,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32193:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32193:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32182:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "32178:92:0",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "32205:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32255:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "32247:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1061,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "32247:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32247:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1060,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "32227:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32227:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1066,
															"nodeType": "RevertStatement",
															"src": "32220:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1069,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "32280:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$562_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32282:11:0",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 555,
																"src": "32280:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1074,
															"indexExpression": {
																"id": 1071,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "32294:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32280:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1075,
														"indexExpression": {
															"id": 1072,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "32301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32280:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1076,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "32312:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32280:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "32280:37:0"
											},
											{
												"condition": {
													"id": 1079,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1030,
													"src": "32332:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "32328:78:0",
												"trueBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "32343:63:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1081,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "32372:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1082,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "32379:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1083,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "32388:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1080,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "32363:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32363:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1085,
															"nodeType": "EmitStatement",
															"src": "32358:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "31071:837:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "31923:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "31940:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "31932:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31955:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "31947:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31972:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "31964:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "31984:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "31979:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31931:63:0"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32012:0:0"
									},
									"scope": 1138,
									"src": "31914:499:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "32794:398:0",
										"statements": [
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "32813:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "32805:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1099,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"arguments": [
														{
															"id": 1102,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "32842:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "32849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1101,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "32832:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32832:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32805:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "32872:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32897:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1108,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32897:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1107,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "32892:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32892:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "32906:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "32892:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32872:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "32868:317:0",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "32911:274:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1113,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "32930:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "32949:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32930:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1123,
															"nodeType": "IfStatement",
															"src": "32926:132:0",
															"trueBody": {
																"id": 1122,
																"nodeType": "Block",
																"src": "32956:102:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1117,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "33009:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1118,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1100,
																					"src": "33018:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1119,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "33036:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1116,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "32982:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32982:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1121,
																		"nodeType": "RevertStatement",
																		"src": "32975:67:0"
																	}
																]
															}
														},
														{
															"id": 1133,
															"nodeType": "UncheckedBlock",
															"src": "33072:102:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1125,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "33110:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1126,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "33117:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1127,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1100,
																					"src": "33126:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1128,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "33145:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "33126:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33152:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1124,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1021,
																				1089
																			],
																			"referencedDeclaration": 1089,
																			"src": "33101:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33101:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1132,
																	"nodeType": "ExpressionStatement",
																	"src": "33101:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "32421:278:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "32714:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32738:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "32730:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32753:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "32745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32770:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "32762:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32729:47:0"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32794:0:0"
									},
									"scope": 1138,
									"src": "32705:487:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3765,
							"src": "21985:11210:0",
							"usedErrors": [
								116,
								119,
								407,
								412,
								417,
								426,
								431,
								436
							],
							"usedEvents": [
								11,
								20,
								124
							]
						},
						{
							"id": 1139,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33351:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1141,
										"name": "Initializable",
										"nameLocations": [
											"33923:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 353,
										"src": "33923:13:0"
									},
									"id": 1142,
									"nodeType": "InheritanceSpecifier",
									"src": "33923:13:0"
								},
								{
									"baseName": {
										"id": 1143,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"33938:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "33938:18:0"
									},
									"id": 1144,
									"nodeType": "InheritanceSpecifier",
									"src": "33938:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1140,
								"nodeType": "StructuredDocumentation",
								"src": "33383:498:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								396,
								353
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "33901:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "33964:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 1148,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "34076:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1148,
											"src": "34068:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "34068:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "34042:14:0",
									"nodeType": "StructDefinition",
									"scope": 1328,
									"src": "34035:55:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1151,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "34235:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "34210:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1149,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "34210:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 1150,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "34260:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "34413:85:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34433:58:0",
													"nodeType": "YulBlock",
													"src": "34433:58:0",
													"statements": [
														{
															"nativeSrc": "34448:32:0",
															"nodeType": "YulAssignment",
															"src": "34448:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "34458:22:0",
																"nodeType": "YulIdentifier",
																"src": "34458:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "34448:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "34448:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1155,
														"isOffset": false,
														"isSlot": true,
														"src": "34448:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1151,
														"isOffset": false,
														"isSlot": false,
														"src": "34458:22:0",
														"valueSize": 1
													}
												],
												"id": 1157,
												"nodeType": "InlineAssembly",
												"src": "34424:67:0"
											}
										]
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "34344:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34362:2:0"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "34410:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "34387:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 1154,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1153,
														"name": "OwnableStorage",
														"nameLocations": [
															"34387:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1148,
														"src": "34387:14:0"
													},
													"referencedDeclaration": 1148,
													"src": "34387:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34386:26:0"
									},
									"scope": 1328,
									"src": "34335:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "34506:87:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 1164,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "34605:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "34640:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "34632:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34631:17:0"
									},
									"src": "34599:50:0"
								},
								{
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "34657:84:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 1169,
									"name": "OwnableInvalidOwner",
									"nameLocation": "34753:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34781:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "34773:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34772:15:0"
									},
									"src": "34747:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1175,
									"name": "OwnershipTransferred",
									"nameLocation": "34802:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "34839:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "34823:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "34870:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "34854:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34822:57:0"
									},
									"src": "34796:84:0"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "35083:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "35119:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1183,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "35094:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35094:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "35094:38:0"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "34888:117:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1180,
												"name": "onlyInitializing",
												"nameLocations": [
													"35066:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "35066:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35066:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "35020:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "35043:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "35035:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35034:22:0"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35083:0:0"
									},
									"scope": 1328,
									"src": "35011:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "35230:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1195,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "35245:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35269:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "35261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1196,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "35261:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35261:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35245:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1209,
												"nodeType": "IfStatement",
												"src": "35241:97:0",
												"trueBody": {
													"id": 1208,
													"nodeType": "Block",
													"src": "35273:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35323:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35315:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1202,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "35315:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35315:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1201,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "35295:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35295:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1207,
															"nodeType": "RevertStatement",
															"src": "35288:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "35367:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1210,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "35348:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35348:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "35348:32:0"
											}
										]
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1192,
												"name": "onlyInitializing",
												"nameLocations": [
													"35213:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "35213:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35213:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "35157:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "35190:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "35182:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35181:22:0"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35230:0:0"
									},
									"scope": 1328,
									"src": "35148:240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "35502:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1218,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "35513:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35513:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "35513:13:0"
											},
											{
												"id": 1221,
												"nodeType": "PlaceholderStatement",
												"src": "35537:1:0"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "35396:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1223,
									"name": "onlyOwner",
									"nameLocation": "35490:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35499:2:0"
									},
									"src": "35481:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "35682:92:0",
										"statements": [
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "35716:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "35693:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 1230,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1229,
																"name": "OwnableStorage",
																"nameLocations": [
																	"35693:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1148,
																"src": "35693:14:0"
															},
															"referencedDeclaration": 1148,
															"src": "35693:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1232,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "35720:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$1148_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35720:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35693:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 1235,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "35758:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "35760:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "35758:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1237,
												"nodeType": "Return",
												"src": "35751:15:0"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "35554:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "35636:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35641:2:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "35673:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35672:9:0"
									},
									"scope": 1328,
									"src": "35627:147:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "35897:121:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1243,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "35912:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35912:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1245,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "35923:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35923:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35912:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1254,
												"nodeType": "IfStatement",
												"src": "35908:103:0",
												"trueBody": {
													"id": 1253,
													"nodeType": "Block",
													"src": "35937:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "35986:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35986:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1248,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "35959:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35959:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1252,
															"nodeType": "RevertStatement",
															"src": "35952:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "35782:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "35861:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35872:2:0"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35897:0:0"
									},
									"scope": 1328,
									"src": "35852:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "36416:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36454:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1263,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36446:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36446:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1262,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "36427:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36427:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "36427:30:0"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "36026:330:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1259,
												"name": "onlyOwner",
												"nameLocations": [
													"36406:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "36406:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36406:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "36371:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36388:2:0"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36416:0:0"
									},
									"scope": 1328,
									"src": "36362:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "36690:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1278,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "36705:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36725:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36717:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1279,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "36717:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36717:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36705:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1292,
												"nodeType": "IfStatement",
												"src": "36701:93:0",
												"trueBody": {
													"id": 1291,
													"nodeType": "Block",
													"src": "36729:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36779:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "36771:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1285,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "36771:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36771:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1284,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "36751:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36751:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1290,
															"nodeType": "RevertStatement",
															"src": "36744:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1294,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "36823:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1293,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "36804:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36804:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "36804:28:0"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "36473:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1276,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1275,
												"name": "onlyOwner",
												"nameLocations": [
													"36680:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "36680:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36680:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "36629:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "36655:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "36647:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36646:18:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36690:0:0"
									},
									"scope": 1328,
									"src": "36620:220:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "37063:190:0",
										"statements": [
											{
												"assignments": [
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "37097:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "37074:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 1305,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1304,
																"name": "OwnableStorage",
																"nameLocations": [
																	"37074:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1148,
																"src": "37074:14:0"
															},
															"referencedDeclaration": 1148,
															"src": "37074:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1307,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "37101:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$1148_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37101:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37074:47:0"
											},
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "37140:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "37132:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1310,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37132:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1314,
												"initialValue": {
													"expression": {
														"id": 1312,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "37151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "37153:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "37151:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37132:27:0"
											},
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1315,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "37170:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$1148_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "37172:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "37170:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1318,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "37181:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37170:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "37170:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1322,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "37226:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1323,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "37236:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1321,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "37205:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37205:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "EmitStatement",
												"src": "37200:45:0"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "36848:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "37009:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "37036:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "37028:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37027:18:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37063:0:0"
									},
									"scope": 1328,
									"src": "37000:253:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3765,
							"src": "33883:3373:0",
							"usedErrors": [
								116,
								119,
								1164,
								1169
							],
							"usedEvents": [
								124,
								1175
							]
						},
						{
							"id": 1329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "37411:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "37439:206:0",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1337,
							"linearizedBaseContracts": [
								1337
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "37657:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "37682:445:0",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "38142:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38155:2:0"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "38181:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38180:9:0"
									},
									"scope": 1337,
									"src": "38133:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3765,
							"src": "37647:546:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38338:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1339,
								"nodeType": "StructuredDocumentation",
								"src": "38366:81:0",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1346,
							"linearizedBaseContracts": [
								1346
							],
							"name": "IBeacon",
							"nameLocation": "38459:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "38474:172:0",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "38661:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38675:2:0"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "38701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38700:9:0"
									},
									"scope": 1346,
									"src": "38652:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3765,
							"src": "38449:264:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1347,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38844:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1348,
								"nodeType": "StructuredDocumentation",
								"src": "38872:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1598,
							"linearizedBaseContracts": [
								1598
							],
							"name": "Address",
							"nameLocation": "38951:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "38966:96:0",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1353,
									"name": "AddressInsufficientBalance",
									"nameLocation": "39074:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "39109:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "39101:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39100:17:0"
									},
									"src": "39068:50:0"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "39126:77:0",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1358,
									"name": "AddressEmptyCode",
									"nameLocation": "39215:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "39240:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "39232:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39231:16:0"
									},
									"src": "39209:39:0"
								},
								{
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "39256:91:0",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1361,
									"name": "FailedInnerCall",
									"nameLocation": "39359:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39374:2:0"
									},
									"src": "39353:24:0"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "40382:269:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1371,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "40405:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1598",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1598",
																		"typeString": "library Address"
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40397:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1369,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40397:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40397:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40411:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "40397:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "40421:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40397:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1384,
												"nodeType": "IfStatement",
												"src": "40393:111:0",
												"trueBody": {
													"id": 1383,
													"nodeType": "Block",
													"src": "40429:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1379,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "40486:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1598",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1598",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40478:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1377,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "40478:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40478:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1376,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "40451:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40451:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1382,
															"nodeType": "RevertStatement",
															"src": "40444:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													1386,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "40522:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "40517:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1385,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "40517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1393,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40565:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1387,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "40535:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40545:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "40535:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1389,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "40557:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "40535:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40535:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40516:52:0"
											},
											{
												"condition": {
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "40583:8:0",
													"subExpression": {
														"id": 1394,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "40584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "40579:65:0",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "40593:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1396,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "40615:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40615:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1398,
															"nodeType": "RevertStatement",
															"src": "40608:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "39385:920:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "40320:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "40346:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "40330:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40330:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "40365:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "40357:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40329:43:0"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40382:0:0"
									},
									"scope": 1598,
									"src": "40311:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "41603:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1413,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "41643:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1414,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "41651:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41657:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1412,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "41621:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41621:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1417,
												"nodeType": "Return",
												"src": "41614:45:0"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "40659:849:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "41523:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "41544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "41536:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "41565:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "41552:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41552:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41535:35:0"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "41589:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41589:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41588:14:0"
									},
									"scope": 1598,
									"src": "41514:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "42115:285:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1433,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "42138:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1598",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1598",
																		"typeString": "library Address"
																	}
																],
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42130:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1431,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "42130:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42130:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42144:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "42130:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1436,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "42154:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42130:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1446,
												"nodeType": "IfStatement",
												"src": "42126:110:0",
												"trueBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "42161:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1441,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "42218:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1598",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1598",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "42210:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1439,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "42210:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42210:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1438,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "42183:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42183:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1444,
															"nodeType": "RevertStatement",
															"src": "42176:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													1448,
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "42252:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "42247:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1447,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42247:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "42274:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "42261:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1449,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "42261:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"initialValue": {
													"arguments": [
														{
															"id": 1455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "42314:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1451,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "42288:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "42295:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "42288:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1453,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "42307:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "42288:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42288:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42246:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "42364:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1460,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "42372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1461,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "42381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1458,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "42337:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42337:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1463,
												"nodeType": "Return",
												"src": "42330:62:0"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "41675:321:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "42011:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42041:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "42033:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42062:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "42049:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42049:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42076:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "42068:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42032:50:0"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "42101:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42101:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42100:14:0"
									},
									"scope": 1598,
									"src": "42002:398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "42645:157:0",
										"statements": [
											{
												"assignments": [
													1476,
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "42662:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "42657:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1475,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42657:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "42684:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "42671:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "42671:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1483,
												"initialValue": {
													"arguments": [
														{
															"id": 1481,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "42716:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1479,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "42698:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42705:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "42698:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42698:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42656:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1485,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "42766:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "42774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1487,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "42783:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1484,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "42739:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42739:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1489,
												"nodeType": "Return",
												"src": "42732:62:0"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "42408:131:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "42554:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42581:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "42573:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42602:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "42589:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42589:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42572:35:0"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "42631:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42631:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42630:14:0"
									},
									"scope": 1598,
									"src": "42545:257:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "43046:159:0",
										"statements": [
											{
												"assignments": [
													1502,
													1504
												],
												"declarations": [
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "43063:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "43058:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1501,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "43058:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "43085:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "43072:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1503,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "43072:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1509,
												"initialValue": {
													"arguments": [
														{
															"id": 1507,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "43119:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "43099:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "43106:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "43099:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43099:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43057:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "43169:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1512,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "43177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1513,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "43186:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1510,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "43142:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43142:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1515,
												"nodeType": "Return",
												"src": "43135:62:0"
											}
										]
									},
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "42810:133:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "42958:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "42987:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "42979:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43008:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "42995:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42995:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42978:35:0"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "43032:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43032:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43031:14:0"
									},
									"scope": 1598,
									"src": "42949:256:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "43640:435:0",
										"statements": [
											{
												"condition": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "43655:8:0",
													"subExpression": {
														"id": 1529,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "43656:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1554,
													"nodeType": "Block",
													"src": "43717:351:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1536,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1524,
																			"src": "43908:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "43919:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "43908:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43929:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "43908:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1540,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1520,
																				"src": "43934:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "43941:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "43934:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "43946:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "43934:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43956:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "43934:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "43908:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1551,
															"nodeType": "IfStatement",
															"src": "43904:121:0",
															"trueBody": {
																"id": 1550,
																"nodeType": "Block",
																"src": "43959:66:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1547,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1520,
																					"src": "44002:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1546,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1358,
																				"src": "43985:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43985:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1549,
																		"nodeType": "RevertStatement",
																		"src": "43978:31:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1552,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "44046:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1528,
															"id": 1553,
															"nodeType": "Return",
															"src": "44039:17:0"
														}
													]
												},
												"id": 1555,
												"nodeType": "IfStatement",
												"src": "43651:417:0",
												"trueBody": {
													"id": 1535,
													"nodeType": "Block",
													"src": "43665:46:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1532,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "43688:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1531,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "43680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43680:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1534,
															"nodeType": "ExpressionStatement",
															"src": "43680:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "43213:259:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "43487:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "43532:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "43524:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "43554:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "43549:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43549:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "43585:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "43572:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43572:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43513:89:0"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "43626:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43626:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43625:14:0"
									},
									"scope": 1598,
									"src": "43478:597:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "44383:128:0",
										"statements": [
											{
												"condition": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "44398:8:0",
													"subExpression": {
														"id": 1567,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "44399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1576,
													"nodeType": "Block",
													"src": "44460:44:0",
													"statements": [
														{
															"expression": {
																"id": 1574,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "44482:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1566,
															"id": 1575,
															"nodeType": "Return",
															"src": "44475:17:0"
														}
													]
												},
												"id": 1577,
												"nodeType": "IfStatement",
												"src": "44394:110:0",
												"trueBody": {
													"id": 1573,
													"nodeType": "Block",
													"src": "44408:46:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1570,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1562,
																		"src": "44431:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1569,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "44423:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44423:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1572,
															"nodeType": "ExpressionStatement",
															"src": "44423:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "44083:192:0",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "44290:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "44312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "44307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44307:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "44334:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "44321:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44306:39:0"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "44369:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44369:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44368:14:0"
									},
									"scope": 1598,
									"src": "44281:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "44683:473:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1585,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "44761:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44772:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "44761:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "44781:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "44761:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1594,
													"nodeType": "Block",
													"src": "45098:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1591,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "45120:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45120:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1593,
															"nodeType": "RevertStatement",
															"src": "45113:24:0"
														}
													]
												},
												"id": 1595,
												"nodeType": "IfStatement",
												"src": "44757:392:0",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "44784:308:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "44945:136:0",
																"nodeType": "YulBlock",
																"src": "44945:136:0",
																"statements": [
																	{
																		"nativeSrc": "44964:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "44964:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "44993:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "44993:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "44987:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "44987:5:0"
																			},
																			"nativeSrc": "44987:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "44987:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "44968:15:0",
																				"nodeType": "YulTypedName",
																				"src": "44968:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "45033:2:0",
																							"nodeType": "YulLiteral",
																							"src": "45033:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "45037:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "45037:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "45029:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "45029:3:0"
																					},
																					"nativeSrc": "45029:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "45029:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "45050:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "45050:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "45022:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "45022:6:0"
																			},
																			"nativeSrc": "45022:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "45022:44:0"
																		},
																		"nativeSrc": "45022:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "45022:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1582,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "44993:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1582,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "45037:10:0",
																	"valueSize": 1
																}
															],
															"id": 1589,
															"nodeType": "InlineAssembly",
															"src": "44936:145:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "44519:103:0",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "44637:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "44658:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "44645:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44645:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44644:25:0"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44683:0:0"
									},
									"scope": 1598,
									"src": "44628:528:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3765,
							"src": "38943:6216:0",
							"usedErrors": [
								1353,
								1358,
								1361
							],
							"usedEvents": []
						},
						{
							"id": 1599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "45387:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1600,
								"nodeType": "StructuredDocumentation",
								"src": "45415:1048:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1707,
							"linearizedBaseContracts": [
								1707
							],
							"name": "StorageSlot",
							"nameLocation": "46473:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1603,
									"members": [
										{
											"constant": false,
											"id": 1602,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "46530:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1603,
											"src": "46522:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1601,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "46522:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "46499:11:0",
									"nodeType": "StructDefinition",
									"scope": 1707,
									"src": "46492:51:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1606,
									"members": [
										{
											"constant": false,
											"id": 1605,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "46586:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1606,
											"src": "46581:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1604,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "46581:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "46558:11:0",
									"nodeType": "StructDefinition",
									"scope": 1707,
									"src": "46551:48:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1609,
									"members": [
										{
											"constant": false,
											"id": 1608,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "46645:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1609,
											"src": "46637:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1607,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "46637:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "46614:11:0",
									"nodeType": "StructDefinition",
									"scope": 1707,
									"src": "46607:51:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1612,
									"members": [
										{
											"constant": false,
											"id": 1611,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "46704:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1612,
											"src": "46696:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1610,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "46696:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "46673:11:0",
									"nodeType": "StructDefinition",
									"scope": 1707,
									"src": "46666:51:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1615,
									"members": [
										{
											"constant": false,
											"id": 1614,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "46761:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1615,
											"src": "46754:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1613,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "46754:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "46732:10:0",
									"nodeType": "StructDefinition",
									"scope": 1707,
									"src": "46725:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1618,
									"members": [
										{
											"constant": false,
											"id": 1617,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "46816:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1618,
											"src": "46810:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1616,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "46810:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "46789:9:0",
									"nodeType": "StructDefinition",
									"scope": 1707,
									"src": "46782:47:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "47016:111:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "47080:40:0",
													"nodeType": "YulBlock",
													"src": "47080:40:0",
													"statements": [
														{
															"nativeSrc": "47095:14:0",
															"nodeType": "YulAssignment",
															"src": "47095:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "47105:4:0",
																"nodeType": "YulIdentifier",
																"src": "47105:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "47095:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "47095:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1625,
														"isOffset": false,
														"isSlot": true,
														"src": "47095:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "47105:4:0",
														"valueSize": 1
													}
												],
												"id": 1627,
												"nodeType": "InlineAssembly",
												"src": "47071:49:0"
											}
										]
									},
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "46837:89:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "46941:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "46964:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "46956:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1620,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "46956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46955:14:0"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "47013:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "46993:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1603_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1624,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1623,
														"name": "AddressSlot",
														"nameLocations": [
															"46993:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1603,
														"src": "46993:11:0"
													},
													"referencedDeclaration": 1603,
													"src": "46993:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1603_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46992:23:0"
									},
									"scope": 1707,
									"src": "46932:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "47314:111:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "47378:40:0",
													"nodeType": "YulBlock",
													"src": "47378:40:0",
													"statements": [
														{
															"nativeSrc": "47393:14:0",
															"nodeType": "YulAssignment",
															"src": "47393:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "47403:4:0",
																"nodeType": "YulIdentifier",
																"src": "47403:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "47393:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "47393:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1636,
														"isOffset": false,
														"isSlot": true,
														"src": "47393:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1632,
														"isOffset": false,
														"isSlot": false,
														"src": "47403:4:0",
														"valueSize": 1
													}
												],
												"id": 1638,
												"nodeType": "InlineAssembly",
												"src": "47369:49:0"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "47135:89:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "47239:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "47262:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "47254:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47253:14:0"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "47311:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "47291:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1606_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1634,
														"name": "BooleanSlot",
														"nameLocations": [
															"47291:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1606,
														"src": "47291:11:0"
													},
													"referencedDeclaration": 1606,
													"src": "47291:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1606_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47290:23:0"
									},
									"scope": 1707,
									"src": "47230:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "47612:111:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "47676:40:0",
													"nodeType": "YulBlock",
													"src": "47676:40:0",
													"statements": [
														{
															"nativeSrc": "47691:14:0",
															"nodeType": "YulAssignment",
															"src": "47691:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "47701:4:0",
																"nodeType": "YulIdentifier",
																"src": "47701:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "47691:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "47691:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1647,
														"isOffset": false,
														"isSlot": true,
														"src": "47691:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "47701:4:0",
														"valueSize": 1
													}
												],
												"id": 1649,
												"nodeType": "InlineAssembly",
												"src": "47667:49:0"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "47433:89:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "47537:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "47560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "47552:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47551:14:0"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "47609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "47589:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1609_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1645,
														"name": "Bytes32Slot",
														"nameLocations": [
															"47589:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1609,
														"src": "47589:11:0"
													},
													"referencedDeclaration": 1609,
													"src": "47589:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1609_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47588:23:0"
									},
									"scope": 1707,
									"src": "47528:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "47910:111:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "47974:40:0",
													"nodeType": "YulBlock",
													"src": "47974:40:0",
													"statements": [
														{
															"nativeSrc": "47989:14:0",
															"nodeType": "YulAssignment",
															"src": "47989:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "47999:4:0",
																"nodeType": "YulIdentifier",
																"src": "47999:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "47989:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "47989:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1658,
														"isOffset": false,
														"isSlot": true,
														"src": "47989:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1654,
														"isOffset": false,
														"isSlot": false,
														"src": "47999:4:0",
														"valueSize": 1
													}
												],
												"id": 1660,
												"nodeType": "InlineAssembly",
												"src": "47965:49:0"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "47731:89:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "47835:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "47858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "47850:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47849:14:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "47907:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "47887:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1612_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1656,
														"name": "Uint256Slot",
														"nameLocations": [
															"47887:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1612,
														"src": "47887:11:0"
													},
													"referencedDeclaration": 1612,
													"src": "47887:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1612_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47886:23:0"
									},
									"scope": 1707,
									"src": "47826:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "48205:111:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "48269:40:0",
													"nodeType": "YulBlock",
													"src": "48269:40:0",
													"statements": [
														{
															"nativeSrc": "48284:14:0",
															"nodeType": "YulAssignment",
															"src": "48284:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "48294:4:0",
																"nodeType": "YulIdentifier",
																"src": "48294:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "48284:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "48284:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1669,
														"isOffset": false,
														"isSlot": true,
														"src": "48284:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1665,
														"isOffset": false,
														"isSlot": false,
														"src": "48294:4:0",
														"valueSize": 1
													}
												],
												"id": 1671,
												"nodeType": "InlineAssembly",
												"src": "48260:49:0"
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "48029:88:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "48132:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "48154:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "48146:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48145:14:0"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "48202:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "48183:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1615_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1667,
														"name": "StringSlot",
														"nameLocations": [
															"48183:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1615,
														"src": "48183:10:0"
													},
													"referencedDeclaration": 1615,
													"src": "48183:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1615_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48182:22:0"
									},
									"scope": 1707,
									"src": "48123:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "48523:117:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "48587:46:0",
													"nodeType": "YulBlock",
													"src": "48587:46:0",
													"statements": [
														{
															"nativeSrc": "48602:20:0",
															"nodeType": "YulAssignment",
															"src": "48602:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "48612:10:0",
																"nodeType": "YulIdentifier",
																"src": "48612:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "48602:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "48602:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": true,
														"src": "48602:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1676,
														"isOffset": false,
														"isSlot": true,
														"src": "48612:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1682,
												"nodeType": "InlineAssembly",
												"src": "48578:55:0"
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "48324:103:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "48442:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "48471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48456:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "48456:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48455:22:0"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "48520:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "48501:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1615_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1679,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1678,
														"name": "StringSlot",
														"nameLocations": [
															"48501:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1615,
														"src": "48501:10:0"
													},
													"referencedDeclaration": 1615,
													"src": "48501:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1615_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48500:22:0"
									},
									"scope": 1707,
									"src": "48433:207:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "48821:111:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "48885:40:0",
													"nodeType": "YulBlock",
													"src": "48885:40:0",
													"statements": [
														{
															"nativeSrc": "48900:14:0",
															"nodeType": "YulAssignment",
															"src": "48900:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "48910:4:0",
																"nodeType": "YulIdentifier",
																"src": "48910:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "48900:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "48900:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1691,
														"isOffset": false,
														"isSlot": true,
														"src": "48900:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1687,
														"isOffset": false,
														"isSlot": false,
														"src": "48910:4:0",
														"valueSize": 1
													}
												],
												"id": 1693,
												"nodeType": "InlineAssembly",
												"src": "48876:49:0"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "48648:87:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "48750:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "48771:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "48763:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1686,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48762:14:0"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "48818:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "48800:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1618_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1690,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1689,
														"name": "BytesSlot",
														"nameLocations": [
															"48800:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1618,
														"src": "48800:9:0"
													},
													"referencedDeclaration": 1618,
													"src": "48800:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1618_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48799:21:0"
									},
									"scope": 1707,
									"src": "48741:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "49134:117:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "49198:46:0",
													"nodeType": "YulBlock",
													"src": "49198:46:0",
													"statements": [
														{
															"nativeSrc": "49213:20:0",
															"nodeType": "YulAssignment",
															"src": "49213:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "49223:10:0",
																"nodeType": "YulIdentifier",
																"src": "49223:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "49213:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "49213:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1702,
														"isOffset": false,
														"isSlot": true,
														"src": "49213:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1698,
														"isOffset": false,
														"isSlot": true,
														"src": "49223:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1704,
												"nodeType": "InlineAssembly",
												"src": "49189:55:0"
											}
										]
									},
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "48940:101:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "49056:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "49083:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "49069:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49069:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49068:21:0"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "49131:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "49113:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1618_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1701,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1700,
														"name": "BytesSlot",
														"nameLocations": [
															"49113:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1618,
														"src": "49113:9:0"
													},
													"referencedDeclaration": 1618,
													"src": "49113:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1618_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49112:21:0"
									},
									"scope": 1707,
									"src": "49047:204:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3765,
							"src": "46465:2789:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1708,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "49411:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1709,
								"nodeType": "StructuredDocumentation",
								"src": "49445:157:0",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 2003,
							"linearizedBaseContracts": [
								2003
							],
							"name": "ERC1967Utils",
							"nameLocation": "49612:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "49818:70:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1714,
									"name": "Upgraded",
									"nameLocation": "49900:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "49925:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "49909:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49908:32:0"
									},
									"src": "49894:47:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "49949:69:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1721,
									"name": "AdminChanged",
									"nameLocation": "50030:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "50051:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "50043:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "50074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "50066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50042:41:0"
									},
									"src": "50024:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "50092:61:0",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1726,
									"name": "BeaconUpgraded",
									"nameLocation": "50165:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "50196:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "50180:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50179:24:0"
									},
									"src": "50159:45:0"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "50212:173:0",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1730,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "50483:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "50457:114:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1728,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "50457:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1729,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "50505:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "50580:71:0",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1735,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "50663:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "50700:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "50692:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50691:24:0"
									},
									"src": "50657:59:0"
								},
								{
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "50724:62:0",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1740,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "50798:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "50826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "50818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50817:15:0"
									},
									"src": "50792:41:0"
								},
								{
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "50841:63:0",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1745,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "50916:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "50945:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "50937:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50936:16:0"
									},
									"src": "50910:43:0"
								},
								{
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "50961:84:0",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1748,
									"name": "ERC1967NonPayable",
									"nameLocation": "51057:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51074:2:0"
									},
									"src": "51051:26:0"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "51221:79:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1756,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "51266:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1754,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1707,
																"src": "51239:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1707_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "51251:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1629,
															"src": "51239:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1603_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51239:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1603_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "51287:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1602,
													"src": "51239:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1759,
												"nodeType": "Return",
												"src": "51232:60:0"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "51085:69:0",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "51169:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51186:2:0"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "51212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51211:9:0"
									},
									"scope": 2003,
									"src": "51160:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "51459:223:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1767,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "51474:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "51492:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "51474:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "51497:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "51474:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51507:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "51474:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1777,
												"nodeType": "IfStatement",
												"src": "51470:121:0",
												"trueBody": {
													"id": 1776,
													"nodeType": "Block",
													"src": "51510:81:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1773,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "51561:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1772,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "51532:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51532:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1775,
															"nodeType": "RevertStatement",
															"src": "51525:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1781,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "51628:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1778,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "51601:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1707_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "51613:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1629,
																"src": "51601:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1603_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51601:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1603_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "51649:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1602,
														"src": "51601:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1784,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "51657:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51601:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "51601:73:0"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "51308:82:0",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "51405:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "51432:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "51424:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51423:27:0"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51459:0:0"
									},
									"scope": 2003,
									"src": "51396:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "52084:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1797,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "52114:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1796,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "52095:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52095:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "52095:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1801,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "52157:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1800,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "52148:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52148:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "EmitStatement",
												"src": "52143:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1804,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "52192:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52197:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52192:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "52192:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1819,
													"nodeType": "Block",
													"src": "52295:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1816,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "52310:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52310:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1818,
															"nodeType": "ExpressionStatement",
															"src": "52310:18:0"
														}
													]
												},
												"id": 1820,
												"nodeType": "IfStatement",
												"src": "52188:152:0",
												"trueBody": {
													"id": 1815,
													"nodeType": "Block",
													"src": "52209:80:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1811,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "52253:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1812,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1793,
																		"src": "52272:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1808,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1598,
																		"src": "52224:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1598_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "52232:20:0",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1517,
																	"src": "52224:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52224:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1814,
															"nodeType": "ExpressionStatement",
															"src": "52224:53:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "51690:307:0",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "52012:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "52037:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "52029:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52069:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "52056:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52056:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52028:46:0"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52084:0:0"
									},
									"scope": 2003,
									"src": "52003:344:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "52355:148:0",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1826,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "52601:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "52575:105:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1824,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "52575:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1825,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "52614:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "53093:70:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1834,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "53138:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1832,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1707,
																"src": "53111:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1707_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "53123:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1629,
															"src": "53111:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1603_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53111:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1603_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "53150:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1602,
													"src": "53111:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1831,
												"id": 1837,
												"nodeType": "Return",
												"src": "53104:51:0"
											}
										]
									},
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "52689:346:0",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "53050:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53058:2:0"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "53084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53083:9:0"
									},
									"scope": 2003,
									"src": "53041:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "53295:177:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1845,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "53310:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53330:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53322:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53322:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53310:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "53306:93:0",
												"trueBody": {
													"id": 1858,
													"nodeType": "Block",
													"src": "53334:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53384:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "53376:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "53376:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53376:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1851,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "53356:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53356:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1857,
															"nodeType": "RevertStatement",
															"src": "53349:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1863,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "53436:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1860,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "53409:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1707_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "53421:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1629,
																"src": "53409:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1603_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53409:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1603_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "53448:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1602,
														"src": "53409:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1866,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "53456:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53409:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "53409:55:0"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "53171:73:0",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "53259:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "53277:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "53269:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53268:18:0"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53295:0:0"
									},
									"scope": 2003,
									"src": "53250:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "53647:88:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1877,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "53676:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53676:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1879,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "53688:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1876,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "53663:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53663:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "EmitStatement",
												"src": "53658:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1883,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "53718:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1882,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1870,
														"src": "53708:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53708:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "53708:19:0"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "53480:113:0",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "53608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "53628:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "53620:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53619:18:0"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53647:0:0"
									},
									"scope": 2003,
									"src": "53599:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "53743:204:0",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1891,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "54045:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2003,
									"src": "54019:106:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1889,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "54019:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1890,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "54059:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "54246:71:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1899,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "54291:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1897,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1707,
																"src": "54264:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1707_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54276:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1629,
															"src": "54264:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1603_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54264:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1603_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "54304:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1602,
													"src": "54264:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1896,
												"id": 1902,
												"nodeType": "Return",
												"src": "54257:52:0"
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "54134:53:0",
										"text": " @dev Returns the current beacon."
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "54202:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54211:2:0"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "54237:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54236:9:0"
									},
									"scope": 2003,
									"src": "54193:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "54451:401:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1910,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "54466:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54476:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "54466:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54481:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54466:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54466:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1920,
												"nodeType": "IfStatement",
												"src": "54462:97:0",
												"trueBody": {
													"id": 1919,
													"nodeType": "Block",
													"src": "54494:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1916,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "54537:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1915,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "54516:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54516:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1918,
															"nodeType": "RevertStatement",
															"src": "54509:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1924,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "54598:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1921,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "54571:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1707_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "54583:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1629,
																"src": "54571:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1603_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54571:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1603_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "54611:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1602,
														"src": "54571:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1927,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "54619:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54571:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "54571:57:0"
											},
											{
												"assignments": [
													1931
												],
												"declarations": [
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "54649:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 1949,
														"src": "54641:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1930,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "54641:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1937,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1933,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "54680:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1932,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "54672:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1346_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54672:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1346",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54691:14:0",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1345,
														"src": "54672:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54672:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54641:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1938,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "54722:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54743:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "54722:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54748:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54722:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54758:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54722:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1948,
												"nodeType": "IfStatement",
												"src": "54718:127:0",
												"trueBody": {
													"id": 1947,
													"nodeType": "Block",
													"src": "54761:84:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1944,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "54812:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1943,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "54783:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54783:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1946,
															"nodeType": "RevertStatement",
															"src": "54776:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "54325:73:0",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "54413:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "54432:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "54424:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54423:19:0"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54451:0:0"
									},
									"scope": 2003,
									"src": "54404:448:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "55469:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1959,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "55491:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1958,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "55480:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55480:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "55480:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1963,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "55532:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1962,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "55517:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55517:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1965,
												"nodeType": "EmitStatement",
												"src": "55512:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1966,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "55559:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55564:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55559:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55573:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55559:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "55680:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1982,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "55695:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55695:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1984,
															"nodeType": "ExpressionStatement",
															"src": "55695:18:0"
														}
													]
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "55555:170:0",
												"trueBody": {
													"id": 1981,
													"nodeType": "Block",
													"src": "55576:98:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1974,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1953,
																						"src": "55628:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1973,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1346,
																					"src": "55620:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1346_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "55620:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1346",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "55639:14:0",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1345,
																			"src": "55620:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55620:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1978,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "55657:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1970,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1598,
																		"src": "55591:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1598_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "55599:20:0",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1517,
																	"src": "55591:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55591:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1980,
															"nodeType": "ExpressionStatement",
															"src": "55591:71:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "54860:524:0",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "55399:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "55430:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "55422:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "55454:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "55441:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55441:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55421:38:0"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55469:0:0"
									},
									"scope": 2003,
									"src": "55390:342:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "55963:90:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1992,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "55978:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55982:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "55978:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55990:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55978:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2000,
												"nodeType": "IfStatement",
												"src": "55974:72:0",
												"trueBody": {
													"id": 1999,
													"nodeType": "Block",
													"src": "55993:53:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1996,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "56015:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56015:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1998,
															"nodeType": "RevertStatement",
															"src": "56008:26:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "55740:181:0",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "55936:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55952:2:0"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55963:0:0"
									},
									"scope": 2003,
									"src": "55927:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3765,
							"src": "49604:6452:0",
							"usedErrors": [
								1735,
								1740,
								1745,
								1748
							],
							"usedEvents": [
								1714,
								1721,
								1726
							]
						},
						{
							"id": 2004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "56227:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2006,
										"name": "Initializable",
										"nameLocations": [
											"56927:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 353,
										"src": "56927:13:0"
									},
									"id": 2007,
									"nodeType": "InheritanceSpecifier",
									"src": "56927:13:0"
								},
								{
									"baseName": {
										"id": 2008,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"56942:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1337,
										"src": "56942:17:0"
									},
									"id": 2009,
									"nodeType": "InheritanceSpecifier",
									"src": "56942:17:0"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2005,
								"nodeType": "StructuredDocumentation",
								"src": "56261:627:0",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 2178,
							"linearizedBaseContracts": [
								2178,
								1337,
								353
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "56908:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "56967:61:0",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 2016,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "57060:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2178,
									"src": "57034:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2011,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "57034:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 2014,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "57077:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$2178",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$2178",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 2013,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "57069:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 2012,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "57069:7:0",
												"typeDescriptions": {}
											}
										},
										"id": 2015,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "57069:13:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "57091:638:0",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 2020,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "57758:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 2178,
									"src": "57735:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2018,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "57735:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 2019,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "57786:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "57802:67:0",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 2023,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "57881:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57908:2:0"
									},
									"src": "57875:36:0"
								},
								{
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "57919:70:0",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 2028,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "58001:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "58038:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "58030:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2025,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "58030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58029:14:0"
									},
									"src": "57995:49:0"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "58578:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2031,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "58589:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58589:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "58589:13:0"
											},
											{
												"id": 2034,
												"nodeType": "PlaceholderStatement",
												"src": "58613:1:0"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "58052:499:0",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 2036,
									"name": "onlyProxy",
									"nameLocation": "58566:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58575:2:0"
									},
									"src": "58557:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "58858:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2039,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "58869:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58869:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "58869:20:0"
											},
											{
												"id": 2042,
												"nodeType": "PlaceholderStatement",
												"src": "58900:1:0"
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "58630:198:0",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 2044,
									"name": "notDelegated",
									"nameLocation": "58843:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58855:2:0"
									},
									"src": "58834:75:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "58977:8:0",
										"statements": []
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2047,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2046,
												"name": "onlyInitializing",
												"nameLocations": [
													"58960:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "58960:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58960:16:0"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "58926:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58948:2:0"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58977:0:0"
									},
									"scope": 2178,
									"src": "58917:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "59063:8:0",
										"statements": []
									},
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2053,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2052,
												"name": "onlyInitializing",
												"nameLocations": [
													"59046:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 262,
												"src": "59046:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "59046:16:0"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "59002:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59034:2:0"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59063:0:0"
									},
									"scope": 2178,
									"src": "58993:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1336
									],
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "59745:58:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2064,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "59763:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2003_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "59776:19:0",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1730,
													"src": "59763:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2066,
												"nodeType": "Return",
												"src": "59756:39:0"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "59077:584:0",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2060,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2059,
												"name": "notDelegated",
												"nameLocations": [
													"59714:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2044,
												"src": "59714:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "59714:12:0"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "59676:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59689:2:0"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "59736:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2061,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59735:9:0"
									},
									"scope": 2178,
									"src": "59667:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2087,
										"nodeType": "Block",
										"src": "60239:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2079,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "60268:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2078,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "60250:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60250:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "60250:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2083,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "60319:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2084,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "60338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2082,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "60297:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60297:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "60297:46:0"
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "59811:317:0",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 2088,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2076,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2075,
												"name": "onlyProxy",
												"nameLocations": [
													"60229:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2036,
												"src": "60229:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60229:9:0"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "60143:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "60168:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "60160:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "60200:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "60187:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "60187:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60159:46:0"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60239:0:0"
									},
									"scope": 2178,
									"src": "60134:217:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "60630:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2094,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "60667:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$2178",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$2178",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "60659:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2092,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "60659:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60659:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2096,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "60676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "60659:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2098,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "60738:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2003_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60751:17:0",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1761,
																"src": "60738:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "60738:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2101,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "60774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "60738:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "60659:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2108,
												"nodeType": "IfStatement",
												"src": "60641:256:0",
												"trueBody": {
													"id": 2107,
													"nodeType": "Block",
													"src": "60834:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2104,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "60856:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60856:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2106,
															"nodeType": "RevertStatement",
															"src": "60849:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "60359:220:0",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "60594:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60605:2:0"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60630:0:0"
									},
									"scope": 2178,
									"src": "60585:319:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "61079:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2116,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "61102:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$2178",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$2178",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "61094:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "61094:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61094:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2118,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "61111:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61094:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2124,
												"nodeType": "IfStatement",
												"src": "61090:148:0",
												"trueBody": {
													"id": 2123,
													"nodeType": "Block",
													"src": "61119:119:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2120,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "61197:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61197:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2122,
															"nodeType": "RevertStatement",
															"src": "61190:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "60912:109:0",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "61036:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61054:2:0"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61079:0:0"
									},
									"scope": 2178,
									"src": "61027:218:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "61253:381:0",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 2132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "61649:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "61675:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "61667:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61666:27:0"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61710:0:0"
									},
									"scope": 2178,
									"src": "61640:71:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "62163:463:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2165,
															"nodeType": "Block",
															"src": "62254:217:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2148,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "62273:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 2149,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2003,
																				"src": "62281:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2003_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "62294:19:0",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1730,
																			"src": "62281:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "62273:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2157,
																	"nodeType": "IfStatement",
																	"src": "62269:122:0",
																	"trueBody": {
																		"id": 2156,
																		"nodeType": "Block",
																		"src": "62315:76:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 2153,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2146,
																							"src": "62370:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2152,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2028,
																						"src": "62341:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																							"typeString": "function (bytes32) pure"
																						}
																					},
																					"id": 2154,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "62341:34:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2155,
																				"nodeType": "RevertStatement",
																				"src": "62334:41:0"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2161,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2135,
																				"src": "62435:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2162,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "62454:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 2158,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2003,
																				"src": "62405:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2003_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 2160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "62418:16:0",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1822,
																			"src": "62405:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "62405:54:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2164,
																	"nodeType": "ExpressionStatement",
																	"src": "62405:54:0"
																}
															]
														},
														"errorName": "",
														"id": 2166,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2147,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2146,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "62248:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2166,
																	"src": "62240:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2145,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "62240:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "62239:14:0"
														},
														"src": "62231:240:0"
													},
													{
														"block": {
															"id": 2173,
															"nodeType": "Block",
															"src": "62478:141:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 2170,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2135,
																				"src": "62589:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 2167,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2003,
																				"src": "62547:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2003_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "62560:28:0",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1735,
																			"src": "62547:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																				"typeString": "function (address) pure"
																			}
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "62547:60:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2172,
																	"nodeType": "RevertStatement",
																	"src": "62540:67:0"
																}
															]
														},
														"errorName": "",
														"id": 2174,
														"nodeType": "TryCatchClause",
														"src": "62472:147:0"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2141,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "62196:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2140,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "62178:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1337_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "62178:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1337",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62215:13:0",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1336,
														"src": "62178:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62178:52:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2175,
												"nodeType": "TryStatement",
												"src": "62174:445:0"
											}
										]
									},
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "61719:353:0",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "62087:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "62117:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "62109:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "62149:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "62136:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "62136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62108:46:0"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62163:0:0"
									},
									"scope": 2178,
									"src": "62078:548:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3765,
							"src": "56890:5739:0",
							"usedErrors": [
								116,
								119,
								1358,
								1361,
								1735,
								1748,
								2023,
								2028
							],
							"usedEvents": [
								124,
								1714
							]
						},
						{
							"id": 2179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "62716:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDexFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2240,
							"linearizedBaseContracts": [
								2240
							],
							"name": "IDexFactory",
							"nameLocation": "62762:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 2189,
									"name": "PairCreated",
									"nameLocation": "62787:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "62825:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "62809:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "62858:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "62842:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "62883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "62875:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "62898:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62798:114:0"
									},
									"src": "62781:132:0"
								},
								{
									"functionSelector": "017e7e58",
									"id": 2194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "62930:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62935:2:0"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "62961:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62960:9:0"
									},
									"scope": 2240,
									"src": "62921:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 2199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "62987:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62998:2:0"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "63024:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63023:9:0"
									},
									"scope": 2240,
									"src": "62978:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 2208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "63050:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "63076:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "63068:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "63101:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "63093:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63057:57:0"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "63146:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "63138:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63137:14:0"
									},
									"scope": 2240,
									"src": "63041:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 2215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "63169:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "63178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63177:9:0"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "63218:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "63210:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63209:14:0"
									},
									"scope": 2240,
									"src": "63160:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 2220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "63241:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63255:2:0"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "63281:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63280:9:0"
									},
									"scope": 2240,
									"src": "63232:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 2229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "63307:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "63336:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "63328:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "63361:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "63353:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63317:57:0"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "63401:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "63393:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63392:14:0"
									},
									"scope": 2240,
									"src": "63298:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 2234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "63424:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "63433:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63432:9:0"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63450:0:0"
									},
									"scope": 2240,
									"src": "63415:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 2239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "63468:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "63483:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63482:9:0"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63500:0:0"
									},
									"scope": 2240,
									"src": "63459:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3765,
							"src": "62752:752:0",
							"usedErrors": [],
							"usedEvents": [
								2189
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDexRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2337,
							"linearizedBaseContracts": [
								2337
							],
							"name": "IDexRouter",
							"nameLocation": "63518:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "63545:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63552:2:0"
									},
									"returnParameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "63578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63577:9:0"
									},
									"scope": 2337,
									"src": "63536:51:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "63604:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63608:2:0"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "63634:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63633:9:0"
									},
									"scope": 2337,
									"src": "63595:48:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 2275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "63660:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "63691:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63683:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "63716:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63708:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "63741:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63733:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "63774:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63766:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "63807:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63799:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "63836:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63828:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "63865:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63857:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "63886:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63878:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63672:229:0"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "63928:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63920:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "63945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "63962:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "63954:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63919:53:0"
									},
									"scope": 2337,
									"src": "63651:322:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 2296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "63990:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "64024:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64016:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "64048:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64040:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "64085:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64077:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "64118:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64110:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "64149:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64141:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "64170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64162:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64005:180:0"
									},
									"returnParameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "64247:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64239:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "64268:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64260:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "64287:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "64279:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64238:59:0"
									},
									"scope": 2337,
									"src": "63981:317:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "64315:53:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "64387:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "64379:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "64414:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "64406:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "64456:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "64437:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2301,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "64437:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2302,
													"nodeType": "ArrayTypeName",
													"src": "64437:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "64479:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "64471:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "64500:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "64492:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64368:147:0"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64524:0:0"
									},
									"scope": 2337,
									"src": "64306:219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "64542:50:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "64611:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "64603:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "64653:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "64634:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2313,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "64634:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2314,
													"nodeType": "ArrayTypeName",
													"src": "64634:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "64676:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "64668:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "64697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "64689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64592:120:0"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64729:0:0"
									},
									"scope": 2337,
									"src": "64533:197:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "64747:50:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "64816:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "64808:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "64843:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "64835:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "64885:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "64866:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2327,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "64866:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2328,
													"nodeType": "ArrayTypeName",
													"src": "64866:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "64908:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "64900:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "64929:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "64921:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64797:147:0"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64953:0:0"
									},
									"scope": 2337,
									"src": "64738:216:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3765,
							"src": "63508:1449:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2338,
										"name": "Initializable",
										"nameLocations": [
											"64983:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 353,
										"src": "64983:13:0"
									},
									"id": 2339,
									"nodeType": "InheritanceSpecifier",
									"src": "64983:13:0"
								},
								{
									"baseName": {
										"id": 2340,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"64998:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1138,
										"src": "64998:16:0"
									},
									"id": 2341,
									"nodeType": "InheritanceSpecifier",
									"src": "64998:16:0"
								},
								{
									"baseName": {
										"id": 2342,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"65016:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "65016:18:0"
									},
									"id": 2343,
									"nodeType": "InheritanceSpecifier",
									"src": "65016:18:0"
								},
								{
									"baseName": {
										"id": 2344,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"65036:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2178,
										"src": "65036:15:0"
									},
									"id": 2345,
									"nodeType": "InheritanceSpecifier",
									"src": "65036:15:0"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3764,
							"linearizedBaseContracts": [
								3764,
								2178,
								1337,
								1328,
								1138,
								437,
								100,
								77,
								396,
								353
							],
							"name": "MyToken",
							"nameLocation": "64972:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2349,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "65101:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65068:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2348,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2346,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "65076:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "65068:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2347,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "65087:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2351,
									"mutability": "mutable",
									"name": "_taxWallet1",
									"nameLocation": "65150:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65126:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2350,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65126:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2353,
									"mutability": "mutable",
									"name": "_taxWallet2",
									"nameLocation": "65192:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65168:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2352,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65168:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2355,
									"mutability": "mutable",
									"name": "_taxWallet3",
									"nameLocation": "65234:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65210:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2354,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65210:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2357,
									"mutability": "mutable",
									"name": "_taxWallet4",
									"nameLocation": "65276:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65252:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2356,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65252:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2359,
									"mutability": "mutable",
									"name": "_taxWallet5",
									"nameLocation": "65318:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65294:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2358,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65294:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2361,
									"mutability": "mutable",
									"name": "_taxWallet6",
									"nameLocation": "65360:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65336:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2360,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65336:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2363,
									"mutability": "mutable",
									"name": "_taxWallet7",
									"nameLocation": "65402:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65378:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2362,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65378:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2365,
									"mutability": "mutable",
									"name": "_taxWallet8",
									"nameLocation": "65444:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65420:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2364,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65420:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2367,
									"mutability": "mutable",
									"name": "firstBlock",
									"nameLocation": "65470:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65462:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65462:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2369,
									"mutability": "mutable",
									"name": "lastLiquifyTime",
									"nameLocation": "65504:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65489:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2368,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "65489:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2371,
									"mutability": "mutable",
									"name": "buyFee",
									"nameLocation": "65544:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65528:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65528:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2373,
									"mutability": "mutable",
									"name": "sellFee",
									"nameLocation": "65573:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65557:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2372,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65557:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2375,
									"mutability": "mutable",
									"name": "_preventSwapBefore",
									"nameLocation": "65603:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65587:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2374,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65587:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2377,
									"mutability": "mutable",
									"name": "_buyCount",
									"nameLocation": "65644:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65628:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2376,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65628:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2379,
									"mutability": "mutable",
									"name": "_txAmountLimit",
									"nameLocation": "65678:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65662:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65662:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2381,
									"mutability": "mutable",
									"name": "_walletAmountLimit",
									"nameLocation": "65715:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65699:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2380,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65699:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2383,
									"mutability": "mutable",
									"name": "_swapbackMin",
									"nameLocation": "65756:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65740:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65740:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2385,
									"mutability": "mutable",
									"name": "_swapbackMax",
									"nameLocation": "65791:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65775:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "65775:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2388,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "65831:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65812:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDexRouter_$2337",
										"typeString": "contract IDexRouter"
									},
									"typeName": {
										"id": 2387,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2386,
											"name": "IDexRouter",
											"nameLocations": [
												"65812:10:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2337,
											"src": "65812:10:0"
										},
										"referencedDeclaration": 2337,
										"src": "65812:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDexRouter_$2337",
											"typeString": "contract IDexRouter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2390,
									"mutability": "mutable",
									"name": "uniswapV2Pair",
									"nameLocation": "65869:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65853:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2389,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65853:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2392,
									"mutability": "mutable",
									"name": "tradingOpen",
									"nameLocation": "65902:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65889:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2391,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "65889:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2395,
									"mutability": "mutable",
									"name": "inSwap",
									"nameLocation": "65933:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65920:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2393,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "65920:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "65942:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2398,
									"mutability": "mutable",
									"name": "swapEnabled",
									"nameLocation": "65967:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65954:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2396,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "65954:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "65981:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2401,
									"mutability": "mutable",
									"name": "launchmode",
									"nameLocation": "66006:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "65993:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2399,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "65993:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 2400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "66019:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "dd54291b",
									"id": 2403,
									"mutability": "mutable",
									"name": "tokenCap",
									"nameLocation": "66045:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "66030:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "66030:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2407,
									"mutability": "mutable",
									"name": "_canTx",
									"nameLocation": "66093:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "66060:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2406,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2404,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "66068:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "66060:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2405,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "66079:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf",
									"id": 2411,
									"name": "MaxTxAmountUpdated",
									"nameLocation": "66114:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"indexed": false,
												"mutability": "mutable",
												"name": "_txAmountLimit",
												"nameLocation": "66138:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "66133:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "66133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66132:21:0"
									},
									"src": "66108:46:0"
								},
								{
									"anonymous": false,
									"eventSelector": "4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e001",
									"id": 2415,
									"name": "MaxWalletAmountUpdated",
									"nameLocation": "66166:22:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"indexed": false,
												"mutability": "mutable",
												"name": "_walletAmountLimit",
												"nameLocation": "66194:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "66189:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "66189:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66188:25:0"
									},
									"src": "66160:54:0"
								},
								{
									"anonymous": false,
									"eventSelector": "5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1",
									"id": 2421,
									"name": "FeesUpdated",
									"nameLocation": "66226:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyFee",
												"nameLocation": "66243:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "66238:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "66238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"indexed": false,
												"mutability": "mutable",
												"name": "sellFee",
												"nameLocation": "66256:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "66251:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "66251:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66237:27:0"
									},
									"src": "66220:45:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2b3f4c022d9943b151090e389857495bb9d8493714259cc19a540f5a11475fb1",
									"id": 2427,
									"name": "SwapbackUpdated",
									"nameLocation": "66277:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"indexed": false,
												"mutability": "mutable",
												"name": "_swapbackMin",
												"nameLocation": "66298:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "66293:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "66293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"indexed": false,
												"mutability": "mutable",
												"name": "_swapbackMax",
												"nameLocation": "66317:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "66312:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "66312:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66292:38:0"
									},
									"src": "66271:60:0"
								},
								{
									"anonymous": false,
									"eventSelector": "52e6e0e286d372f9e966ef36de088520ff74564d54d64ad119477262ca461e7b",
									"id": 2445,
									"name": "FeeReceiversUpdated",
									"nameLocation": "66343:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"indexed": false,
												"mutability": "mutable",
												"name": "_taxWallet1",
												"nameLocation": "66379:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "66363:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66363:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"indexed": false,
												"mutability": "mutable",
												"name": "_taxWallet2",
												"nameLocation": "66437:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "66421:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66421:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"indexed": false,
												"mutability": "mutable",
												"name": "_taxWallet3",
												"nameLocation": "66495:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "66479:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66479:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"indexed": false,
												"mutability": "mutable",
												"name": "_taxWallet4",
												"nameLocation": "66553:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "66537:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66537:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2437,
												"indexed": false,
												"mutability": "mutable",
												"name": "_taxWallet5",
												"nameLocation": "66611:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "66595:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66595:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"indexed": false,
												"mutability": "mutable",
												"name": "_taxWallet6",
												"nameLocation": "66669:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "66653:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66653:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"indexed": false,
												"mutability": "mutable",
												"name": "_taxWallet7",
												"nameLocation": "66727:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "66711:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66711:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"indexed": false,
												"mutability": "mutable",
												"name": "_taxWallet8",
												"nameLocation": "66785:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "66769:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66769:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66362:441:0"
									},
									"src": "66337:467:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2d43abd87b27cee7b0aa8c6f7e0b4a3247b683262a83cbc2318b0df398a49aa9",
									"id": 2451,
									"name": "ExcludedFromFee",
									"nameLocation": "66816:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "66840:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "66832:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "66854:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "66849:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "66849:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66831:30:0"
									},
									"src": "66810:52:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7bfa7bacf025baa75e5308bf15bcf2948f406c7ebe3eb1a8bb611862b9d647ef",
									"id": 2453,
									"name": "LimitsRemoved",
									"nameLocation": "66874:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66887:2:0"
									},
									"src": "66868:22:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ea4359d5c4b8f0945a64ab9c37fe830b3407d45e0e6e6f84275977a570457d6f",
									"id": 2455,
									"name": "TradingOpened",
									"nameLocation": "66902:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66915:2:0"
									},
									"src": "66896:22:0"
								},
								{
									"constant": false,
									"id": 2457,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "66934:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3764,
									"src": "66926:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "66926:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "66978:69:0",
										"statements": [
											{
												"expression": {
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2459,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "66989:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66998:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "66989:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "66989:13:0"
											},
											{
												"id": 2463,
												"nodeType": "PlaceholderStatement",
												"src": "67013:1:0"
											},
											{
												"expression": {
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2464,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "67025:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "67034:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "67025:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2467,
												"nodeType": "ExpressionStatement",
												"src": "67025:14:0"
											}
										]
									},
									"id": 2469,
									"name": "lockTheSwap",
									"nameLocation": "66964:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66975:2:0"
									},
									"src": "66955:92:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "67124:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2473,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "67135:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67135:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2475,
												"nodeType": "ExpressionStatement",
												"src": "67135:22:0"
											}
										]
									},
									"documentation": {
										"id": 2470,
										"nodeType": "StructuredDocumentation",
										"src": "67056:48:0",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2477,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67121:2:0"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67124:0:0"
									},
									"scope": 3764,
									"src": "67110:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2735,
										"nodeType": "Block",
										"src": "67236:2125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4d79546f6b656e",
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67260:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
																"typeString": "literal_string \"MyToken\""
															},
															"value": "MyToken"
														},
														{
															"hexValue": "4d544b",
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67271:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
																"typeString": "literal_string \"MTK\""
															},
															"value": "MTK"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
																"typeString": "literal_string \"MyToken\""
															},
															{
																"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
																"typeString": "literal_string \"MTK\""
															}
														],
														"id": 2484,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "67247:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67247:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2488,
												"nodeType": "ExpressionStatement",
												"src": "67247:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2490,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2479,
															"src": "67303:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2489,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "67288:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67288:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "67288:28:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2493,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "67327:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67327:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2495,
												"nodeType": "ExpressionStatement",
												"src": "67327:24:0"
											},
											{
												"expression": {
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2496,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "67362:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(25 digits omitted)...0000"
														},
														"id": 2501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130305f3030305f3030305f3030305f303030",
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67377:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															},
															"value": "100_000_000_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "67399:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "67405:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "67399:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "67377:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(25 digits omitted)...0000"
														}
													},
													"src": "67362:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2503,
												"nodeType": "ExpressionStatement",
												"src": "67362:45:0"
											},
											{
												"expression": {
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2504,
														"name": "tokenCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "67418:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(26 digits omitted)...0000"
														},
														"id": 2509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130305f3030305f3030305f3030305f3030305f30",
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67429:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000_by_1",
																"typeString": "int_const 1000000000000000"
															},
															"value": "100_000_000_000_000_0"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "67453:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "67459:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "67453:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "67429:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000000000000_by_1",
															"typeString": "int_const 1000...(26 digits omitted)...0000"
														}
													},
													"src": "67418:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2511,
												"nodeType": "ExpressionStatement",
												"src": "67418:43:0"
											},
											{
												"expression": {
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2512,
														"name": "_txAmountLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2379,
														"src": "67472:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2513,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "67490:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "67505:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "67490:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2516,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "67489:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67511:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "67489:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "67472:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "67472:43:0"
											},
											{
												"expression": {
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2521,
														"name": "_walletAmountLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "67526:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2522,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "67548:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "67563:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "67548:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2525,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "67547:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67569:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "67547:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "67526:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2529,
												"nodeType": "ExpressionStatement",
												"src": "67526:47:0"
											},
											{
												"expression": {
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2530,
														"name": "_swapbackMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2383,
														"src": "67584:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2531,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "67600:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "35",
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "67615:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"src": "67600:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "67599:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67620:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "67599:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "67584:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2538,
												"nodeType": "ExpressionStatement",
												"src": "67584:41:0"
											},
											{
												"expression": {
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2539,
														"name": "_swapbackMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "67636:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2540,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "67652:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "343030",
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "67667:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_400_by_1",
																			"typeString": "int_const 400"
																		},
																		"value": "400"
																	},
																	"src": "67652:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2543,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "67651:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "67674:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "67651:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "67636:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2547,
												"nodeType": "ExpressionStatement",
												"src": "67636:43:0"
											},
											{
												"expression": {
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2548,
														"name": "buyFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "67690:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 2549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "67699:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "67690:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2551,
												"nodeType": "ExpressionStatement",
												"src": "67690:11:0"
											},
											{
												"expression": {
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2552,
														"name": "sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "67712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3430",
														"id": 2553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "67722:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_40_by_1",
															"typeString": "int_const 40"
														},
														"value": "40"
													},
													"src": "67712:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2555,
												"nodeType": "ExpressionStatement",
												"src": "67712:12:0"
											},
											{
												"expression": {
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2556,
														"name": "_preventSwapBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "67735:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "67756:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "67735:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2559,
												"nodeType": "ExpressionStatement",
												"src": "67735:22:0"
											},
											{
												"expression": {
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2560,
														"name": "_buyCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2377,
														"src": "67768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "67780:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "67768:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2563,
												"nodeType": "ExpressionStatement",
												"src": "67768:13:0"
											},
											{
												"expression": {
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2564,
															"name": "_canTx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "67792:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2569,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2567,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "67808:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "67800:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2565,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "67800:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "67800:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "67792:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "67817:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "67792:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2572,
												"nodeType": "ExpressionStatement",
												"src": "67792:29:0"
											},
											{
												"expression": {
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2573,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2388,
														"src": "67833:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDexRouter_$2337",
															"typeString": "contract IDexRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307839416336344363366534343135313434433435354244384534383337466561353536303365356333",
																"id": 2575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "67933:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2574,
															"name": "IDexRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "67851:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IDexRouter_$2337_$",
																"typeString": "type(contract IDexRouter)"
															}
														},
														"id": 2576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67851:135:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDexRouter_$2337",
															"typeString": "contract IDexRouter"
														}
													},
													"src": "67833:153:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDexRouter_$2337",
														"typeString": "contract IDexRouter"
													}
												},
												"id": 2578,
												"nodeType": "ExpressionStatement",
												"src": "67833:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2582,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "68014:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "68006:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "68006:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "68006:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2586,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2388,
																	"src": "68029:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDexRouter_$2337",
																		"typeString": "contract IDexRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDexRouter_$2337",
																		"typeString": "contract IDexRouter"
																	}
																],
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "68021:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2584,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "68021:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "68021:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2588,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "68047:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "68047:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2579,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1021,
															1089
														],
														"referencedDeclaration": 1021,
														"src": "67997:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67997:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2591,
												"nodeType": "ExpressionStatement",
												"src": "67997:64:0"
											},
											{
												"expression": {
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2592,
														"name": "uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "68072:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2601,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "68160:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MyToken_$3764",
																			"typeString": "contract MyToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MyToken_$3764",
																			"typeString": "contract MyToken"
																		}
																	],
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "68152:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2599,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "68152:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68152:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2603,
																		"name": "uniswapV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "68180:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IDexRouter_$2337",
																			"typeString": "contract IDexRouter"
																		}
																	},
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "68196:4:0",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2250,
																	"src": "68180:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68180:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2594,
																				"name": "uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2388,
																				"src": "68100:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IDexRouter_$2337",
																					"typeString": "contract IDexRouter"
																				}
																			},
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "68116:7:0",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2245,
																			"src": "68100:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "68100:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2593,
																	"name": "IDexFactory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2240,
																	"src": "68088:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IDexFactory_$2240_$",
																		"typeString": "type(contract IDexFactory)"
																	}
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68088:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDexFactory_$2240",
																	"typeString": "contract IDexFactory"
																}
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "68127:10:0",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2229,
															"src": "68088:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 2606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68088:125:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "68072:141:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2608,
												"nodeType": "ExpressionStatement",
												"src": "68072:141:0"
											},
											{
												"expression": {
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2609,
														"name": "_taxWallet1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "68224:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307832463864316444443046334343663066653231433530356134654263353646366634363236633044",
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68246:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68238:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2610,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68238:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68238:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "68224:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2615,
												"nodeType": "ExpressionStatement",
												"src": "68224:65:0"
											},
											{
												"expression": {
													"id": 2621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2616,
														"name": "_taxWallet2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "68300:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307832463864316444443046334343663066653231433530356134654263353646366634363236633044",
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68322:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68314:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2617,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68314:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68314:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "68300:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2622,
												"nodeType": "ExpressionStatement",
												"src": "68300:65:0"
											},
											{
												"expression": {
													"id": 2628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2623,
														"name": "_taxWallet3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "68376:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307832463864316444443046334343663066653231433530356134654263353646366634363236633044",
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68398:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68390:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2624,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68390:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68390:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "68376:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2629,
												"nodeType": "ExpressionStatement",
												"src": "68376:65:0"
											},
											{
												"expression": {
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2630,
														"name": "_taxWallet4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2357,
														"src": "68452:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307832463864316444443046334343663066653231433530356134654263353646366634363236633044",
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68474:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68466:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68466:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68466:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "68452:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2636,
												"nodeType": "ExpressionStatement",
												"src": "68452:65:0"
											},
											{
												"expression": {
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2637,
														"name": "_taxWallet5",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "68528:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307832463864316444443046334343663066653231433530356134654263353646366634363236633044",
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68550:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68542:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2638,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68542:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68542:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "68528:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2643,
												"nodeType": "ExpressionStatement",
												"src": "68528:65:0"
											},
											{
												"expression": {
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2644,
														"name": "_taxWallet6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2361,
														"src": "68604:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307832463864316444443046334343663066653231433530356134654263353646366634363236633044",
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68626:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68618:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68618:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68618:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "68604:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2650,
												"nodeType": "ExpressionStatement",
												"src": "68604:65:0"
											},
											{
												"expression": {
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2651,
														"name": "_taxWallet7",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2363,
														"src": "68680:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307832463864316444443046334343663066653231433530356134654263353646366634363236633044",
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68702:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68694:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2652,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68694:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68694:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "68680:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2657,
												"nodeType": "ExpressionStatement",
												"src": "68680:65:0"
											},
											{
												"expression": {
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2658,
														"name": "_taxWallet8",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "68756:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307832463864316444443046334343663066653231433530356134654263353646366634363236633044",
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68778:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x2F8d1dDD0F3CCf0fe21C505a4eBc56F6f4626c0D"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68770:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 2659,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68770:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 2662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68770:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "68756:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2664,
												"nodeType": "ExpressionStatement",
												"src": "68756:65:0"
											},
											{
												"expression": {
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2665,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "68832:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2668,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2666,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "68851:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "68851:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "68832:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "68862:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "68832:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "68832:34:0"
											},
											{
												"expression": {
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2672,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "68877:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2677,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2675,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "68904:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "68896:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2673,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "68896:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "68896:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "68877:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "68913:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "68877:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2680,
												"nodeType": "ExpressionStatement",
												"src": "68877:40:0"
											},
											{
												"expression": {
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2681,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "68928:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2683,
														"indexExpression": {
															"id": 2682,
															"name": "_taxWallet1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "68947:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "68928:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "68962:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "68928:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2686,
												"nodeType": "ExpressionStatement",
												"src": "68928:38:0"
											},
											{
												"expression": {
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2687,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "68977:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2689,
														"indexExpression": {
															"id": 2688,
															"name": "_taxWallet2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "68996:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "68977:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69011:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "68977:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2692,
												"nodeType": "ExpressionStatement",
												"src": "68977:38:0"
											},
											{
												"expression": {
													"id": 2697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2693,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "69026:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2695,
														"indexExpression": {
															"id": 2694,
															"name": "_taxWallet3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "69045:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "69026:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69060:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69026:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2698,
												"nodeType": "ExpressionStatement",
												"src": "69026:38:0"
											},
											{
												"expression": {
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2699,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "69075:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2701,
														"indexExpression": {
															"id": 2700,
															"name": "_taxWallet4",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "69094:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "69075:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69109:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69075:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2704,
												"nodeType": "ExpressionStatement",
												"src": "69075:38:0"
											},
											{
												"expression": {
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2705,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "69124:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2707,
														"indexExpression": {
															"id": 2706,
															"name": "_taxWallet5",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "69143:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "69124:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69158:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69124:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2710,
												"nodeType": "ExpressionStatement",
												"src": "69124:38:0"
											},
											{
												"expression": {
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2711,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "69173:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2713,
														"indexExpression": {
															"id": 2712,
															"name": "_taxWallet6",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2361,
															"src": "69192:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "69173:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69207:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69173:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2716,
												"nodeType": "ExpressionStatement",
												"src": "69173:38:0"
											},
											{
												"expression": {
													"id": 2721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2717,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "69222:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2719,
														"indexExpression": {
															"id": 2718,
															"name": "_taxWallet7",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "69241:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "69222:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69256:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69222:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2722,
												"nodeType": "ExpressionStatement",
												"src": "69222:38:0"
											},
											{
												"expression": {
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2723,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "69271:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2725,
														"indexExpression": {
															"id": 2724,
															"name": "_taxWallet8",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "69290:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "69271:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69305:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69271:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2728,
												"nodeType": "ExpressionStatement",
												"src": "69271:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2730,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "69328:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "69332:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "69328:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2732,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "69340:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2729,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "69322:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69322:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2734,
												"nodeType": "ExpressionStatement",
												"src": "69322:31:0"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 2736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2481,
												"name": "initializer",
												"nameLocations": [
													"67217:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "67217:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "67217:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "67184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "67203:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "67195:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67194:22:0"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67236:0:0"
									},
									"scope": 3764,
									"src": "67175:2186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2132
									],
									"body": {
										"id": 2744,
										"nodeType": "Block",
										"src": "69483:2:0",
										"statements": []
									},
									"id": 2745,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2740,
												"name": "onlyOwner",
												"nameLocations": [
													"69450:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "69450:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "69450:9:0"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "69378:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2742,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "69469:8:0"
									},
									"parameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "69404:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "69396:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69395:27:0"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69483:0:0"
									},
									"scope": 3764,
									"src": "69369:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2748,
										"nodeType": "Block",
										"src": "69520:2:0",
										"statements": []
									},
									"id": 2749,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69500:2:0"
									},
									"returnParameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69520:0:0"
									},
									"scope": 3764,
									"src": "69493:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "69565:339:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "69584:12:0",
															"subExpression": {
																"id": 2755,
																"name": "tradingOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "69585:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "74726164696e6720697320616c7265616479206f70656e",
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "69598:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027",
																"typeString": "literal_string \"trading is already open\""
															},
															"value": "trading is already open"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdd617652f61db65ccbebc74586d5b2c26dbdfb53ffa94bd515051e803f30027",
																"typeString": "literal_string \"trading is already open\""
															}
														],
														"id": 2754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "69576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69576:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2759,
												"nodeType": "ExpressionStatement",
												"src": "69576:48:0"
											},
											{
												"expression": {
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2760,
														"name": "swapEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2398,
														"src": "69635:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69649:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69635:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2763,
												"nodeType": "ExpressionStatement",
												"src": "69635:18:0"
											},
											{
												"expression": {
													"id": 2766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2764,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2392,
														"src": "69664:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69678:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69664:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2767,
												"nodeType": "ExpressionStatement",
												"src": "69664:18:0"
											},
											{
												"expression": {
													"id": 2771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2768,
														"name": "firstBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "69693:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2769,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "69706:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "69712:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "69706:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "69693:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2772,
												"nodeType": "ExpressionStatement",
												"src": "69693:25:0"
											},
											{
												"expression": {
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2773,
														"name": "lastLiquifyTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "69729:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2776,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "69754:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "69760:6:0",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "69754:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "69747:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 2774,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "69747:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 2778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "69747:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "69729:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "69729:38:0"
											},
											{
												"expression": {
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2781,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "69778:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2786,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2784,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "69805:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "69797:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2782,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "69797:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "69797:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "69778:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69814:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "69778:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2789,
												"nodeType": "ExpressionStatement",
												"src": "69778:40:0"
											},
											{
												"expression": {
													"id": 2792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2790,
														"name": "buyFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "69829:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3235",
														"id": 2791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69838:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_25_by_1",
															"typeString": "int_const 25"
														},
														"value": "25"
													},
													"src": "69829:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2793,
												"nodeType": "ExpressionStatement",
												"src": "69829:11:0"
											},
											{
												"expression": {
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2794,
														"name": "sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "69851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3430",
														"id": 2795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69861:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_40_by_1",
															"typeString": "int_const 40"
														},
														"value": "40"
													},
													"src": "69851:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2797,
												"nodeType": "ExpressionStatement",
												"src": "69851:12:0"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2798,
														"name": "TradingOpened",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "69881:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69881:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2800,
												"nodeType": "EmitStatement",
												"src": "69876:20:0"
											}
										]
									},
									"functionSelector": "fcfff16f",
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2751,
												"name": "onlyOwner",
												"nameLocations": [
													"69555:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "69555:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "69555:9:0"
										}
									],
									"name": "open",
									"nameLocation": "69539:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69543:2:0"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69565:0:0"
									},
									"scope": 3764,
									"src": "69530:374:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2866,
										"nodeType": "Block",
										"src": "70222:490:0",
										"statements": [
											{
												"expression": {
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2823,
														"name": "_taxWallet1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "70233:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2824,
														"name": "taxWallet1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2804,
														"src": "70247:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "70233:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2826,
												"nodeType": "ExpressionStatement",
												"src": "70233:24:0"
											},
											{
												"expression": {
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2827,
														"name": "_taxWallet2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "70268:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2828,
														"name": "taxWallet2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "70282:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "70268:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "70268:24:0"
											},
											{
												"expression": {
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2831,
														"name": "_taxWallet3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "70303:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2832,
														"name": "taxWallet3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2808,
														"src": "70317:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "70303:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2834,
												"nodeType": "ExpressionStatement",
												"src": "70303:24:0"
											},
											{
												"expression": {
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2835,
														"name": "_taxWallet4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2357,
														"src": "70338:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2836,
														"name": "taxWallet4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "70352:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "70338:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2838,
												"nodeType": "ExpressionStatement",
												"src": "70338:24:0"
											},
											{
												"expression": {
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2839,
														"name": "_taxWallet5",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "70373:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2840,
														"name": "taxWallet5",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2812,
														"src": "70387:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "70373:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2842,
												"nodeType": "ExpressionStatement",
												"src": "70373:24:0"
											},
											{
												"expression": {
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2843,
														"name": "_taxWallet6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2361,
														"src": "70408:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2844,
														"name": "taxWallet6",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "70422:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "70408:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2846,
												"nodeType": "ExpressionStatement",
												"src": "70408:24:0"
											},
											{
												"expression": {
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2847,
														"name": "_taxWallet7",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2363,
														"src": "70443:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2848,
														"name": "taxWallet7",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2816,
														"src": "70457:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "70443:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2850,
												"nodeType": "ExpressionStatement",
												"src": "70443:24:0"
											},
											{
												"expression": {
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2851,
														"name": "_taxWallet8",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "70478:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2852,
														"name": "taxWallet8",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2818,
														"src": "70492:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "70478:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2854,
												"nodeType": "ExpressionStatement",
												"src": "70478:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2856,
															"name": "_taxWallet1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "70540:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2857,
															"name": "_taxWallet2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "70552:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2858,
															"name": "_taxWallet3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "70564:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2859,
															"name": "_taxWallet4",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "70610:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2860,
															"name": "_taxWallet5",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "70622:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2861,
															"name": "_taxWallet6",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2361,
															"src": "70634:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2862,
															"name": "_taxWallet7",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "70680:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2863,
															"name": "_taxWallet8",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "70692:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2855,
														"name": "FeeReceiversUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "70520:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$returns$__$",
															"typeString": "function (address payable,address payable,address payable,address payable,address payable,address payable,address payable,address payable)"
														}
													},
													"id": 2864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70520:184:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2865,
												"nodeType": "EmitStatement",
												"src": "70515:189:0"
											}
										]
									},
									"functionSelector": "23bc25ed",
									"id": 2867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2820,
												"name": "onlyOwner",
												"nameLocations": [
													"70212:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "70212:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "70212:9:0"
										}
									],
									"name": "setWallets",
									"nameLocation": "69921:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "taxWallet1",
												"nameLocation": "69954:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "69938:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69938:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "taxWallet2",
												"nameLocation": "69987:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "69971:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69971:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "taxWallet3",
												"nameLocation": "70020:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "70004:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70004:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "taxWallet4",
												"nameLocation": "70053:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "70037:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70037:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "taxWallet5",
												"nameLocation": "70086:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "70070:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70070:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "taxWallet6",
												"nameLocation": "70119:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "70103:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70103:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "taxWallet7",
												"nameLocation": "70152:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "70136:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70136:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "taxWallet8",
												"nameLocation": "70185:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "70169:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70169:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69931:271:0"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70222:0:0"
									},
									"scope": 3764,
									"src": "69912:800:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2895,
										"nodeType": "Block",
										"src": "70772:186:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2875,
																"name": "newValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2869,
																"src": "70791:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "70803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "70791:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61782074782063616e74206265206c6f776572207468616e20302e3125",
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "70806:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b48678a7f959c8227f181f7c2c299112f3184ec06c891164e6292e5cbfc1b57",
																"typeString": "literal_string \"Max tx cant be lower than 0.1%\""
															},
															"value": "Max tx cant be lower than 0.1%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b48678a7f959c8227f181f7c2c299112f3184ec06c891164e6292e5cbfc1b57",
																"typeString": "literal_string \"Max tx cant be lower than 0.1%\""
															}
														],
														"id": 2874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "70783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70783:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2880,
												"nodeType": "ExpressionStatement",
												"src": "70783:56:0"
											},
											{
												"expression": {
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2881,
														"name": "_txAmountLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2379,
														"src": "70850:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2882,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "70868:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "70868:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2884,
																		"name": "newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2869,
																		"src": "70884:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "70868:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2886,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "70867:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "70896:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "70867:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "70850:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2890,
												"nodeType": "ExpressionStatement",
												"src": "70850:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2892,
															"name": "_txAmountLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "70935:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2891,
														"name": "MaxTxAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "70916:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70916:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2894,
												"nodeType": "EmitStatement",
												"src": "70911:39:0"
											}
										]
									},
									"functionSelector": "620cc86c",
									"id": 2896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2872,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2871,
												"name": "onlyOwner",
												"nameLocations": [
													"70762:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "70762:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "70762:9:0"
										}
									],
									"name": "setTx",
									"nameLocation": "70729:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "newValue",
												"nameLocation": "70743:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "70735:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70734:18:0"
									},
									"returnParameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70772:0:0"
									},
									"scope": 3764,
									"src": "70720:238:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2924,
										"nodeType": "Block",
										"src": "71027:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2904,
																"name": "newValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2898,
																"src": "71046:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "71058:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "71046:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61782077616c6c65742063616e74206265206c6f776572207468616e20302e3125",
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "71061:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aabbfe6abbf40fbd028cb9073ee8b15b6e2d99ec95313010eb7f235b1f2fe0a8",
																"typeString": "literal_string \"Max wallet cant be lower than 0.1%\""
															},
															"value": "Max wallet cant be lower than 0.1%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aabbfe6abbf40fbd028cb9073ee8b15b6e2d99ec95313010eb7f235b1f2fe0a8",
																"typeString": "literal_string \"Max wallet cant be lower than 0.1%\""
															}
														],
														"id": 2903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "71038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71038:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2909,
												"nodeType": "ExpressionStatement",
												"src": "71038:60:0"
											},
											{
												"expression": {
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2910,
														"name": "_walletAmountLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "71109:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2911,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "71131:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71131:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2913,
																		"name": "newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2898,
																		"src": "71147:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "71131:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2915,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "71130:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "71159:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "71130:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "71109:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2919,
												"nodeType": "ExpressionStatement",
												"src": "71109:54:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2921,
															"name": "_walletAmountLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "71202:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2920,
														"name": "MaxWalletAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2415,
														"src": "71179:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71179:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2923,
												"nodeType": "EmitStatement",
												"src": "71174:47:0"
											}
										]
									},
									"functionSelector": "f1d5f517",
									"id": 2925,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2901,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2900,
												"name": "onlyOwner",
												"nameLocations": [
													"71017:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "71017:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "71017:9:0"
										}
									],
									"name": "setWalletLimit",
									"nameLocation": "70975:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "newValue",
												"nameLocation": "70998:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "70990:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70989:18:0"
									},
									"returnParameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71027:0:0"
									},
									"scope": 3764,
									"src": "70966:263:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "71348:199:0",
										"statements": [
											{
												"expression": {
													"id": 2942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2934,
														"name": "_swapbackMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2383,
														"src": "71359:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2935,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "71375:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71375:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2937,
																		"name": "taxSwapThreshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "71391:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "71375:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2939,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "71374:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "71411:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "71374:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "71359:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2943,
												"nodeType": "ExpressionStatement",
												"src": "71359:57:0"
											},
											{
												"expression": {
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2944,
														"name": "_swapbackMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "71427:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2945,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "71443:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 2946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71443:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2947,
																		"name": "maxTaxSwap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2929,
																		"src": "71459:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "71443:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2949,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "71442:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130303030",
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "71473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"src": "71442:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "71427:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2953,
												"nodeType": "ExpressionStatement",
												"src": "71427:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2955,
															"name": "taxSwapThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2927,
															"src": "71510:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2956,
															"name": "maxTaxSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2929,
															"src": "71528:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2954,
														"name": "SwapbackUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2427,
														"src": "71494:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71494:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2958,
												"nodeType": "EmitStatement",
												"src": "71489:50:0"
											}
										]
									},
									"functionSelector": "0313fc4b",
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2932,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2931,
												"name": "onlyOwner",
												"nameLocations": [
													"71338:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "71338:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "71338:9:0"
										}
									],
									"name": "setSwapback",
									"nameLocation": "71246:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "taxSwapThreshold",
												"nameLocation": "71276:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "71268:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "maxTaxSwap",
												"nameLocation": "71311:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "71303:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71257:71:0"
									},
									"returnParameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71348:0:0"
									},
									"scope": 3764,
									"src": "71237:310:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2974,
										"nodeType": "Block",
										"src": "71593:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2966,
															"name": "launchmode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "71612:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c61756e6368206d6f646520697320616c72656164792064697361626c6564",
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "71624:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0f002db592b5be6109b5b2d38d5808b6cb4f378d42702b7ab3603714a4191b6",
																"typeString": "literal_string \"Launch mode is already disabled\""
															},
															"value": "Launch mode is already disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0f002db592b5be6109b5b2d38d5808b6cb4f378d42702b7ab3603714a4191b6",
																"typeString": "literal_string \"Launch mode is already disabled\""
															}
														],
														"id": 2965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "71604:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71604:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2969,
												"nodeType": "ExpressionStatement",
												"src": "71604:54:0"
											},
											{
												"expression": {
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2970,
														"name": "launchmode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2401,
														"src": "71669:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "71682:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "71669:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2973,
												"nodeType": "ExpressionStatement",
												"src": "71669:18:0"
											}
										]
									},
									"functionSelector": "08ade0c9",
									"id": 2975,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2963,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2962,
												"name": "onlyOwner",
												"nameLocations": [
													"71583:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "71583:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "71583:9:0"
										}
									],
									"name": "setMode",
									"nameLocation": "71564:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71571:2:0"
									},
									"returnParameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71593:0:0"
									},
									"scope": 3764,
									"src": "71555:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3000,
										"nodeType": "Block",
										"src": "71743:196:0",
										"statements": [
											{
												"expression": {
													"id": 2983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2980,
														"name": "_txAmountLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2379,
														"src": "71754:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2981,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "71771:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71771:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "71754:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2984,
												"nodeType": "ExpressionStatement",
												"src": "71754:30:0"
											},
											{
												"expression": {
													"id": 2988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2985,
														"name": "_walletAmountLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "71795:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2986,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "71816:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71816:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "71795:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2989,
												"nodeType": "ExpressionStatement",
												"src": "71795:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2991,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "71864:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "71864:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2990,
														"name": "MaxTxAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "71845:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71845:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2994,
												"nodeType": "EmitStatement",
												"src": "71840:38:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2996,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "71917:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "71917:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2995,
														"name": "MaxWalletAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2415,
														"src": "71894:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71894:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2999,
												"nodeType": "EmitStatement",
												"src": "71889:42:0"
											}
										]
									},
									"functionSelector": "6ed6a48d",
									"id": 3001,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2978,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2977,
												"name": "onlyOwner",
												"nameLocations": [
													"71733:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "71733:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "71733:9:0"
										}
									],
									"name": "rmvLimits",
									"nameLocation": "71712:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71721:2:0"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71743:0:0"
									},
									"scope": 3764,
									"src": "71703:236:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3037,
										"nodeType": "Block",
										"src": "72015:222:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3011,
																"name": "buyTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3003,
																"src": "72034:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3939",
																"id": 3012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72044:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_99_by_1",
																	"typeString": "int_const 99"
																},
																"value": "99"
															},
															"src": "72034:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420627579207461782076616c7565",
															"id": 3014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72048:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0500c267170b18d75be8e7233421038dddb796794b8fcd4e203c684720ad20fd",
																"typeString": "literal_string \"Invalid buy tax value\""
															},
															"value": "Invalid buy tax value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0500c267170b18d75be8e7233421038dddb796794b8fcd4e203c684720ad20fd",
																"typeString": "literal_string \"Invalid buy tax value\""
															}
														],
														"id": 3010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "72026:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72026:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3016,
												"nodeType": "ExpressionStatement",
												"src": "72026:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3018,
																"name": "sellTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3005,
																"src": "72091:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3939",
																"id": 3019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72102:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_99_by_1",
																	"typeString": "int_const 99"
																},
																"value": "99"
															},
															"src": "72091:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073656c6c207461782076616c7565",
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72106:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bce9b06e18a1ef35f2a7bc8c816f18e7cbfc76a37f65a98145d42a22d949fc2",
																"typeString": "literal_string \"Invalid sell tax value\""
															},
															"value": "Invalid sell tax value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bce9b06e18a1ef35f2a7bc8c816f18e7cbfc76a37f65a98145d42a22d949fc2",
																"typeString": "literal_string \"Invalid sell tax value\""
															}
														],
														"id": 3017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "72083:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72083:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3023,
												"nodeType": "ExpressionStatement",
												"src": "72083:48:0"
											},
											{
												"expression": {
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3024,
														"name": "buyFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "72142:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3025,
														"name": "buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3003,
														"src": "72151:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "72142:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3027,
												"nodeType": "ExpressionStatement",
												"src": "72142:15:0"
											},
											{
												"expression": {
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3028,
														"name": "sellFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "72168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3029,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3005,
														"src": "72178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "72168:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3031,
												"nodeType": "ExpressionStatement",
												"src": "72168:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3033,
															"name": "buyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3003,
															"src": "72213:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3034,
															"name": "sellTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "72221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3032,
														"name": "FeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2421,
														"src": "72201:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72201:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3036,
												"nodeType": "EmitStatement",
												"src": "72196:33:0"
											}
										]
									},
									"functionSelector": "667f6526",
									"id": 3038,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3008,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3007,
												"name": "onlyOwner",
												"nameLocations": [
													"72005:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "72005:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "72005:9:0"
										}
									],
									"name": "setTax",
									"nameLocation": "71956:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "buyTax",
												"nameLocation": "71971:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "71963:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "sellTax",
												"nameLocation": "71987:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3038,
												"src": "71979:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71962:33:0"
									},
									"returnParameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72015:0:0"
									},
									"scope": 3764,
									"src": "71947:290:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3108,
										"nodeType": "Block",
										"src": "72275:435:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3042,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "72294:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "72298:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "72294:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3044,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "72308:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72308:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "72294:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206665652072656365697665722063616e2074726967676572",
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "72317:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_639231b681faef9b093cd01f96e56539124f8d5dd8170e82c6e8233e404e240f",
																"typeString": "literal_string \"Only fee receiver can trigger\""
															},
															"value": "Only fee receiver can trigger"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_639231b681faef9b093cd01f96e56539124f8d5dd8170e82c6e8233e404e240f",
																"typeString": "literal_string \"Only fee receiver can trigger\""
															}
														],
														"id": 3041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "72286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72286:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "ExpressionStatement",
												"src": "72286:63:0"
											},
											{
												"assignments": [
													3051
												],
												"declarations": [
													{
														"constant": false,
														"id": 3051,
														"mutability": "mutable",
														"name": "share",
														"nameLocation": "72365:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3108,
														"src": "72360:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3050,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "72360:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3059,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3054,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "72381:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "72373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3052,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "72373:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "72373:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72387:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "72373:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "38",
														"id": 3057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "72397:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "72373:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "72360:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3063,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "72430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3060,
															"name": "_taxWallet1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "72409:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72421:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "72409:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72409:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3065,
												"nodeType": "ExpressionStatement",
												"src": "72409:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3069,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "72468:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3066,
															"name": "_taxWallet2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "72447:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72459:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "72447:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72447:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3071,
												"nodeType": "ExpressionStatement",
												"src": "72447:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3075,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "72506:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3072,
															"name": "_taxWallet3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "72485:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72497:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "72485:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72485:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3077,
												"nodeType": "ExpressionStatement",
												"src": "72485:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3081,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "72544:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3078,
															"name": "_taxWallet4",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "72523:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72535:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "72523:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72523:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3083,
												"nodeType": "ExpressionStatement",
												"src": "72523:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3087,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "72582:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3084,
															"name": "_taxWallet5",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "72561:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72573:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "72561:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72561:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3089,
												"nodeType": "ExpressionStatement",
												"src": "72561:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3093,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "72620:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3090,
															"name": "_taxWallet6",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2361,
															"src": "72599:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72611:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "72599:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72599:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3095,
												"nodeType": "ExpressionStatement",
												"src": "72599:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3099,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "72658:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3096,
															"name": "_taxWallet7",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "72637:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72649:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "72637:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72637:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3101,
												"nodeType": "ExpressionStatement",
												"src": "72637:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3105,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "72696:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3102,
															"name": "_taxWallet8",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "72675:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72687:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "72675:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "72675:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3107,
												"nodeType": "ExpressionStatement",
												"src": "72675:27:0"
											}
										]
									},
									"functionSelector": "217b6da6",
									"id": 3109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeETH",
									"nameLocation": "72254:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72263:2:0"
									},
									"returnParameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72275:0:0"
									},
									"scope": 3764,
									"src": "72245:465:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3140,
										"nodeType": "Block",
										"src": "72820:115:0",
										"statements": [
											{
												"body": {
													"id": 3138,
													"nodeType": "Block",
													"src": "72875:53:0",
													"statements": [
														{
															"expression": {
																"id": 3136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3130,
																		"name": "_canTx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2407,
																		"src": "72890:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3134,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3131,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3112,
																			"src": "72897:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 3133,
																		"indexExpression": {
																			"id": 3132,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3120,
																			"src": "72904:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "72897:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "72890:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3135,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3114,
																	"src": "72910:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "72890:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3137,
															"nodeType": "ExpressionStatement",
															"src": "72890:26:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3123,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3120,
														"src": "72851:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3112,
															"src": "72855:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 3125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72862:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "72855:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "72851:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3139,
												"initializationExpression": {
													"assignments": [
														3120
													],
													"declarations": [
														{
															"constant": false,
															"id": 3120,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "72844:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3139,
															"src": "72836:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3119,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "72836:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3122,
													"initialValue": {
														"hexValue": "30",
														"id": 3121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "72848:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "72836:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "72870:3:0",
														"subExpression": {
															"id": 3127,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3120,
															"src": "72870:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3129,
													"nodeType": "ExpressionStatement",
													"src": "72870:3:0"
												},
												"nodeType": "ForStatement",
												"src": "72831:97:0"
											}
										]
									},
									"functionSelector": "1c537de5",
									"id": 3141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3117,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3116,
												"name": "onlyOwner",
												"nameLocations": [
													"72805:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "72805:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "72805:9:0"
										}
									],
									"name": "addAddress",
									"nameLocation": "72727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3112,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "72757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "72738:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3110,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "72738:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3111,
													"nodeType": "ArrayTypeName",
													"src": "72738:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "72770:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3141,
												"src": "72765:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "72765:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72737:40:0"
									},
									"returnParameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72820:0:0"
									},
									"scope": 3764,
									"src": "72718:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3161,
										"nodeType": "Block",
										"src": "73011:103:0",
										"statements": [
											{
												"expression": {
													"id": 3154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3150,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "73022:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3152,
														"indexExpression": {
															"id": 3151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3143,
															"src": "73041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "73022:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3153,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3145,
														"src": "73052:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "73022:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3155,
												"nodeType": "ExpressionStatement",
												"src": "73022:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3157,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3143,
															"src": "73090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3158,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3145,
															"src": "73099:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3156,
														"name": "ExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "73074:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73074:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3160,
												"nodeType": "EmitStatement",
												"src": "73069:37:0"
											}
										]
									},
									"functionSelector": "2dc4f5e6",
									"id": 3162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3147,
												"name": "onlyOwner",
												"nameLocations": [
													"73001:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "73001:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "73001:9:0"
										}
									],
									"name": "exemptFee",
									"nameLocation": "72952:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3143,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "72970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "72962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3145,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "72984:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "72979:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "72979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72961:30:0"
									},
									"returnParameters": {
										"id": 3149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73011:0:0"
									},
									"scope": 3764,
									"src": "72943:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3185,
										"nodeType": "Block",
										"src": "73411:196:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 3177,
															"name": "buyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "73444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3178,
															"name": "sellFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "73465:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3179,
															"name": "_txAmountLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "73487:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3180,
															"name": "_walletAmountLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "73516:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3181,
															"name": "_swapbackMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "73549:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3182,
															"name": "_swapbackMax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "73576:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3183,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "73429:170:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 3176,
												"id": 3184,
												"nodeType": "Return",
												"src": "73422:177:0"
											}
										]
									},
									"functionSelector": "ae601480",
									"id": 3186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewInfo",
									"nameLocation": "73131:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73139:2:0"
									},
									"returnParameters": {
										"id": 3176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "_buyFee",
												"nameLocation": "73214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3186,
												"src": "73206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "_sellFee",
												"nameLocation": "73244:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3186,
												"src": "73236:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3169,
												"mutability": "mutable",
												"name": "maxTxAmount",
												"nameLocation": "73275:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3186,
												"src": "73267:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3171,
												"mutability": "mutable",
												"name": "maxWalletSize",
												"nameLocation": "73309:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 3186,
												"src": "73301:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "taxSwapThreshold",
												"nameLocation": "73345:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 3186,
												"src": "73337:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "maxTaxSwap",
												"nameLocation": "73384:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3186,
												"src": "73376:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73191:214:0"
									},
									"scope": 3764,
									"src": "73122:485:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										845
									],
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "73736:2264:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3197,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3188,
																"src": "73755:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "73771:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "73763:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3198,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "73763:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "73763:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "73755:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 3203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "73775:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 3196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "73747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73747:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3205,
												"nodeType": "ExpressionStatement",
												"src": "73747:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3207,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3190,
																"src": "73834:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "73848:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "73840:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "73840:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "73840:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "73834:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "73852:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 3206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "73826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73826:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3215,
												"nodeType": "ExpressionStatement",
												"src": "73826:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3217,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "73909:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "73918:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "73909:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 3220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "73921:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 3216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "73901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73901:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3222,
												"nodeType": "ExpressionStatement",
												"src": "73901:64:0"
											},
											{
												"assignments": [
													3224
												],
												"declarations": [
													{
														"constant": false,
														"id": 3224,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "73984:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3446,
														"src": "73976:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "73976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3226,
												"initialValue": {
													"hexValue": "30",
													"id": 3225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "73996:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "73976:21:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3227,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3188,
																"src": "74012:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3228,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "74020:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "74020:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "74012:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3231,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3190,
																"src": "74031:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3232,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "74037:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "74037:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "74031:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "74012:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 3237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "74048:7:0",
														"subExpression": {
															"id": 3236,
															"name": "inSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2395,
															"src": "74049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "74012:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3418,
												"nodeType": "IfStatement",
												"src": "74008:1822:0",
												"trueBody": {
													"id": 3417,
													"nodeType": "Block",
													"src": "74057:1773:0",
													"statements": [
														{
															"condition": {
																"id": 3239,
																"name": "launchmode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2401,
																"src": "74076:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3252,
															"nodeType": "IfStatement",
															"src": "74072:89:0",
															"trueBody": {
																"id": 3251,
																"nodeType": "Block",
																"src": "74087:74:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 3247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"id": 3241,
																							"name": "_canTx",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2407,
																							"src": "74114:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																								"typeString": "mapping(address => bool)"
																							}
																						},
																						"id": 3243,
																						"indexExpression": {
																							"id": 3242,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3188,
																							"src": "74121:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "74114:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"baseExpression": {
																							"id": 3244,
																							"name": "_canTx",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2407,
																							"src": "74130:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																								"typeString": "mapping(address => bool)"
																							}
																						},
																						"id": 3246,
																						"indexExpression": {
																							"id": 3245,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3190,
																							"src": "74137:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "74130:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "74114:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "",
																					"id": 3248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "74142:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"id": 3240,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "74106:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "74106:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3250,
																		"nodeType": "ExpressionStatement",
																		"src": "74106:39:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 3261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3253,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "74177:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3254,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3192,
																			"src": "74189:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"id": 3255,
																					"name": "buyFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2371,
																					"src": "74199:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3256,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "74198:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "74189:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"hexValue": "313030",
																				"id": 3258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "74210:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"id": 3259,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "74209:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	},
																	"src": "74189:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "74177:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3262,
															"nodeType": "ExpressionStatement",
															"src": "74177:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3263,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3188,
																			"src": "74253:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 3264,
																			"name": "uniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "74261:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "74253:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3266,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "74295:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3269,
																					"name": "uniswapV2Router",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2388,
																					"src": "74309:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IDexRouter_$2337",
																						"typeString": "contract IDexRouter"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IDexRouter_$2337",
																						"typeString": "contract IDexRouter"
																					}
																				],
																				"id": 3268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "74301:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 3267,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "74301:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "74301:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "74295:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "74253:72:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "74346:23:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 3273,
																			"name": "_isExcludedFromFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2349,
																			"src": "74347:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 3275,
																		"indexExpression": {
																			"id": 3274,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "74366:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "74347:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "74253:116:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3315,
															"nodeType": "IfStatement",
															"src": "74231:568:0",
															"trueBody": {
																"id": 3314,
																"nodeType": "Block",
																"src": "74385:414:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3279,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3192,
																						"src": "74412:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 3280,
																						"name": "_txAmountLimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2379,
																						"src": "74422:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "74412:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4578636565647320746865205f7478416d6f756e744c696d69742e",
																					"id": 3282,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "74438:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_fc168bd2771777b2cdce369aa9bc412bad2d5af46ed939ba6a577a72c461f3ce",
																						"typeString": "literal_string \"Exceeds the _txAmountLimit.\""
																					},
																					"value": "Exceeds the _txAmountLimit."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_fc168bd2771777b2cdce369aa9bc412bad2d5af46ed939ba6a577a72c461f3ce",
																						"typeString": "literal_string \"Exceeds the _txAmountLimit.\""
																					}
																				],
																				"id": 3278,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "74404:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "74404:64:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3284,
																		"nodeType": "ExpressionStatement",
																		"src": "74404:64:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3290,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 3287,
																									"name": "to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3190,
																									"src": "74527:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 3286,
																								"name": "balanceOf",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 694,
																								"src": "74517:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																									"typeString": "function (address) view returns (uint256)"
																								}
																							},
																							"id": 3288,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "74517:13:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 3289,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3192,
																							"src": "74533:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "74517:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 3291,
																						"name": "_walletAmountLimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2381,
																						"src": "74543:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "74517:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4578636565647320746865206d617857616c6c657453697a652e",
																					"id": 3293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "74584:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c563e32fd325dd6083434381ad7ae564e6c211c512ec890aa906ea3486fb26c6",
																						"typeString": "literal_string \"Exceeds the maxWalletSize.\""
																					},
																					"value": "Exceeds the maxWalletSize."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_c563e32fd325dd6083434381ad7ae564e6c211c512ec890aa906ea3486fb26c6",
																						"typeString": "literal_string \"Exceeds the maxWalletSize.\""
																					}
																				],
																				"id": 3285,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "74487:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "74487:144:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3295,
																		"nodeType": "ExpressionStatement",
																		"src": "74487:144:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3296,
																					"name": "firstBlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2367,
																					"src": "74656:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 3297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "74669:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "74656:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 3299,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "74673:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 3300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "74679:6:0",
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"src": "74673:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "74656:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3310,
																		"nodeType": "IfStatement",
																		"src": "74652:102:0",
																		"trueBody": {
																			"id": 3309,
																			"nodeType": "Block",
																			"src": "74687:67:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 3306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "!",
																								"prefix": true,
																								"src": "74718:15:0",
																								"subExpression": {
																									"arguments": [
																										{
																											"id": 3304,
																											"name": "to",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3190,
																											"src": "74730:2:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"id": 3303,
																										"name": "isContract",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3481,
																										"src": "74719:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																											"typeString": "function (address) view returns (bool)"
																										}
																									},
																									"id": 3305,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "74719:14:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							],
																							"id": 3302,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "74710:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																								"typeString": "function (bool) pure"
																							}
																						},
																						"id": 3307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "74710:24:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3308,
																					"nodeType": "ExpressionStatement",
																					"src": "74710:24:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 3312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "74772:11:0",
																			"subExpression": {
																				"id": 3311,
																				"name": "_buyCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2377,
																				"src": "74772:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3313,
																		"nodeType": "ExpressionStatement",
																		"src": "74772:11:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3316,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3190,
																		"src": "74819:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 3317,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "74825:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "74819:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "74842:23:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 3319,
																			"name": "_isExcludedFromFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2349,
																			"src": "74843:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 3321,
																		"indexExpression": {
																			"id": 3320,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "74862:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "74843:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "74819:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3336,
															"nodeType": "IfStatement",
															"src": "74815:231:0",
															"trueBody": {
																"id": 3335,
																"nodeType": "Block",
																"src": "74867:179:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3331,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3329,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 3326,
																									"name": "to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3190,
																									"src": "74926:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 3325,
																								"name": "balanceOf",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 694,
																								"src": "74916:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																									"typeString": "function (address) view returns (uint256)"
																								}
																							},
																							"id": 3327,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "74916:13:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 3328,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3192,
																							"src": "74932:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "74916:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 3330,
																						"name": "_walletAmountLimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2381,
																						"src": "74942:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "74916:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4578636565647320746865206d617857616c6c657453697a652e",
																					"id": 3332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "74983:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c563e32fd325dd6083434381ad7ae564e6c211c512ec890aa906ea3486fb26c6",
																						"typeString": "literal_string \"Exceeds the maxWalletSize.\""
																					},
																					"value": "Exceeds the maxWalletSize."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_c563e32fd325dd6083434381ad7ae564e6c211c512ec890aa906ea3486fb26c6",
																						"typeString": "literal_string \"Exceeds the maxWalletSize.\""
																					}
																				],
																				"id": 3324,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "74886:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "74886:144:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3334,
																		"nodeType": "ExpressionStatement",
																		"src": "74886:144:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3337,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3190,
																		"src": "75066:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 3338,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "75072:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "75066:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3340,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3188,
																		"src": "75089:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 3343,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "75105:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MyToken_$3764",
																					"typeString": "contract MyToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MyToken_$3764",
																					"typeString": "contract MyToken"
																				}
																			],
																			"id": 3342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "75097:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3341,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "75097:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "75097:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "75089:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "75066:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3358,
															"nodeType": "IfStatement",
															"src": "75062:123:0",
															"trueBody": {
																"id": 3357,
																"nodeType": "Block",
																"src": "75112:73:0",
																"statements": [
																	{
																		"expression": {
																			"id": 3355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3347,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3224,
																				"src": "75131:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3351,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3348,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3192,
																						"src": "75143:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"id": 3349,
																								"name": "sellFee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2373,
																								"src": "75153:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3350,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "75152:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "75143:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"hexValue": "313030",
																							"id": 3352,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "75165:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						}
																					],
																					"id": 3353,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "75164:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					}
																				},
																				"src": "75143:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "75131:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3356,
																		"nodeType": "ExpressionStatement",
																		"src": "75131:38:0"
																	}
																]
															}
														},
														{
															"assignments": [
																3360
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3360,
																	"mutability": "mutable",
																	"name": "contractTokenBalance",
																	"nameLocation": "75209:20:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3417,
																	"src": "75201:28:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3359,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "75201:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3367,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3364,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "75250:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MyToken_$3764",
																					"typeString": "contract MyToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MyToken_$3764",
																					"typeString": "contract MyToken"
																				}
																			],
																			"id": 3363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "75242:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3362,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "75242:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "75242:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3361,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "75232:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 3366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75232:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "75201:55:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 3373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3369,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "75293:7:0",
																					"subExpression": {
																						"id": 3368,
																						"name": "inSwap",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2395,
																						"src": "75294:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 3372,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3370,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3190,
																						"src": "75321:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"id": 3371,
																						"name": "uniswapV2Pair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2390,
																						"src": "75327:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "75321:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "75293:47:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"id": 3374,
																				"name": "swapEnabled",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2398,
																				"src": "75361:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "75293:79:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3376,
																				"name": "contractTokenBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3360,
																				"src": "75393:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 3377,
																				"name": "_swapbackMin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2383,
																				"src": "75416:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "75393:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "75293:135:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3380,
																			"name": "_buyCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "75449:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 3381,
																			"name": "_preventSwapBefore",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "75461:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "75449:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "75293:186:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	},
																	"id": 3390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3384,
																		"name": "lastLiquifyTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2369,
																		"src": "75500:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 3387,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "75526:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 3388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "75532:6:0",
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"src": "75526:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "75519:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint64_$",
																				"typeString": "type(uint64)"
																			},
																			"typeName": {
																				"id": 3385,
																				"name": "uint64",
																				"nodeType": "ElementaryTypeName",
																				"src": "75519:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "75519:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "75500:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "75293:246:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3416,
															"nodeType": "IfStatement",
															"src": "75271:548:0",
															"trueBody": {
																"id": 3415,
																"nodeType": "Block",
																"src": "75555:264:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 3394,
																							"name": "contractTokenBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3360,
																							"src": "75595:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 3395,
																							"name": "_swapbackMax",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2385,
																							"src": "75617:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 3393,
																						"name": "min",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3465,
																						"src": "75591:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 3396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "75591:39:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3392,
																				"name": "swapTokensForEth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3593,
																				"src": "75574:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 3397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "75574:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3398,
																		"nodeType": "ExpressionStatement",
																		"src": "75574:57:0"
																	},
																	{
																		"assignments": [
																			3400
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3400,
																				"mutability": "mutable",
																				"name": "contractETHBalance",
																				"nameLocation": "75658:18:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 3415,
																				"src": "75650:26:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3399,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "75650:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3406,
																		"initialValue": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 3403,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "75687:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_MyToken_$3764",
																							"typeString": "contract MyToken"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_MyToken_$3764",
																							"typeString": "contract MyToken"
																						}
																					],
																					"id": 3402,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "75679:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 3401,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "75679:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "75679:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 3405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "75693:7:0",
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"src": "75679:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "75650:50:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3407,
																				"name": "contractETHBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3400,
																				"src": "75723:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "75744:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "75723:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3414,
																		"nodeType": "IfStatement",
																		"src": "75719:85:0",
																		"trueBody": {
																			"id": 3413,
																			"nodeType": "Block",
																			"src": "75747:57:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 3410,
																							"name": "sendETHToFee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3714,
																							"src": "75770:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																								"typeString": "function ()"
																							}
																						},
																						"id": 3411,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "75770:14:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3412,
																					"nodeType": "ExpressionStatement",
																					"src": "75770:14:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3419,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "75846:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "75858:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "75846:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3434,
												"nodeType": "IfStatement",
												"src": "75842:93:0",
												"trueBody": {
													"id": 3433,
													"nodeType": "Block",
													"src": "75861:74:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3425,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3188,
																		"src": "75892:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3428,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "75906:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MyToken_$3764",
																					"typeString": "contract MyToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MyToken_$3764",
																					"typeString": "contract MyToken"
																				}
																			],
																			"id": 3427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "75898:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3426,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "75898:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "75898:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3430,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3224,
																		"src": "75913:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3422,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "75876:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MyToken_$3764_$",
																			"typeString": "type(contract super MyToken)"
																		}
																	},
																	"id": 3424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "75882:9:0",
																	"memberName": "_transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 845,
																	"src": "75876:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 3431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75876:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3432,
															"nodeType": "ExpressionStatement",
															"src": "75876:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3438,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3188,
															"src": "75961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3439,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3190,
															"src": "75967:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3440,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3192,
																"src": "75971:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"id": 3441,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3224,
																		"src": "75981:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3442,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "75980:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "75971:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3435,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "75945:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyToken_$3764_$",
																"typeString": "type(contract super MyToken)"
															}
														},
														"id": 3437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "75951:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 845,
														"src": "75945:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75945:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3445,
												"nodeType": "ExpressionStatement",
												"src": "75945:47:0"
											}
										]
									},
									"id": 3447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "73624:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "73727:8:0"
									},
									"parameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3188,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "73652:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "73644:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3190,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "73675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "73667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "73696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "73688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73633:76:0"
									},
									"returnParameters": {
										"id": 3195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73736:0:0"
									},
									"scope": 3764,
									"src": "73615:2385:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3464,
										"nodeType": "Block",
										"src": "76074:41:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3456,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3449,
																	"src": "76093:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 3457,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3451,
																	"src": "76097:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "76093:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 3459,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "76092:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3461,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3449,
														"src": "76106:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "76092:15:0",
													"trueExpression": {
														"id": 3460,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3451,
														"src": "76102:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3455,
												"id": 3463,
												"nodeType": "Return",
												"src": "76085:22:0"
											}
										]
									},
									"id": 3465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "76017:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3449,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "76029:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3465,
												"src": "76021:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3451,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "76040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3465,
												"src": "76032:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76020:22:0"
									},
									"returnParameters": {
										"id": 3455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3465,
												"src": "76065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76064:9:0"
									},
									"scope": 3764,
									"src": "76008:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3480,
										"nodeType": "Block",
										"src": "76188:130:0",
										"statements": [
											{
												"assignments": [
													3473
												],
												"declarations": [
													{
														"constant": false,
														"id": 3473,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "76207:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3480,
														"src": "76199:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "76199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3474,
												"nodeType": "VariableDeclarationStatement",
												"src": "76199:12:0"
											},
											{
												"AST": {
													"nativeSrc": "76231:54:0",
													"nodeType": "YulBlock",
													"src": "76231:54:0",
													"statements": [
														{
															"nativeSrc": "76246:28:0",
															"nodeType": "YulAssignment",
															"src": "76246:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nativeSrc": "76266:7:0",
																		"nodeType": "YulIdentifier",
																		"src": "76266:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "76254:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "76254:11:0"
																},
																"nativeSrc": "76254:20:0",
																"nodeType": "YulFunctionCall",
																"src": "76254:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "76246:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "76246:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 3467,
														"isOffset": false,
														"isSlot": false,
														"src": "76266:7:0",
														"valueSize": 1
													},
													{
														"declaration": 3473,
														"isOffset": false,
														"isSlot": false,
														"src": "76246:4:0",
														"valueSize": 1
													}
												],
												"id": 3475,
												"nodeType": "InlineAssembly",
												"src": "76222:63:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3476,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3473,
														"src": "76302:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "76309:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "76302:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3471,
												"id": 3479,
												"nodeType": "Return",
												"src": "76295:15:0"
											}
										]
									},
									"id": 3481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "76132:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3467,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "76151:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "76143:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76143:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76142:17:0"
									},
									"returnParameters": {
										"id": 3471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "76182:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "76182:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76181:6:0"
									},
									"scope": 3764,
									"src": "76123:195:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3522,
										"nodeType": "Block",
										"src": "76358:370:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3485,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "76391:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "76395:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "76391:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3487,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "76406:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76406:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "76391:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2074726967676572",
															"id": 3490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "76428:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47002782db0b64c7f6254f162a29b9ff9bff559944c7515beed7c163790fade6",
																"typeString": "literal_string \"Only owner can trigger\""
															},
															"value": "Only owner can trigger"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47002782db0b64c7f6254f162a29b9ff9bff559944c7515beed7c163790fade6",
																"typeString": "literal_string \"Only owner can trigger\""
															}
														],
														"id": 3484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "76369:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76369:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3492,
												"nodeType": "ExpressionStatement",
												"src": "76369:94:0"
											},
											{
												"assignments": [
													3494
												],
												"declarations": [
													{
														"constant": false,
														"id": 3494,
														"mutability": "mutable",
														"name": "contractTokenBalance",
														"nameLocation": "76482:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 3522,
														"src": "76474:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "76474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3501,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3498,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "76523:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 3497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "76515:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3496,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "76515:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "76515:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3495,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "76505:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76505:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76474:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3503,
															"name": "contractTokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3494,
															"src": "76559:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3502,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3593,
														"src": "76542:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76542:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3505,
												"nodeType": "ExpressionStatement",
												"src": "76542:38:0"
											},
											{
												"assignments": [
													3507
												],
												"declarations": [
													{
														"constant": false,
														"id": 3507,
														"mutability": "mutable",
														"name": "contractETHBalance",
														"nameLocation": "76599:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 3522,
														"src": "76591:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "76591:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3513,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 3510,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "76628:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MyToken_$3764",
																	"typeString": "contract MyToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MyToken_$3764",
																	"typeString": "contract MyToken"
																}
															],
															"id": 3509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "76620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "76620:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "76620:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "76634:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "76620:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76591:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3514,
														"name": "contractETHBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3507,
														"src": "76656:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "76677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "76656:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3521,
												"nodeType": "IfStatement",
												"src": "76652:69:0",
												"trueBody": {
													"id": 3520,
													"nodeType": "Block",
													"src": "76680:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3517,
																	"name": "sendETHToFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3714,
																	"src": "76695:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 3518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76695:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3519,
															"nodeType": "ExpressionStatement",
															"src": "76695:14:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8f937cc4",
									"id": 3523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "triggerSwap",
									"nameLocation": "76335:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76346:2:0"
									},
									"returnParameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76358:0:0"
									},
									"scope": 3764,
									"src": "76326:402:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3592,
										"nodeType": "Block",
										"src": "76803:465:0",
										"statements": [
											{
												"expression": {
													"id": 3536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3530,
														"name": "lastLiquifyTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "76814:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3533,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "76839:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "76845:6:0",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "76839:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "76832:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 3531,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "76832:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 3535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "76832:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "76814:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 3537,
												"nodeType": "ExpressionStatement",
												"src": "76814:38:0"
											},
											{
												"assignments": [
													3542
												],
												"declarations": [
													{
														"constant": false,
														"id": 3542,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "76880:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3592,
														"src": "76863:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "76863:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3541,
															"nodeType": "ArrayTypeName",
															"src": "76863:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3548,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 3546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "76901:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 3545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "76887:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3543,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "76891:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3544,
															"nodeType": "ArrayTypeName",
															"src": "76891:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 3547,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76887:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76863:40:0"
											},
											{
												"expression": {
													"id": 3556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3549,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3542,
															"src": "76914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3551,
														"indexExpression": {
															"hexValue": "30",
															"id": 3550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "76919:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "76914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3554,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "76932:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MyToken_$3764",
																	"typeString": "contract MyToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MyToken_$3764",
																	"typeString": "contract MyToken"
																}
															],
															"id": 3553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "76924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3552,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "76924:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "76924:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "76914:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3557,
												"nodeType": "ExpressionStatement",
												"src": "76914:23:0"
											},
											{
												"expression": {
													"id": 3564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3558,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3542,
															"src": "76948:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3560,
														"indexExpression": {
															"hexValue": "31",
															"id": 3559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "76953:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "76948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3561,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "76958:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDexRouter_$2337",
																	"typeString": "contract IDexRouter"
																}
															},
															"id": 3562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "76974:4:0",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2250,
															"src": "76958:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 3563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "76958:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "76948:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3565,
												"nodeType": "ExpressionStatement",
												"src": "76948:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3569,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "77008:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 3568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "77000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3567,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "77000:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77000:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3573,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2388,
																	"src": "77023:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDexRouter_$2337",
																		"typeString": "contract IDexRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDexRouter_$2337",
																		"typeString": "contract IDexRouter"
																	}
																],
																"id": 3572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "77015:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "77015:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77015:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3575,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3525,
															"src": "77041:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3566,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1021,
															1089
														],
														"referencedDeclaration": 1021,
														"src": "76991:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76991:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3577,
												"nodeType": "ExpressionStatement",
												"src": "76991:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3581,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3525,
															"src": "77145:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "77171:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3583,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3542,
															"src": "77187:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 3586,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "77214:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 3585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "77206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3584,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "77206:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77206:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3588,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "77234:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "77240:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "77234:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3578,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2388,
															"src": "77064:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDexRouter_$2337",
																"typeString": "contract IDexRouter"
															}
														},
														"id": 3580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "77080:50:0",
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2336,
														"src": "77064:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 3590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "77064:196:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3591,
												"nodeType": "ExpressionStatement",
												"src": "77064:196:0"
											}
										]
									},
									"id": 3593,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3527,
												"name": "lockTheSwap",
												"nameLocations": [
													"76791:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2469,
												"src": "76791:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "76791:11:0"
										}
									],
									"name": "swapTokensForEth",
									"nameLocation": "76745:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "76770:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3593,
												"src": "76762:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76761:21:0"
									},
									"returnParameters": {
										"id": 3529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76803:0:0"
									},
									"scope": 3764,
									"src": "76736:532:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3713,
										"nodeType": "Block",
										"src": "77308:819:0",
										"statements": [
											{
												"assignments": [
													3597
												],
												"declarations": [
													{
														"constant": false,
														"id": 3597,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "77324:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3713,
														"src": "77319:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3596,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "77319:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3598,
												"nodeType": "VariableDeclarationStatement",
												"src": "77319:12:0"
											},
											{
												"assignments": [
													3600
												],
												"declarations": [
													{
														"constant": false,
														"id": 3600,
														"mutability": "mutable",
														"name": "share",
														"nameLocation": "77350:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3713,
														"src": "77342:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "77342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3608,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3603,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "77366:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyToken_$3764",
																		"typeString": "contract MyToken"
																	}
																],
																"id": 3602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "77358:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "77358:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "77358:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "77372:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "77358:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "38",
														"id": 3606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "77382:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "77358:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "77342:41:0"
											},
											{
												"expression": {
													"id": 3620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 3609,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3597,
																"src": "77395:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 3610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "77394:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 3618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "77462:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3613,
																			"name": "_taxWallet1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2351,
																			"src": "77416:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 3612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "77408:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3611,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "77408:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "77408:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "77429:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "77408:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 3617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 3616,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "77441:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "77408:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77408:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "77394:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3621,
												"nodeType": "ExpressionStatement",
												"src": "77394:81:0"
											},
											{
												"expression": {
													"id": 3633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 3622,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3597,
																"src": "77487:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 3623,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "77486:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 3631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "77554:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3626,
																			"name": "_taxWallet2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "77508:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 3625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "77500:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3624,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "77500:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "77500:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "77521:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "77500:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 3630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 3629,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "77533:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "77500:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77500:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "77486:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3634,
												"nodeType": "ExpressionStatement",
												"src": "77486:81:0"
											},
											{
												"expression": {
													"id": 3646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 3635,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3597,
																"src": "77579:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 3636,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "77578:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 3644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "77646:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3639,
																			"name": "_taxWallet3",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2355,
																			"src": "77600:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 3638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "77592:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3637,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "77592:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "77592:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "77613:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "77592:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 3643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 3642,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "77625:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "77592:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77592:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "77578:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3647,
												"nodeType": "ExpressionStatement",
												"src": "77578:81:0"
											},
											{
												"expression": {
													"id": 3659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 3648,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3597,
																"src": "77671:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 3649,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "77670:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 3657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "77738:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3652,
																			"name": "_taxWallet4",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2357,
																			"src": "77692:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 3651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "77684:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3650,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "77684:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "77684:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "77705:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "77684:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 3656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 3655,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "77717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "77684:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77684:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "77670:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3660,
												"nodeType": "ExpressionStatement",
												"src": "77670:81:0"
											},
											{
												"expression": {
													"id": 3672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 3661,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3597,
																"src": "77763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 3662,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "77762:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 3670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "77830:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3665,
																			"name": "_taxWallet5",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2359,
																			"src": "77784:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 3664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "77776:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3663,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "77776:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "77776:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "77797:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "77776:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 3669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 3668,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "77809:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "77776:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77776:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "77762:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3673,
												"nodeType": "ExpressionStatement",
												"src": "77762:81:0"
											},
											{
												"expression": {
													"id": 3685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 3674,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3597,
																"src": "77855:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 3675,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "77854:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 3683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "77922:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3678,
																			"name": "_taxWallet6",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2361,
																			"src": "77876:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 3677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "77868:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3676,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "77868:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "77868:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "77889:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "77868:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 3682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 3681,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "77901:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "77868:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77868:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "77854:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3686,
												"nodeType": "ExpressionStatement",
												"src": "77854:81:0"
											},
											{
												"expression": {
													"id": 3698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 3687,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3597,
																"src": "77947:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 3688,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "77946:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 3696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "78014:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3691,
																			"name": "_taxWallet7",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2363,
																			"src": "77968:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 3690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "77960:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3689,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "77960:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "77960:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "77981:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "77960:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 3695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 3694,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "77993:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "77960:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "77960:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "77946:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3699,
												"nodeType": "ExpressionStatement",
												"src": "77946:81:0"
											},
											{
												"expression": {
													"id": 3711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 3700,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3597,
																"src": "78039:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															null
														],
														"id": 3701,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "78038:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$__$",
															"typeString": "tuple(bool,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "",
																"id": 3709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "78106:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3704,
																			"name": "_taxWallet8",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2365,
																			"src": "78060:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 3703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "78052:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3702,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "78052:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "78052:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "78073:4:0",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "78052:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 3708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 3707,
																	"name": "share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "78085:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "78052:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "78052:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "78038:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3712,
												"nodeType": "ExpressionStatement",
												"src": "78038:81:0"
											}
										]
									},
									"id": 3714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendETHToFee",
									"nameLocation": "77285:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77297:2:0"
									},
									"returnParameters": {
										"id": 3595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77308:0:0"
									},
									"scope": 3764,
									"src": "77276:851:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3725,
										"nodeType": "Block",
										"src": "78195:36:0",
										"statements": [
											{
												"expression": {
													"id": 3723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3721,
														"name": "tokenCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "78206:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3722,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3716,
														"src": "78217:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "78206:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3724,
												"nodeType": "ExpressionStatement",
												"src": "78206:17:0"
											}
										]
									},
									"functionSelector": "da7fe652",
									"id": 3726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3718,
												"name": "onlyOwner",
												"nameLocations": [
													"78180:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "78180:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "78180:9:0"
										}
									],
									"name": "changeTokenCap",
									"nameLocation": "78142:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3716,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "78162:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3726,
												"src": "78157:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "78157:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78156:13:0"
									},
									"returnParameters": {
										"id": 3720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78195:0:0"
									},
									"scope": 3764,
									"src": "78133:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3748,
										"nodeType": "Block",
										"src": "78289:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3734,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2457,
																	"src": "78308:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 3735,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3728,
																	"src": "78323:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "78308:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3737,
																"name": "tokenCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "78333:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "78308:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537570706c79204c696d69742052656163686564",
															"id": 3739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "78343:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c31b5ed3f39966f1d9926012d999ae0f7f34d1ccb73b5ad58b2d8437d73e9a07",
																"typeString": "literal_string \"Supply Limit Reached\""
															},
															"value": "Supply Limit Reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c31b5ed3f39966f1d9926012d999ae0f7f34d1ccb73b5ad58b2d8437d73e9a07",
																"typeString": "literal_string \"Supply Limit Reached\""
															}
														],
														"id": 3733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "78300:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78300:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3741,
												"nodeType": "ExpressionStatement",
												"src": "78300:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3743,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "78383:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "78383:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3745,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3728,
															"src": "78392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3742,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "78377:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78377:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3747,
												"nodeType": "ExpressionStatement",
												"src": "78377:22:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 3749,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3730,
												"name": "onlyOwner",
												"nameLocations": [
													"78274:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "78274:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "78274:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "78246:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3728,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "78259:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3749,
												"src": "78251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78250:16:0"
									},
									"returnParameters": {
										"id": 3732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78289:0:0"
									},
									"scope": 3764,
									"src": "78237:170:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3762,
										"nodeType": "Block",
										"src": "78465:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3757,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "78482:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "78482:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3759,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3751,
															"src": "78491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3756,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "78476:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78476:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3761,
												"nodeType": "ExpressionStatement",
												"src": "78476:22:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 3763,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3754,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3753,
												"name": "onlyOwner",
												"nameLocations": [
													"78450:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1223,
												"src": "78450:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "78450:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "78422:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "78435:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3763,
												"src": "78427:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78426:16:0"
									},
									"returnParameters": {
										"id": 3755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78465:0:0"
									},
									"scope": 3764,
									"src": "78413:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3765,
							"src": "64963:13546:0",
							"usedErrors": [
								116,
								119,
								407,
								412,
								417,
								426,
								431,
								436,
								1164,
								1169,
								1358,
								1361,
								1735,
								1748,
								2023,
								2028
							],
							"usedEvents": [
								11,
								20,
								124,
								1175,
								1714,
								2411,
								2415,
								2421,
								2427,
								2445,
								2451,
								2453,
								2455
							]
						}
					],
					"src": "113:78396:0"
				},
				"id": 0
			}
		}
	}
}